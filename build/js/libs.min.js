function forms(){if(0<$("select").length){function e(){$.each($("select"),function(e,t){var i=e;$(this).hide(),0==$(this).parent(".select-block").length?$(this).wrap("<div class='select-block "+$(this).attr("class")+"-select-block'></div>"):$(this).parent(".select-block").find(".select").remove();var n,o,r="",s="",a=$(this).parent(".select-block"),l="<div class='select-options'><div class='select-options-scroll'><div class='select-options-list'>";"multiple"==$(this).attr("multiple")&&(r="multiple",s="check"),$.each($(this).find("option"),function(e,t){if(""!=$(this).attr("class")&&null!=$(this).attr("class"))$(this).attr("class");""!=$(this).attr("value")?l=""!=$(this).attr("data-icon")&&null!=$(this).attr("data-icon")?l+"<div data-value='"+$(this).attr("value")+"' class='select-options__value_"+i+" select-options__value value_"+$(this).val()+"  "+s+"'><div><img src="+$(this).attr("data-icon")+' alt=""></div><div>'+$(this).html()+"</div></div>":l+"<div data-value='"+$(this).attr("value")+"' class='select-options__value_"+i+" select-options__value value_"+$(this).val()+"  "+s+"'>"+$(this).html()+"</div>":"on"==$(this).parent().attr("data-label")&&0==a.find(".select__label").length&&a.prepend('<div class="select__label">'+$(this).html()+"</div>")}),l+="</div></div></div>","search"==$(this).attr("data-type")?(a.append("<div data-type='search' class='select_"+i+" select "+$(this).attr("class")+"__select "+r+"'><div class='select-title'><div class='select-title__arrow ion-ios-arrow-down'></div><input data-value='"+$(this).find('option[selected="selected"]').html()+"' class='select-title__value value_"+$(this).find('option[selected="selected"]').val()+"' /></div>"+l+"</div>"),$(".select_"+i).find("input.select-title__value").jcOnPageFilter({parentSectionClass:"select-options_"+i,parentLookupClass:"select-options__value_"+i,childBlockClass:"select-options__value_"+i})):"true"==$(this).attr("data-icon")?a.append("<div class='select_"+i+" select "+$(this).attr("class")+"__select icon "+r+"'><div class='select-title'><div class='select-title__arrow ion-ios-arrow-down'></div><div class='select-title__value value_"+$(this).find('option[selected="selected"]').val()+"'><div><img src="+$(this).find('option[selected="selected"]').attr("data-icon")+' alt=""></div><div>'+$(this).find('option[selected="selected"]').html()+"</div></div></div>"+l+"</div>"):a.append("<div class='select_"+i+" select "+$(this).attr("class")+"__select "+r+"'><div class='select-title'><div class='select-title__arrow ion-ios-arrow-down'></div><div class='select-title__value value_"+$(this).find('option[selected="selected"]').val()+"'>"+$(this).find('option[selected="selected"]').html()+"</div></div>"+l+"</div>"),""!=$(this).find('option[selected="selected"]').val()&&a.find(".select").addClass("focus"),1==a.find(".select-options__value").length&&a.find(".select").addClass("one"),"on"==$(this).attr("data-req")&&$(this).addClass("req"),$(".select_"+i+" .select-options-scroll").niceScroll(".select-options-list",(n=100,o=50,isMobile.any()&&(n=10,o=1),{cursorcolor:"#9B4E7C",cursorwidth:"12px",background:"",autohidemode:!1,bouncescroll:!1,cursorborderradius:"10px",scrollspeed:n,mousescrollstep:o,directionlockdeadzone:0,cursorborder:"0px solid #fff"}))})}e(),$("body").on("keyup","input.select-title__value",function(){$(".select").not($(this).parents(".select")).removeClass("active").find(".select-options").slideUp(50),$(this).parents(".select").addClass("active"),$(this).parents(".select").find(".select-options").slideDown(50,function(){$(this).find(".select-options-scroll").getNiceScroll().resize()}),$(this).parents(".select-block").find("select").val("")}),$("body").on("click",".select",function(){if(!$(this).hasClass("disabled")&&!$(this).hasClass("one")){$(".select").not(this).removeClass("active").find(".select-options").slideUp(50),$(this).toggleClass("active"),$(this).find(".select-options").slideToggle(50,function(){$(this).find(".select-options-scroll").getNiceScroll().resize()}),"search"==$(this).attr("data-type")&&($(this).hasClass("active")||searchselectreset(),$(this).find(".select-options__value").show());var e=$.trim($(this).find(".select-title__value").attr("class").replace("select-title__value",""));$(this).find(".select-options__value").show().removeClass("hide").removeClass("last"),""!=e&&$(this).find(".select-options__value."+e).hide().addClass("hide"),$(this).find(".select-options__value").last().hasClass("hide")&&$(this).find(".select-options__value").last().prev().addClass("last")}}),$("body").on("click",".select-options__value",function(){if($(this).parents(".select").hasClass("multiple"))return $(this).hasClass("active")?(0<$(this).parents(".select").find(".select-title__value span").length?$(this).parents(".select").find(".select-title__value").append('<span data-value="'+$(this).data("value")+'">, '+$(this).html()+"</span>"):($(this).parents(".select").find(".select-title__value").data("label",$(this).parents(".select").find(".select-title__value").html()),$(this).parents(".select").find(".select-title__value").html('<span data-value="'+$(this).data("value")+'">'+$(this).html()+"</span>")),$(this).parents(".select-block").find("select").find("option").eq($(this).index()+1).prop("selected",!0),$(this).parents(".select").addClass("focus")):($(this).parents(".select").find(".select-title__value").find('span[data-value="'+$(this).data("value")+'"]').remove(),0==$(this).parents(".select").find(".select-title__value span").length&&($(this).parents(".select").find(".select-title__value").html($(this).parents(".select").find(".select-title__value").data("label")),$(this).parents(".select").removeClass("focus")),$(this).parents(".select-block").find("select").find("option").eq($(this).index()+1).prop("selected",!1)),!1;"search"==$(this).parents(".select").attr("data-type")?($(this).parents(".select").find(".select-title__value").val($(this).html()),$(this).parents(".select").find(".select-title__value").attr("data-value",$(this).html())):($(this).parents(".select").find(".select-title__value").attr("class","select-title__value value_"+$(this).data("value")),$(this).parents(".select").find(".select-title__value").html($(this).html())),$(this).parents(".select-block").find("select").find("option").removeAttr("selected"),""!=$.trim($(this).data("value"))?($(this).parents(".select-block").find("select").val($(this).data("value")),$(this).parents(".select-block").find("select").find('option[value="'+$(this).data("value")+'"]').attr("selected","selected")):($(this).parents(".select-block").find("select").val($(this).html()),$(this).parents(".select-block").find("select").find('option[value="'+$(this).html()+'"]').attr("selected","selected")),""!=$(this).parents(".select-block").find("select").val()?$(this).parents(".select-block").find(".select").addClass("focus"):($(this).parents(".select-block").find(".select").removeClass("focus"),$(this).parents(".select-block").find(".select").removeClass("err"),$(this).parents(".select-block").parent().removeClass("err"),$(this).parents(".select-block").removeClass("err").find(".form__error").remove()),""!=!$(this).parents(".select").data("tags")&&0==$(this).parents(".form-tags").find('.form-tags__item[data-value="'+$(this).data("value")+'"]').length&&$(this).parents(".form-tags").find(".form-tags-items").append('<a data-value="'+$(this).data("value")+'" href="" class="form-tags__item">'+$(this).html()+'<span class="fa fa-times"></span></a>'),$(this).parents(".select-block").find("select").change(),"on"==$(this).parents(".select-block").find("select").data("update")&&e()}),$(document).on("click touchstart",function(e){$(e.target).is(".select *")||$(e.target).is(".select")||($(".select").removeClass("active"),$(".select-options").slideUp(50,function(){}),searchselectreset())}),$(document).on("keydown",function(e){27==e.which&&($(".select").removeClass("active"),$(".select-options").slideUp(50,function(){}),searchselectreset())})}function o(e,t){e.find(".rating__activeline").css({width:t+"%"})}$("input,textarea").focus(function(){$(this).val()==$(this).attr("data-value")&&($(this).addClass("focus"),$(this).parent().addClass("focus"),"pass"==$(this).attr("data-type")&&$(this).attr("type","password"),$(this).val("")),removeError($(this))}),$("input[data-value], textarea[data-value]").each(function(){""!=this.value&&this.value!=$(this).attr("data-value")||($(this).hasClass("l")&&0==$(this).parent().find(".form__label").length?$(this).parent().append('<div class="form__label">'+$(this).attr("data-value")+"</div>"):this.value=$(this).attr("data-value")),this.value!=$(this).attr("data-value")&&""!=this.value&&($(this).addClass("focus"),$(this).parent().addClass("focus"),$(this).hasClass("l")&&0==$(this).parent().find(".form__label").length&&$(this).parent().append('<div class="form__label">'+$(this).attr("data-value")+"</div>")),$(this).click(function(){this.value==$(this).attr("data-value")&&("pass"==$(this).attr("data-type")&&$(this).attr("type","password"),this.value="")}),$(this).blur(function(){""==this.value&&($(this).hasClass("l")||(this.value=$(this).attr("data-value")),$(this).removeClass("focus"),$(this).parent().removeClass("focus"),"pass"==$(this).attr("data-type")&&$(this).attr("type","text")),$(this).hasClass("vn")&&formValidate($(this))})}),$(".form-input__viewpass").click(function(e){$(this).hasClass("active")?$(this).parent().find("input").attr("type","password"):$(this).parent().find("input").attr("type","text"),$(this).toggleClass("active")}),$.each($("input.phone"),function(e,t){$(this).attr("type","tel"),$(this).focus(function(){$(this).inputmask("+7(999) 999 9999",{clearIncomplete:!0,clearMaskOnLostFocus:!0,onincomplete:function(){maskclear($(this))}}),$(this).addClass("focus"),$(this).parent().addClass("focus"),$(this).parent().removeClass("err"),$(this).removeClass("err")})}),$("input.phone").focusout(function(e){maskclear($(this))}),$.each($("input.num"),function(e,t){$(this).focus(function(){$(this).inputmask("9{1,1000}",{clearIncomplete:!0,placeholder:"",clearMaskOnLostFocus:!0,onincomplete:function(){maskclear($(this))}}),$(this).addClass("focus"),$(this).parent().addClass("focus"),$(this).parent().removeClass("err"),$(this).removeClass("err")})}),$("input.num").focusout(function(e){maskclear($(this))}),$.each($(".check"),function(e,t){1==$(this).find("input").prop("checked")&&$(this).addClass("active")}),$("body").off("click",".check",function(e){}),$("body").on("click",".check",function(e){$(this).hasClass("disable")||$(e.target).is("a")||($(this).toggleClass("active"),$(this).hasClass("active")?$(this).find("input").prop("checked",!0):$(this).find("input").prop("checked",!1))}),$.each($(".option.active"),function(e,t){$(this).find("input").prop("checked",!0)}),$(".option").click(function(e){$(this).hasClass("disable")||$(e.target).is("a")||($(this).hasClass("active")&&$(this).hasClass("order")&&$(this).toggleClass("orderactive"),$(this).parents(".options").find(".option").removeClass("active"),$(this).toggleClass("active"),$(this).children("input").prop("checked",!0))}),$(".rating.edit .star").hover(function(){var e=$(this).parents(".rating");e.find(".rating__activeline").css({width:"0%"});var t=($(this).index()+1)/e.find(".star").length*100;o(e,t)},function(){var e=$(this).parents(".rating");e.find(".star").removeClass("active");var t=e.find("input").val()/e.find(".star").length*100;o(e,t)}),$(".rating.edit .star").click(function(e){var t=$(this).parents(".rating"),i=$(this).index()+1;t.find("input").val(i);var n=i/t.find(".star").length*100;o(t,n)}),$.each($(".rating"),function(e,t){var i=$(this).find("input").val()/$(this).parent().find(".star").length*100;o($(this),i)}),$(".quantity__btn").click(function(e){var t=parseInt($(this).parent().find(".quantity__input").val());return $(this).hasClass("dwn")?--t<1&&(t=1):t+=1,$(this).parent().find(".quantity__input").val(t),!1}),0<$("#range").length&&($("#range").slider({range:!0,min:0,max:5e3,values:[0,5e3],slide:function(e,t){$("#rangefrom").val(t.values[0]),$("#rangeto").val(t.values[1]),$(this).find(".ui-slider-handle").eq(0).html("<span>"+t.values[0]+"</span>"),$(this).find(".ui-slider-handle").eq(1).html("<span>"+t.values[1]+"</span>")},change:function(e,t){t.values[0]!=$("#range").slider("option","min")||t.values[1]!=$("#range").slider("option","max")?$("#range").addClass("act"):$("#range").removeClass("act")}}),$("#rangefrom").val($("#range").slider("values",0)),$("#rangeto").val($("#range").slider("values",1)),$("#range").find(".ui-slider-handle").eq(0).html("<span>"+$("#range").slider("option","min")+"</span>"),$("#range").find(".ui-slider-handle").eq(1).html("<span>"+$("#range").slider("option","max")+"</span>"),$("#rangefrom").bind("change",function(){+$(this).val()>+$("#range").slider("option","max")&&$(this).val($("#range").slider("option","max")),+$(this).val()<+$("#range").slider("option","min")&&$(this).val($("#range").slider("option","min")),$("#range").slider("values",0,$(this).val())}),$("#rangeto").bind("change",function(){+$(this).val()>+$("#range").slider("option","max")&&$(this).val($("#range").slider("option","max")),+$(this).val()<+$("#range").slider("option","min")&&$(this).val($("#range").slider("option","min")),$("#range").slider("values",1,$(this).val())}),$("#range").find(".ui-slider-handle").eq(0).addClass("left"),$("#range").find(".ui-slider-handle").eq(1).addClass("right")),$(".form-addfile__input").change(function(i){if(""!=$(this).val()){var n=$(this);n.parents(".form-addfile").find("ul.form-addfile-list").html(""),$.each(i.target.files,function(e,t){0==n.parents(".form-addfile").find('ul.form-addfile-list>li:contains("'+i.target.files[e].name+'")').length&&n.parents(".form-addfile").find("ul.form-addfile-list").append("<li>"+i.target.files[e].name+"</li>")})}})}function digi(e){return e.toString().replace(/(\d)(?=(\d\d\d)+([^\d]|$))/g,"$1 ")}function formValidate(e){var t=0,i=e.parents("form");if("email"==e.attr("name")||e.hasClass("email")){if(e.val()!=e.attr("data-value")){var n=e.val().replace(" ","");e.val(n)}/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,8})+$/.test(e.val())&&e.val()!=e.attr("data-value")?removeError(e):(t++,addError(e))}else""==e.val()||e.val()==e.attr("data-value")?(t++,addError(e)):removeError(e);return"checkbox"==e.attr("type")&&(1==e.prop("checked")?e.removeClass("err").parent().removeClass("err"):(t++,e.addClass("err").parent().addClass("err"))),e.hasClass("name")&&(/^[А-Яа-яa-zA-Z-]+( [А-Яа-яa-zA-Z-]+)$/.test(e.val())||(t++,addError(e))),e.hasClass("pass-2")&&(i.find(".pass-1").val()!=i.find(".pass-2").val()?addError:removeError)(e),t}function formLoad(){$(".popup").hide(),$(".popup-message-body").hide(),$(".popup-message .popup-body").append('<div class="popup-loading"><div class="popup-loading__title">Идет загрузка...</div><div class="popup-loading__icon"></div></div>'),$(".popup-message").addClass("active").fadeIn(300)}function showMessageByClass(e){$(".popup").hide(),popupOpen("message."+e,"")}function showMessage(e){$(".popup-loading").remove(),$(".popup-message-body").show().html(e)}function clearForm(e){$.each(e.find(".input"),function(e,t){$(this).removeClass("focus").val($(this).data("value")),$(this).parent().removeClass("focus"),$(this).hasClass("phone")&&maskclear($(this))})}function addError(e){if(e.addClass("err"),e.parent().addClass("err"),e.parent().find(".form__error").remove(),e.hasClass("email")){var t="";null!=(t=(""==e.val()||(e.val(),e.attr("data-value")),e.data("error")))&&e.parent().append('<div class="form__error">'+t+"</div>")}else null!=e.data("error")&&0==e.parent().find(".form__error").length&&e.parent().append('<div class="form__error">'+e.data("error")+"</div>");0<e.parents(".select-block").length&&(e.parents(".select-block").parent().addClass("err"),e.parents(".select-block").find(".select").addClass("err"))}function addErrorByName(e,t,i){var n=e.find('[name="'+t+'"]');n.attr("data-error",i),addError(n)}function addFormError(e,t){e.find(".form__generalerror").show().html(t)}function removeFormError(e){e.find(".form__generalerror").hide().html("")}function removeError(e){e.removeClass("err"),e.parent().removeClass("err"),e.parent().find(".form__error").remove(),0<e.parents(".select-block").length&&(e.parents(".select-block").parent().removeClass("err"),e.parents(".select-block").find(".select").removeClass("err").removeClass("active"))}function removeFormErrors(e){e.find(".err").removeClass("err"),e.find(".form__error").remove()}function maskclear(e){""==e.val()&&(e.inputmask("remove"),e.hasClass("l")||e.val(e.attr("data-value")),e.removeClass("focus"),e.parent().removeClass("focus"))}function searchselectreset(){$.each($('.select[data-type="search"]'),function(e,t){var i=$(this).parent(),n=$(this).parent().find("select");1==$(this).find(".select-options__value:visible").length?($(this).addClass("focus"),$(this).parents(".select-block").find("select").val($(".select-options__value:visible").data("value")),$(this).find(".select-title__value").val($(".select-options__value:visible").html()),$(this).find(".select-title__value").attr("data-value",$(".select-options__value:visible").html())):""==n.val()&&($(this).removeClass("focus"),i.find("input.select-title__value").val(n.find('option[selected="selected"]').html()),i.find("input.select-title__value").attr("data-value",n.find('option[selected="selected"]').html()))})}var Plugins;function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function sectors(r){var e=$(window).outerWidth(),s=$(window).outerHeight(),a=80;e<768&&(a=50),0<r?$("header").addClass("scroll"):$("header").removeClass("scroll"),s<r?$("#up").fadeIn(300):$("#up").fadeOut(300),$.each($(".sector"),function(e,t){var i=$(this).outerHeight(),n=$(this).offset().top;if(n<=r&&r<=n+i-s&&($(".sector.scroll").removeClass("scroll"),$(this).addClass("scroll")),$(this).hasClass("scroll")&&(n<=r&&r<=n+i-s?$(this).hasClass("normalscroll")?$("body").addClass("scroll"):$("body").removeClass("scroll"):$(this).hasClass("normalscroll")&&$("body").removeClass("scroll")),n-s/1.5<r&&r<n+i?(0<$(".dotts").length&&dotts(e,0),$(this).addClass("active")):$(this).removeClass("active"),n-s<r&&r<n+i){if($(this).addClass("view"),$(this).hasClass("padding")){var o=a/100*(100-(n-r)/s*100);a<=o&&(o=a),$(this).css({paddingTop:o})}}else $(this).removeClass("view")})}function fix_block(e,t){$(window).outerWidth();var o=$(window).outerHeight(),r=$("header").outerHeight();function s(e){e.css({position:"relative",top:0,bottom:"auto",left:0})}$.each($(".__fix-block"),function(e,t){var i=$(this),n=i.find(".__fix-item");n.outerHeight()<o-(r+30)?(scr>i.offset().top-(r+15)?n.css({position:"fixed",bottom:"auto",top:15+r,width:i.outerWidth(),left:i.offset().left}):s(n),scr>i.outerHeight()+i.offset().top-(n.outerHeight()+(r+15))&&(i.css({position:"relative"}),n.css({position:"absolute",top:"auto",bottom:0,left:0}))):s(n)})}function dotts(e,t){1==t&&$.each($(".sector"),function(e,t){$(".dotts-list").append("<li></li>")}),$(".dotts-list li").removeClass("active").eq(e).addClass("active")}!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(C,e){"use strict";function m(e){return null!=e&&e===e.window}var t=[],n=Object.getPrototypeOf,a=t.slice,v=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,o=t.indexOf,i={},r=i.toString,g=i.hasOwnProperty,s=g.toString,c=s.call(Object),y={},k=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},$=C.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,i){var n,o,r=(i=i||$).createElement("script");if(r.text=e,t)for(n in u)(o=t[n]||t.getAttribute&&t.getAttribute(n))&&r.setAttribute(n,o);i.head.appendChild(r).parentNode.removeChild(r)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?i[r.call(e)]||"object":typeof e}var d="3.5.1",S=function(e,t){return new S.fn.init(e,t)};function p(e){var t=!!e&&"length"in e&&e.length,i=w(e);return!k(e)&&!m(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:d,constructor:S,length:0,toArray:function(){return a.call(this)},get:function(e){return null==e?a.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=S.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return S.each(this,e)},map:function(i){return this.pushStack(S.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(a.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(S.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(S.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,i,n,o,r,s=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[a]||{},a++),"object"==typeof s||k(s)||(s={}),a===l&&(s=this,a--);a<l;a++)if(null!=(e=arguments[a]))for(t in e)n=e[t],"__proto__"!==t&&s!==n&&(c&&n&&(S.isPlainObject(n)||(o=Array.isArray(n)))?(i=s[t],r=o&&!Array.isArray(i)?[]:o||S.isPlainObject(i)?i:{},o=!1,s[t]=S.extend(c,r,n)):void 0!==n&&(s[t]=n));return s},S.extend({expando:"jQuery"+(d+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==r.call(e))&&(!(t=n(e))||"function"==typeof(i=g.call(t,"constructor")&&t.constructor)&&s.call(i)===c)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,i){b(e,{nonce:t&&t.nonce},i)},each:function(e,t){var i,n=0;if(p(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},makeArray:function(e,t){var i=t||[];return null!=e&&(p(Object(e))?S.merge(i,"string"==typeof e?[e]:e):l.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:o.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,o=e.length;n<i;n++)e[o++]=t[n];return e.length=o,e},grep:function(e,t,i){for(var n=[],o=0,r=e.length,s=!i;o<r;o++)!t(e[o],o)!=s&&n.push(e[o]);return n},map:function(e,t,i){var n,o,r=0,s=[];if(p(e))for(n=e.length;r<n;r++)null!=(o=t(e[r],r,i))&&s.push(o);else for(r in e)null!=(o=t(e[r],r,i))&&s.push(o);return v(s)},guid:1,support:y}),"function"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var f=function(i){function d(e,t){var i="0x"+e.slice(1)-65536;return t||(i<0?String.fromCharCode(65536+i):String.fromCharCode(i>>10|55296,1023&i|56320))}function o(){x()}var e,f,b,r,s,h,p,m,w,l,c,x,C,a,$,v,u,g,y,S="sizzle"+ +new Date,k=i.document,T=0,n=0,A=le(),E=le(),P=le(),_=le(),O=function(e,t){return e===t&&(c=!0),0},D={}.hasOwnProperty,t=[],j=t.pop,N=t.push,M=t.push,H=t.slice,L=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},I="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",R="[\\x20\\t\\r\\n\\f]",q="(?:\\\\[\\da-fA-F]{1,6}"+R+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",F="\\["+R+"*("+q+")(?:"+R+"*([*^$|!~]?=)"+R+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+q+"))|)"+R+"*\\]",z=":("+q+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+F+")*)|.*)\\)|)",B=new RegExp(R+"+","g"),W=new RegExp("^"+R+"+|((?:^|[^\\\\])(?:\\\\.)*)"+R+"+$","g"),U=new RegExp("^"+R+"*,"+R+"*"),G=new RegExp("^"+R+"*([>+~]|"+R+")"+R+"*"),V=new RegExp(R+"|>"),K=new RegExp(z),X=new RegExp("^"+q+"$"),Y={ID:new RegExp("^#("+q+")"),CLASS:new RegExp("^\\.("+q+")"),TAG:new RegExp("^("+q+"|[*])"),ATTR:new RegExp("^"+F),PSEUDO:new RegExp("^"+z),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+R+"*(even|odd|(([+-]|)(\\d*)n|)"+R+"*(?:([+-]|)"+R+"*(\\d+)|))"+R+"*\\)|)","i"),bool:new RegExp("^(?:"+I+")$","i"),needsContext:new RegExp("^"+R+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+R+"*((?:-\\d)?\\d*)"+R+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,Z=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,ne=new RegExp("\\\\[\\da-fA-F]{1,6}"+R+"?|\\\\([^\\r\\n\\f])","g"),oe=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,re=function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},se=be(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{M.apply(t=H.call(k.childNodes),k.childNodes),t[k.childNodes.length].nodeType}catch(e){M={apply:t.length?function(e,t){N.apply(e,H.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function ae(t,e,i,n){var o,r,s,a,l,c,u,d=e&&e.ownerDocument,p=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return i;if(!n&&(x(e),e=e||C,$)){if(11!==p&&(l=te.exec(t)))if(o=l[1]){if(9===p){if(!(s=e.getElementById(o)))return i;if(s.id===o)return i.push(s),i}else if(d&&(s=d.getElementById(o))&&y(e,s)&&s.id===o)return i.push(s),i}else{if(l[2])return M.apply(i,e.getElementsByTagName(t)),i;if((o=l[3])&&f.getElementsByClassName&&e.getElementsByClassName)return M.apply(i,e.getElementsByClassName(o)),i}if(f.qsa&&!_[t+" "]&&(!v||!v.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(u=t,d=e,1===p&&(V.test(t)||G.test(t))){for((d=ie.test(t)&&ge(e.parentNode)||e)===e&&f.scope||((a=e.getAttribute("id"))?a=a.replace(oe,re):e.setAttribute("id",a=S)),r=(c=h(t)).length;r--;)c[r]=(a?"#"+a:":scope")+" "+ke(c[r]);u=c.join(",")}try{return M.apply(i,d.querySelectorAll(u)),i}catch(e){_(t,!0)}finally{a===S&&e.removeAttribute("id")}}}return m(t.replace(W,"$1"),e,i,n)}function le(){var n=[];return function e(t,i){return n.push(t+" ")>b.cacheLength&&delete e[n.shift()],e[t+" "]=i}}function ce(e){return e[S]=!0,e}function ue(e){var t=C.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function de(e,t){for(var i=e.split("|"),n=i.length;n--;)b.attrHandle[i[n]]=t}function pe(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function fe(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function he(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function me(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&se(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ve(s){return ce(function(r){return r=+r,ce(function(e,t){for(var i,n=s([],e.length,r),o=n.length;o--;)e[i=n[o]]&&(e[i]=!(t[i]=e[i]))})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in f=ae.support={},s=ae.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!Q.test(t||i&&i.nodeName||"HTML")},x=ae.setDocument=function(e){var t,i,n=e?e.ownerDocument||e:k;return n!=C&&9===n.nodeType&&n.documentElement&&(a=(C=n).documentElement,$=!s(C),k!=C&&(i=C.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",o,!1):i.attachEvent&&i.attachEvent("onunload",o)),f.scope=ue(function(e){return a.appendChild(e).appendChild(C.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),f.attributes=ue(function(e){return e.className="i",!e.getAttribute("className")}),f.getElementsByTagName=ue(function(e){return e.appendChild(C.createComment("")),!e.getElementsByTagName("*").length}),f.getElementsByClassName=ee.test(C.getElementsByClassName),f.getById=ue(function(e){return a.appendChild(e).id=S,!C.getElementsByName||!C.getElementsByName(S).length}),f.getById?(b.filter.ID=function(e){var t=e.replace(ne,d);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if(void 0!==t.getElementById&&$){var i=t.getElementById(e);return i?[i]:[]}}):(b.filter.ID=function(e){var i=e.replace(ne,d);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===i}},b.find.ID=function(e,t){if(void 0!==t.getElementById&&$){var i,n,o,r=t.getElementById(e);if(r){if((i=r.getAttributeNode("id"))&&i.value===e)return[r];for(o=t.getElementsByName(e),n=0;r=o[n++];)if((i=r.getAttributeNode("id"))&&i.value===e)return[r]}return[]}}),b.find.TAG=f.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):f.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],o=0,r=t.getElementsByTagName(e);if("*"!==e)return r;for(;i=r[o++];)1===i.nodeType&&n.push(i);return n},b.find.CLASS=f.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&$)return t.getElementsByClassName(e)},u=[],v=[],(f.qsa=ee.test(C.querySelectorAll))&&(ue(function(e){var t;a.appendChild(e).innerHTML="<a id='"+S+"'></a><select id='"+S+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+R+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||v.push("\\["+R+"*(?:value|"+I+")"),e.querySelectorAll("[id~="+S+"-]").length||v.push("~="),(t=C.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||v.push("\\["+R+"*name"+R+"*="+R+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||v.push(":checked"),e.querySelectorAll("a#"+S+"+*").length||v.push(".#.+[+~]"),e.querySelectorAll("\\\f"),v.push("[\\r\\n\\f]")}),ue(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=C.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&v.push("name"+R+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&v.push(":enabled",":disabled"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&v.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),v.push(",.*:")})),(f.matchesSelector=ee.test(g=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ue(function(e){f.disconnectedMatch=g.call(e,"*"),g.call(e,"[s!='']:x"),u.push("!=",z)}),v=v.length&&new RegExp(v.join("|")),u=u.length&&new RegExp(u.join("|")),t=ee.test(a.compareDocumentPosition),y=t||ee.test(a.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},O=t?function(e,t){if(e===t)return c=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!f.sortDetached&&t.compareDocumentPosition(e)===i?e==C||e.ownerDocument==k&&y(k,e)?-1:t==C||t.ownerDocument==k&&y(k,t)?1:l?L(l,e)-L(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return c=!0,0;var i,n=0,o=e.parentNode,r=t.parentNode,s=[e],a=[t];if(!o||!r)return e==C?-1:t==C?1:o?-1:r?1:l?L(l,e)-L(l,t):0;if(o===r)return pe(e,t);for(i=e;i=i.parentNode;)s.unshift(i);for(i=t;i=i.parentNode;)a.unshift(i);for(;s[n]===a[n];)n++;return n?pe(s[n],a[n]):s[n]==k?-1:a[n]==k?1:0}),C},ae.matches=function(e,t){return ae(e,null,null,t)},ae.matchesSelector=function(e,t){if(x(e),f.matchesSelector&&$&&!_[t+" "]&&(!u||!u.test(t))&&(!v||!v.test(t)))try{var i=g.call(e,t);if(i||f.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){_(t,!0)}return 0<ae(t,C,null,[e]).length},ae.contains=function(e,t){return(e.ownerDocument||e)!=C&&x(e),y(e,t)},ae.attr=function(e,t){(e.ownerDocument||e)!=C&&x(e);var i=b.attrHandle[t.toLowerCase()],n=i&&D.call(b.attrHandle,t.toLowerCase())?i(e,t,!$):void 0;return void 0!==n?n:f.attributes||!$?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},ae.escape=function(e){return(e+"").replace(oe,re)},ae.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ae.uniqueSort=function(e){var t,i=[],n=0,o=0;if(c=!f.detectDuplicates,l=!f.sortStable&&e.slice(0),e.sort(O),c){for(;t=e[o++];)t===e[o]&&(n=i.push(o));for(;n--;)e.splice(i[n],1)}return l=null,e},r=ae.getText=function(e){var t,i="",n=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=r(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[n++];)i+=r(t);return i},(b=ae.selectors={cacheLength:50,createPseudo:ce,match:Y,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ne,d),e[3]=(e[3]||e[4]||e[5]||"").replace(ne,d),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||ae.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&ae.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return Y.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&K.test(i)&&(t=h(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ne,d).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=A[e+" "];return t||(t=new RegExp("(^|"+R+")"+e+"("+R+"|$)"))&&A(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(i,n,o){return function(e){var t=ae.attr(e,i);return null==t?"!="===n:!n||(t+="","="===n?t===o:"!="===n?t!==o:"^="===n?o&&0===t.indexOf(o):"*="===n?o&&-1<t.indexOf(o):"$="===n?o&&t.slice(-o.length)===o:"~="===n?-1<(" "+t.replace(B," ")+" ").indexOf(o):"|="===n&&(t===o||t.slice(0,o.length+1)===o+"-"))}},CHILD:function(h,e,t,m,v){var g="nth"!==h.slice(0,3),y="last"!==h.slice(-4),k="of-type"===e;return 1===m&&0===v?function(e){return!!e.parentNode}:function(e,t,i){var n,o,r,s,a,l,c=g!=y?"nextSibling":"previousSibling",u=e.parentNode,d=k&&e.nodeName.toLowerCase(),p=!i&&!k,f=!1;if(u){if(g){for(;c;){for(s=e;s=s[c];)if(k?s.nodeName.toLowerCase()===d:1===s.nodeType)return!1;l=c="only"===h&&!l&&"nextSibling"}return!0}if(l=[y?u.firstChild:u.lastChild],y&&p){for(f=(a=(n=(o=(r=(s=u)[S]||(s[S]={}))[s.uniqueID]||(r[s.uniqueID]={}))[h]||[])[0]===T&&n[1])&&n[2],s=a&&u.childNodes[a];s=++a&&s&&s[c]||(f=a=0)||l.pop();)if(1===s.nodeType&&++f&&s===e){o[h]=[T,a,f];break}}else if(p&&(f=a=(n=(o=(r=(s=e)[S]||(s[S]={}))[s.uniqueID]||(r[s.uniqueID]={}))[h]||[])[0]===T&&n[1]),!1===f)for(;(s=++a&&s&&s[c]||(f=a=0)||l.pop())&&((k?s.nodeName.toLowerCase()!==d:1!==s.nodeType)||!++f||(p&&((o=(r=s[S]||(s[S]={}))[s.uniqueID]||(r[s.uniqueID]={}))[h]=[T,f]),s!==e)););return(f-=v)===m||f%m==0&&0<=f/m}}},PSEUDO:function(e,r){var t,s=b.pseudos[e]||b.setFilters[e.toLowerCase()]||ae.error("unsupported pseudo: "+e);return s[S]?s(r):1<s.length?(t=[e,e,"",r],b.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,t){for(var i,n=s(e,r),o=n.length;o--;)e[i=L(e,n[o])]=!(t[i]=n[o])}):function(e){return s(e,0,t)}):s}},pseudos:{not:ce(function(e){var n=[],o=[],a=p(e.replace(W,"$1"));return a[S]?ce(function(e,t,i,n){for(var o,r=a(e,null,n,[]),s=e.length;s--;)(o=r[s])&&(e[s]=!(t[s]=o))}):function(e,t,i){return n[0]=e,a(n,null,i,o),n[0]=null,!o.pop()}}),has:ce(function(t){return function(e){return 0<ae(t,e).length}}),contains:ce(function(t){return t=t.replace(ne,d),function(e){return-1<(e.textContent||r(e)).indexOf(t)}}),lang:ce(function(i){return X.test(i||"")||ae.error("unsupported lang: "+i),i=i.replace(ne,d).toLowerCase(),function(e){var t;do{if(t=$?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Z.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,i){return[i<0?i+t:i]}),even:ve(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:ve(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:ve(function(e,t,i){for(var n=i<0?i+t:t<i?t:i;0<=--n;)e.push(n);return e}),gt:ve(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=fe(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function ye(){}function ke(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function be(a,e,t){var l=e.dir,c=e.next,u=c||l,d=t&&"parentNode"===u,p=n++;return e.first?function(e,t,i){for(;e=e[l];)if(1===e.nodeType||d)return a(e,t,i);return!1}:function(e,t,i){var n,o,r,s=[T,p];if(i){for(;e=e[l];)if((1===e.nodeType||d)&&a(e,t,i))return!0}else for(;e=e[l];)if(1===e.nodeType||d)if(o=(r=e[S]||(e[S]={}))[e.uniqueID]||(r[e.uniqueID]={}),c&&c===e.nodeName.toLowerCase())e=e[l]||e;else{if((n=o[u])&&n[0]===T&&n[1]===p)return s[2]=n[2];if((o[u]=s)[2]=a(e,t,i))return!0}return!1}}function we(o){return 1<o.length?function(e,t,i){for(var n=o.length;n--;)if(!o[n](e,t,i))return!1;return!0}:o[0]}function xe(e,t,i,n,o){for(var r,s=[],a=0,l=e.length,c=null!=t;a<l;a++)(r=e[a])&&(i&&!i(r,n,o)||(s.push(r),c&&t.push(a)));return s}function Ce(f,h,m,v,g,e){return v&&!v[S]&&(v=Ce(v)),g&&!g[S]&&(g=Ce(g,e)),ce(function(e,t,i,n){var o,r,s,a=[],l=[],c=t.length,u=e||function(e,t,i){for(var n=0,o=t.length;n<o;n++)ae(e,t[n],i);return i}(h||"*",i.nodeType?[i]:i,[]),d=!f||!e&&h?u:xe(u,a,f,i,n),p=m?g||(e?f:c||v)?[]:t:d;if(m&&m(d,p,i,n),v)for(o=xe(p,l),v(o,[],i,n),r=o.length;r--;)(s=o[r])&&(p[l[r]]=!(d[l[r]]=s));if(e){if(g||f){if(g){for(o=[],r=p.length;r--;)(s=p[r])&&o.push(d[r]=s);g(null,p=[],o,n)}for(r=p.length;r--;)(s=p[r])&&-1<(o=g?L(e,s):a[r])&&(e[o]=!(t[o]=s))}}else p=xe(p===t?p.splice(c,p.length):p),g?g(null,t,p,n):M.apply(t,p)})}function $e(e){for(var o,t,i,n=e.length,r=b.relative[e[0].type],s=r||b.relative[" "],a=r?1:0,l=be(function(e){return e===o},s,!0),c=be(function(e){return-1<L(o,e)},s,!0),u=[function(e,t,i){var n=!r&&(i||t!==w)||((o=t).nodeType?l:c)(e,t,i);return o=null,n}];a<n;a++)if(t=b.relative[e[a].type])u=[be(we(u),t)];else{if((t=b.filter[e[a].type].apply(null,e[a].matches))[S]){for(i=++a;i<n&&!b.relative[e[i].type];i++);return Ce(1<a&&we(u),1<a&&ke(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(W,"$1"),t,a<i&&$e(e.slice(a,i)),i<n&&$e(e=e.slice(i)),i<n&&ke(e))}u.push(t)}return we(u)}function Se(v,g){function e(e,t,i,n,o){var r,s,a,l=0,c="0",u=e&&[],d=[],p=w,f=e||k&&b.find.TAG("*",o),h=T+=null==p?1:Math.random()||.1,m=f.length;for(o&&(w=t==C||t||o);c!==m&&null!=(r=f[c]);c++){if(k&&r){for(s=0,t||r.ownerDocument==C||(x(r),i=!$);a=v[s++];)if(a(r,t||C,i)){n.push(r);break}o&&(T=h)}y&&((r=!a&&r)&&l--,e&&u.push(r))}if(l+=c,y&&c!==l){for(s=0;a=g[s++];)a(u,d,t,i);if(e){if(0<l)for(;c--;)u[c]||d[c]||(d[c]=j.call(n));d=xe(d)}M.apply(n,d),o&&!e&&0<d.length&&1<l+g.length&&ae.uniqueSort(n)}return o&&(T=h,w=p),u}var y=0<g.length,k=0<v.length;return y?ce(e):e}return ye.prototype=b.filters=b.pseudos,b.setFilters=new ye,h=ae.tokenize=function(e,t){var i,n,o,r,s,a,l,c=E[e+" "];if(c)return t?0:c.slice(0);for(s=e,a=[],l=b.preFilter;s;){for(r in i&&!(n=U.exec(s))||(n&&(s=s.slice(n[0].length)||s),a.push(o=[])),i=!1,(n=G.exec(s))&&(i=n.shift(),o.push({value:i,type:n[0].replace(W," ")}),s=s.slice(i.length)),b.filter)!(n=Y[r].exec(s))||l[r]&&!(n=l[r](n))||(i=n.shift(),o.push({value:i,type:r,matches:n}),s=s.slice(i.length));if(!i)break}return t?s.length:s?ae.error(e):E(e,a).slice(0)},p=ae.compile=function(e,t){var i,n=[],o=[],r=P[e+" "];if(!r){for(i=(t=t||h(e)).length;i--;)(r=$e(t[i]))[S]?n.push(r):o.push(r);(r=P(e,Se(o,n))).selector=e}return r},m=ae.select=function(e,t,i,n){var o,r,s,a,l,c="function"==typeof e&&e,u=!n&&h(e=c.selector||e);if(i=i||[],1===u.length){if(2<(r=u[0]=u[0].slice(0)).length&&"ID"===(s=r[0]).type&&9===t.nodeType&&$&&b.relative[r[1].type]){if(!(t=(b.find.ID(s.matches[0].replace(ne,d),t)||[])[0]))return i;c&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(o=Y.needsContext.test(e)?0:r.length;o--&&(s=r[o],!b.relative[a=s.type]);)if((l=b.find[a])&&(n=l(s.matches[0].replace(ne,d),ie.test(r[0].type)&&ge(t.parentNode)||t))){if(r.splice(o,1),!(e=n.length&&ke(r)))return M.apply(i,n),i;break}}return(c||p(e,u))(n,t,!$,i,!t||ie.test(e)&&ge(t.parentNode)||t),i},f.sortStable=S.split("").sort(O).join("")===S,f.detectDuplicates=!!c,x(),f.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(C.createElement("fieldset"))}),ue(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||de("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),f.attributes&&ue(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||de("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute("disabled")})||de(I,function(e,t,i){var n;if(!i)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),ae}(C);S.find=f,S.expr=f.selectors,S.expr[":"]=S.expr.pseudos,S.uniqueSort=S.unique=f.uniqueSort,S.text=f.getText,S.isXMLDoc=f.isXML,S.contains=f.contains,S.escapeSelector=f.escape;function h(e,t,i){for(var n=[],o=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&S(e).is(i))break;n.push(e)}return n}function x(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var T=S.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var E=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function P(e,i,n){return k(i)?S.grep(e,function(e,t){return!!i.call(e,t,e)!==n}):i.nodeType?S.grep(e,function(e){return e===i!==n}):"string"!=typeof i?S.grep(e,function(e){return-1<o.call(i,e)!==n}):S.filter(i,e,n)}S.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?S.find.matchesSelector(n,e)?[n]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,i,n=this.length,o=this;if("string"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<n;t++)if(S.contains(o[t],this))return!0}));for(i=this.pushStack([]),t=0;t<n;t++)S.find(e,o[t],i);return 1<n?S.uniqueSort(i):i},filter:function(e){return this.pushStack(P(this,e||[],!1))},not:function(e){return this.pushStack(P(this,e||[],!0))},is:function(e){return!!P(this,"string"==typeof e&&T.test(e)?S(e):e||[],!1).length}});var _,O=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(S.fn.init=function(e,t,i){var n,o;if(!e)return this;if(i=i||_,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):k(e)?void 0!==i.ready?i.ready(e):e(S):S.makeArray(e,this);if(!(n="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:O.exec(e))||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:$,!0)),E.test(n[1])&&S.isPlainObject(t))for(n in t)k(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(o=$.getElementById(n[2]))&&(this[0]=o,this.length=1),this}).prototype=S.fn,_=S($);var D=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function N(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}S.fn.extend({has:function(e){var t=S(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var i,n=0,o=this.length,r=[],s="string"!=typeof e&&S(e);if(!T.test(e))for(;n<o;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(s?-1<s.index(i):1===i.nodeType&&S.find.matchesSelector(i,e))){r.push(i);break}return this.pushStack(1<r.length?S.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?o.call(S(e),this[0]):o.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,"parentNode")},parentsUntil:function(e,t,i){return h(e,"parentNode",i)},next:function(e){return N(e,"nextSibling")},prev:function(e){return N(e,"previousSibling")},nextAll:function(e){return h(e,"nextSibling")},prevAll:function(e){return h(e,"previousSibling")},nextUntil:function(e,t,i){return h(e,"nextSibling",i)},prevUntil:function(e,t,i){return h(e,"previousSibling",i)},siblings:function(e){return x((e.parentNode||{}).firstChild,e)},children:function(e){return x(e.firstChild)},contents:function(e){return null!=e.contentDocument&&n(e.contentDocument)?e.contentDocument:(A(e,"template")&&(e=e.content||e),S.merge([],e.childNodes))}},function(n,o){S.fn[n]=function(e,t){var i=S.map(this,o,e);return"Until"!==n.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=S.filter(t,i)),1<this.length&&(j[n]||S.uniqueSort(i),D.test(n)&&i.reverse()),this.pushStack(i)}});var M=/[^\x20\t\r\n\f]+/g;function H(e){return e}function L(e){throw e}function I(e,t,i,n){var o;try{e&&k(o=e.promise)?o.call(e).done(t).fail(i):e&&k(o=e.then)?o.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}S.Callbacks=function(n){var e,i;n="string"==typeof n?(e=n,i={},S.each(e.match(M)||[],function(e,t){i[t]=!0}),i):S.extend({},n);function o(){for(a=a||n.once,s=r=!0;c.length;u=-1)for(t=c.shift();++u<l.length;)!1===l[u].apply(t[0],t[1])&&n.stopOnFalse&&(u=l.length,t=!1);n.memory||(t=!1),r=!1,a&&(l=t?[]:"")}var r,t,s,a,l=[],c=[],u=-1,d={add:function(){return l&&(t&&!r&&(u=l.length-1,c.push(t)),function i(e){S.each(e,function(e,t){k(t)?n.unique&&d.has(t)||l.push(t):t&&t.length&&"string"!==w(t)&&i(t)})}(arguments),t&&!r&&o()),this},remove:function(){return S.each(arguments,function(e,t){for(var i;-1<(i=S.inArray(t,l,i));)l.splice(i,1),i<=u&&u--}),this},has:function(e){return e?-1<S.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return a=c=[],l=t="",this},disabled:function(){return!l},lock:function(){return a=c=[],t||r||(l=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],c.push(t),r||o()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!s}};return d},S.extend({Deferred:function(e){var r=[["notify","progress",S.Callbacks("memory"),S.Callbacks("memory"),2],["resolve","done",S.Callbacks("once memory"),S.Callbacks("once memory"),0,"resolved"],["reject","fail",S.Callbacks("once memory"),S.Callbacks("once memory"),1,"rejected"]],o="pending",s={state:function(){return o},always:function(){return a.done(arguments).fail(arguments),this},catch:function(e){return s.then(null,e)},pipe:function(){var o=arguments;return S.Deferred(function(n){S.each(r,function(e,t){var i=k(o[t[4]])&&o[t[4]];a[t[1]](function(){var e=i&&i.apply(this,arguments);e&&k(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,i?[e]:arguments)})}),o=null}).promise()},then:function(t,i,n){var l=0;function c(o,r,s,a){return function(){function e(){var e,t;if(!(o<l)){if((e=s.apply(i,n))===r.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,k(t)?a?t.call(e,c(l,r,H,a),c(l,r,L,a)):(l++,t.call(e,c(l,r,H,a),c(l,r,L,a),c(l,r,H,r.notifyWith))):(s!==H&&(i=void 0,n=[e]),(a||r.resolveWith)(i,n))}}var i=this,n=arguments,t=a?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),l<=o+1&&(s!==L&&(i=void 0,n=[e]),r.rejectWith(i,n))}};o?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),C.setTimeout(t))}}return S.Deferred(function(e){r[0][3].add(c(0,e,k(n)?n:H,e.notifyWith)),r[1][3].add(c(0,e,k(t)?t:H)),r[2][3].add(c(0,e,k(i)?i:L))}).promise()},promise:function(e){return null!=e?S.extend(e,s):s}},a={};return S.each(r,function(e,t){var i=t[2],n=t[5];s[t[1]]=i.add,n&&i.add(function(){o=n},r[3-e][2].disable,r[3-e][3].disable,r[0][2].lock,r[0][3].lock),i.add(t[3].fire),a[t[0]]=function(){return a[t[0]+"With"](this===a?void 0:this,arguments),this},a[t[0]+"With"]=i.fireWith}),s.promise(a),e&&e.call(a,a),a},when:function(e){function t(t){return function(e){o[t]=this,r[t]=1<arguments.length?a.call(arguments):e,--i||s.resolveWith(o,r)}}var i=arguments.length,n=i,o=Array(n),r=a.call(arguments),s=S.Deferred();if(i<=1&&(I(e,s.done(t(n)).resolve,s.reject,!i),"pending"===s.state()||k(r[n]&&r[n].then)))return s.then();for(;n--;)I(r[n],t(n),s.reject);return s.promise()}});var R=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&R.test(e.name)&&C.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},S.readyException=function(e){C.setTimeout(function(){throw e})};var q=S.Deferred();function F(){$.removeEventListener("DOMContentLoaded",F),C.removeEventListener("load",F),S.ready()}S.fn.ready=function(e){return q.then(e).catch(function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||q.resolveWith($,[S])}}),S.ready.then=q.then,"complete"===$.readyState||"loading"!==$.readyState&&!$.documentElement.doScroll?C.setTimeout(S.ready):($.addEventListener("DOMContentLoaded",F),C.addEventListener("load",F));var z=function(e,t,i,n,o,r,s){var a=0,l=e.length,c=null==i;if("object"===w(i))for(a in o=!0,i)z(e,t,a,i[a],!0,r,s);else if(void 0!==n&&(o=!0,k(n)||(s=!0),c&&(t=s?(t.call(e,n),null):(c=t,function(e,t,i){return c.call(S(e),i)})),t))for(;a<l;a++)t(e[a],i,s?n:n.call(e[a],a,t(e[a],i)));return o?e:c?t.call(e):l?t(e[0],i):r},B=/^-ms-/,W=/-([a-z])/g;function U(e,t){return t.toUpperCase()}function G(e){return e.replace(B,"ms-").replace(W,U)}function V(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function K(){this.expando=S.expando+K.uid++}K.uid=1,K.prototype={cache:function(e){var t=e[this.expando];return t||(t={},V(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,o=this.cache(e);if("string"==typeof t)o[G(t)]=i;else for(n in t)o[G(n)]=t[n];return o},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][G(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(G):(t=G(t))in n?[t]:t.match(M)||[]).length;for(;i--;)delete n[t[i]]}void 0!==t&&!S.isEmptyObject(n)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!S.isEmptyObject(t)}};var X=new K,Y=new K,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function J(e,t,i){var n,o;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i="true"===(o=i)||"false"!==o&&("null"===o?null:o===+o+""?+o:Q.test(o)?JSON.parse(o):o)}catch(e){}Y.set(e,t,i)}else i=void 0;return i}S.extend({hasData:function(e){return Y.hasData(e)||X.hasData(e)},data:function(e,t,i){return Y.access(e,t,i)},removeData:function(e,t){Y.remove(e,t)},_data:function(e,t,i){return X.access(e,t,i)},_removeData:function(e,t){X.remove(e,t)}}),S.fn.extend({data:function(i,e){var t,n,o,r=this[0],s=r&&r.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){Y.set(this,i)}):z(this,function(e){var t;if(r&&void 0===e)return void 0!==(t=Y.get(r,i))||void 0!==(t=J(r,i))?t:void 0;this.each(function(){Y.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(o=Y.get(r),1===r.nodeType&&!X.get(r,"hasDataAttrs"))){for(t=s.length;t--;)s[t]&&0===(n=s[t].name).indexOf("data-")&&(n=G(n.slice(5)),J(r,n,o[n]));X.set(r,"hasDataAttrs",!0)}return o},removeData:function(e){return this.each(function(){Y.remove(this,e)})}}),S.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=X.get(e,t),i&&(!n||Array.isArray(i)?n=X.access(e,t,S.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=S.queue(e,t),n=i.length,o=i.shift(),r=S._queueHooks(e,t);"inprogress"===o&&(o=i.shift(),n--),o&&("fx"===t&&i.unshift("inprogress"),delete r.stop,o.call(e,function(){S.dequeue(e,t)},r)),!n&&r&&r.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return X.get(e,i)||X.access(e,i,{empty:S.Callbacks("once memory").add(function(){X.remove(e,[t+"queue",i])})})}}),S.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?S.queue(this[0],t):void 0===i?this:this.each(function(){var e=S.queue(this,t,i);S._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--o||r.resolveWith(s,[s])}var n,o=1,r=S.Deferred(),s=this,a=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)(n=X.get(s[a],e+"queueHooks"))&&n.empty&&(o++,n.empty.add(i));return i(),r.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ie=["Top","Right","Bottom","Left"],ne=$.documentElement,oe=function(e){return S.contains(e.ownerDocument,e)},re={composed:!0};ne.getRootNode&&(oe=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(re)===e.ownerDocument});var se=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&oe(e)&&"none"===S.css(e,"display")};function ae(e,t,i,n){var o,r,s=20,a=n?function(){return n.cur()}:function(){return S.css(e,t,"")},l=a(),c=i&&i[3]||(S.cssNumber[t]?"":"px"),u=e.nodeType&&(S.cssNumber[t]||"px"!==c&&+l)&&te.exec(S.css(e,t));if(u&&u[3]!==c){for(l/=2,c=c||u[3],u=+l||1;s--;)S.style(e,t,u+c),(1-r)*(1-(r=a()/l||.5))<=0&&(s=0),u/=r;u*=2,S.style(e,t,u+c),i=i||[]}return i&&(u=+u||+l||0,o=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=c,n.start=u,n.end=o)),o}var le={};function ce(e,t){for(var i,n,o,r,s,a,l,c=[],u=0,d=e.length;u<d;u++)(n=e[u]).style&&(i=n.style.display,t?("none"===i&&(c[u]=X.get(n,"display")||null,c[u]||(n.style.display="")),""===n.style.display&&se(n)&&(c[u]=(l=s=r=void 0,s=(o=n).ownerDocument,a=o.nodeName,(l=le[a])||(r=s.body.appendChild(s.createElement(a)),l=S.css(r,"display"),r.parentNode.removeChild(r),"none"===l&&(l="block"),le[a]=l)))):"none"!==i&&(c[u]="none",X.set(n,"display",i)));for(u=0;u<d;u++)null!=c[u]&&(e[u].style.display=c[u]);return e}S.fn.extend({show:function(){return ce(this,!0)},hide:function(){return ce(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){se(this)?S(this).show():S(this).hide()})}});var ue,de,pe=/^(?:checkbox|radio)$/i,fe=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,he=/^$|^module$|\/(?:java|ecma)script/i;ue=$.createDocumentFragment().appendChild($.createElement("div")),(de=$.createElement("input")).setAttribute("type","radio"),de.setAttribute("checked","checked"),de.setAttribute("name","t"),ue.appendChild(de),y.checkClone=ue.cloneNode(!0).cloneNode(!0).lastChild.checked,ue.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!ue.cloneNode(!0).lastChild.defaultValue,ue.innerHTML="<option></option>",y.option=!!ue.lastChild;var me={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ve(e,t){var i;return i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&A(e,t)?S.merge([e],i):i}function ge(e,t){for(var i=0,n=e.length;i<n;i++)X.set(e[i],"globalEval",!t||X.get(t[i],"globalEval"))}me.tbody=me.tfoot=me.colgroup=me.caption=me.thead,me.th=me.td,y.option||(me.optgroup=me.option=[1,"<select multiple='multiple'>","</select>"]);var ye=/<|&#?\w+;/;function ke(e,t,i,n,o){for(var r,s,a,l,c,u,d=t.createDocumentFragment(),p=[],f=0,h=e.length;f<h;f++)if((r=e[f])||0===r)if("object"===w(r))S.merge(p,r.nodeType?[r]:r);else if(ye.test(r)){for(s=s||d.appendChild(t.createElement("div")),a=(fe.exec(r)||["",""])[1].toLowerCase(),l=me[a]||me._default,s.innerHTML=l[1]+S.htmlPrefilter(r)+l[2],u=l[0];u--;)s=s.lastChild;S.merge(p,s.childNodes),(s=d.firstChild).textContent=""}else p.push(t.createTextNode(r));for(d.textContent="",f=0;r=p[f++];)if(n&&-1<S.inArray(r,n))o&&o.push(r);else if(c=oe(r),s=ve(d.appendChild(r),"script"),c&&ge(s),i)for(u=0;r=s[u++];)he.test(r.type||"")&&i.push(r);return d}var be=/^key/,we=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,xe=/^([^.]*)(?:\.(.+)|)/;function Ce(){return!0}function $e(){return!1}function Se(e,t){return e===function(){try{return $.activeElement}catch(e){}}()==("focus"===t)}function Te(e,t,i,n,o,r){var s,a;if("object"==typeof t){for(a in"string"!=typeof i&&(n=n||i,i=void 0),t)Te(e,a,i,n,t[a],r);return e}if(null==n&&null==o?(o=i,n=i=void 0):null==o&&("string"==typeof i?(o=n,n=void 0):(o=n,n=i,i=void 0)),!1===o)o=$e;else if(!o)return e;return 1===r&&(s=o,(o=function(e){return S().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=S.guid++)),e.each(function(){S.event.add(this,t,o,n,i)})}function Ae(e,o,r){r?(X.set(e,o,!1),S.event.add(e,o,{namespace:!1,handler:function(e){var t,i,n=X.get(this,o);if(1&e.isTrigger&&this[o]){if(n.length)(S.event.special[o]||{}).delegateType&&e.stopPropagation();else if(n=a.call(arguments),X.set(this,o,n),t=r(this,o),this[o](),n!==(i=X.get(this,o))||t?X.set(this,o,!1):i={},n!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else n.length&&(X.set(this,o,{value:S.event.trigger(S.extend(n[0],S.Event.prototype),n.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===X.get(e,o)&&S.event.add(e,o,Ce)}S.event={global:{},add:function(t,e,i,n,o){var r,s,a,l,c,u,d,p,f,h,m,v=X.get(t);if(V(t))for(i.handler&&(i=(r=i).handler,o=r.selector),o&&S.find.matchesSelector(ne,o),i.guid||(i.guid=S.guid++),(l=v.events)||(l=v.events=Object.create(null)),(s=v.handle)||(s=v.handle=function(e){return void 0!==S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(M)||[""]).length;c--;)f=m=(a=xe.exec(e[c])||[])[1],h=(a[2]||"").split(".").sort(),f&&(d=S.event.special[f]||{},f=(o?d.delegateType:d.bindType)||f,d=S.event.special[f]||{},u=S.extend({type:f,origType:m,data:n,handler:i,guid:i.guid,selector:o,needsContext:o&&S.expr.match.needsContext.test(o),namespace:h.join(".")},r),(p=l[f])||((p=l[f]=[]).delegateCount=0,d.setup&&!1!==d.setup.call(t,n,h,s)||t.addEventListener&&t.addEventListener(f,s)),d.add&&(d.add.call(t,u),u.handler.guid||(u.handler.guid=i.guid)),o?p.splice(p.delegateCount++,0,u):p.push(u),S.event.global[f]=!0)},remove:function(e,t,i,n,o){var r,s,a,l,c,u,d,p,f,h,m,v=X.hasData(e)&&X.get(e);if(v&&(l=v.events)){for(c=(t=(t||"").match(M)||[""]).length;c--;)if(f=m=(a=xe.exec(t[c])||[])[1],h=(a[2]||"").split(".").sort(),f){for(d=S.event.special[f]||{},p=l[f=(n?d.delegateType:d.bindType)||f]||[],a=a[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=p.length;r--;)u=p[r],!o&&m!==u.origType||i&&i.guid!==u.guid||a&&!a.test(u.namespace)||n&&n!==u.selector&&("**"!==n||!u.selector)||(p.splice(r,1),u.selector&&p.delegateCount--,d.remove&&d.remove.call(e,u));s&&!p.length&&(d.teardown&&!1!==d.teardown.call(e,h,v.handle)||S.removeEvent(e,f,v.handle),delete l[f])}else for(f in l)S.event.remove(e,f+t[c],i,n,!0);S.isEmptyObject(l)&&X.remove(e,"handle events")}},dispatch:function(e){var t,i,n,o,r,s,a=new Array(arguments.length),l=S.event.fix(e),c=(X.get(this,"events")||Object.create(null))[l.type]||[],u=S.event.special[l.type]||{};for(a[0]=l,t=1;t<arguments.length;t++)a[t]=arguments[t];if(l.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,l)){for(s=S.event.handlers.call(this,l,c),t=0;(o=s[t++])&&!l.isPropagationStopped();)for(l.currentTarget=o.elem,i=0;(r=o.handlers[i++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==r.namespace&&!l.rnamespace.test(r.namespace)||(l.handleObj=r,l.data=r.data,void 0!==(n=((S.event.special[r.origType]||{}).handle||r.handler).apply(o.elem,a))&&!1===(l.result=n)&&(l.preventDefault(),l.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,l),l.result}},handlers:function(e,t){var i,n,o,r,s,a=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(r=[],s={},i=0;i<l;i++)void 0===s[o=(n=t[i]).selector+" "]&&(s[o]=n.needsContext?-1<S(o,this).index(c):S.find(o,this,null,[c]).length),s[o]&&r.push(n);r.length&&a.push({elem:c,handlers:r})}return c=this,l<t.length&&a.push({elem:c,handlers:t.slice(l)}),a},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:k(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&Ae(t,"click",Ce),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&Ae(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,"input")&&X.get(t,"click")||A(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ce:$e,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:$e,isPropagationStopped:$e,isImmediatePropagationStopped:$e,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ce,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ce,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ce,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&be.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&we.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},S.event.addProp),S.each({focus:"focusin",blur:"focusout"},function(e,t){S.event.special[e]={setup:function(){return Ae(this,e,Se),!1},trigger:function(){return Ae(this,e),!0},delegateType:t}}),S.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,o){S.event.special[e]={delegateType:o,bindType:o,handle:function(e){var t,i=e.relatedTarget,n=e.handleObj;return i&&(i===this||S.contains(this,i))||(e.type=n.origType,t=n.handler.apply(this,arguments),e.type=o),t}}}),S.fn.extend({on:function(e,t,i,n){return Te(this,e,t,i,n)},one:function(e,t,i,n){return Te(this,e,t,i,n,1)},off:function(e,t,i){var n,o;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,S(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=$e),this.each(function(){S.event.remove(this,e,i,t)});for(o in e)this.off(o,t,e[o]);return this}});var Ee=/<script|<style|<link/i,Pe=/checked\s*(?:[^=]|=\s*.checked.)/i,_e=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Oe(e,t){return A(e,"table")&&A(11!==t.nodeType?t:t.firstChild,"tr")&&S(e).children("tbody")[0]||e}function De(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function je(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Ne(e,t){var i,n,o,r,s,a;if(1===t.nodeType){if(X.hasData(e)&&(a=X.get(e).events))for(o in X.remove(t,"handle events"),a)for(i=0,n=a[o].length;i<n;i++)S.event.add(t,o,a[o][i]);Y.hasData(e)&&(r=Y.access(e),s=S.extend({},r),Y.set(t,s))}}function Me(i,n,o,r){n=v(n);var e,t,s,a,l,c,u=0,d=i.length,p=d-1,f=n[0],h=k(f);if(h||1<d&&"string"==typeof f&&!y.checkClone&&Pe.test(f))return i.each(function(e){var t=i.eq(e);h&&(n[0]=f.call(this,e,t.html())),Me(t,n,o,r)});if(d&&(t=(e=ke(n,i[0].ownerDocument,!1,i,r)).firstChild,1===e.childNodes.length&&(e=t),t||r)){for(a=(s=S.map(ve(e,"script"),De)).length;u<d;u++)l=e,u!==p&&(l=S.clone(l,!0,!0),a&&S.merge(s,ve(l,"script"))),o.call(i[u],l,u);if(a)for(c=s[s.length-1].ownerDocument,S.map(s,je),u=0;u<a;u++)l=s[u],he.test(l.type||"")&&!X.access(l,"globalEval")&&S.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?S._evalUrl&&!l.noModule&&S._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},c):b(l.textContent.replace(_e,""),l,c))}return i}function He(e,t,i){for(var n,o=t?S.filter(t,e):e,r=0;null!=(n=o[r]);r++)i||1!==n.nodeType||S.cleanData(ve(n)),n.parentNode&&(i&&oe(n)&&ge(ve(n,"script")),n.parentNode.removeChild(n));return e}S.extend({htmlPrefilter:function(e){return e},clone:function(e,t,i){var n,o,r,s,a,l,c,u=e.cloneNode(!0),d=oe(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(s=ve(u),n=0,o=(r=ve(e)).length;n<o;n++)a=r[n],l=s[n],"input"===(c=l.nodeName.toLowerCase())&&pe.test(a.type)?l.checked=a.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=a.defaultValue);if(t)if(i)for(r=r||ve(e),s=s||ve(u),n=0,o=r.length;n<o;n++)Ne(r[n],s[n]);else Ne(e,u);return 0<(s=ve(u,"script")).length&&ge(s,!d&&ve(e,"script")),u},cleanData:function(e){for(var t,i,n,o=S.event.special,r=0;void 0!==(i=e[r]);r++)if(V(i)){if(t=i[X.expando]){if(t.events)for(n in t.events)o[n]?S.event.remove(i,n):S.removeEvent(i,n,t.handle);i[X.expando]=void 0}i[Y.expando]&&(i[Y.expando]=void 0)}}}),S.fn.extend({detach:function(e){return He(this,e,!0)},remove:function(e){return He(this,e)},text:function(e){return z(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Me(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Oe(this,e).appendChild(e)})},prepend:function(){return Me(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Oe(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Me(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Me(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(ve(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return z(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ee.test(e)&&!me[(fe.exec(e)||["",""])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(S.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return Me(this,arguments,function(e){var t=this.parentNode;S.inArray(this,i)<0&&(S.cleanData(ve(this)),t&&t.replaceChild(e,this))},i)}}),S.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,s){S.fn[e]=function(e){for(var t,i=[],n=S(e),o=n.length-1,r=0;r<=o;r++)t=r===o?this:this.clone(!0),S(n[r])[s](t),l.apply(i,t.get());return this.pushStack(i)}});function Le(e,t,i){var n,o,r={};for(o in t)r[o]=e.style[o],e.style[o]=t[o];for(o in n=i.call(e),t)e.style[o]=r[o];return n}var Ie,Re,qe,Fe,ze,Be,We,Ue,Ge=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),Ve=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Ke=new RegExp(ie.join("|"),"i");function Xe(){if(Ue){We.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",Ue.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(We).appendChild(Ue);var e=C.getComputedStyle(Ue);Ie="1%"!==e.top,Be=12===Ye(e.marginLeft),Ue.style.right="60%",Fe=36===Ye(e.right),Re=36===Ye(e.width),Ue.style.position="absolute",qe=12===Ye(Ue.offsetWidth/3),ne.removeChild(We),Ue=null}}function Ye(e){return Math.round(parseFloat(e))}function Qe(e,t,i){var n,o,r,s,a=e.style;return(i=i||Ve(e))&&(""!==(s=i.getPropertyValue(t)||i[t])||oe(e)||(s=S.style(e,t)),!y.pixelBoxStyles()&&Ge.test(s)&&Ke.test(t)&&(n=a.width,o=a.minWidth,r=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=i.width,a.width=n,a.minWidth=o,a.maxWidth=r)),void 0!==s?s+"":s}function Ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}We=$.createElement("div"),(Ue=$.createElement("div")).style&&(Ue.style.backgroundClip="content-box",Ue.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===Ue.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return Xe(),Re},pixelBoxStyles:function(){return Xe(),Fe},pixelPosition:function(){return Xe(),Ie},reliableMarginLeft:function(){return Xe(),Be},scrollboxSize:function(){return Xe(),qe},reliableTrDimensions:function(){var e,t,i,n;return null==ze&&(e=$.createElement("table"),t=$.createElement("tr"),i=$.createElement("div"),e.style.cssText="position:absolute;left:-11111px",t.style.height="1px",i.style.height="9px",ne.appendChild(e).appendChild(t).appendChild(i),n=C.getComputedStyle(t),ze=3<parseInt(n.height),ne.removeChild(e)),ze}}));var Je=["Webkit","Moz","ms"],et=$.createElement("div").style,tt={};function it(e){var t=S.cssProps[e]||tt[e];return t||(e in et?e:tt[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=Je.length;i--;)if((e=Je[i]+t)in et)return e}(e)||e)}var nt=/^(none|table(?!-c[ea]).+)/,ot=/^--/,rt={position:"absolute",visibility:"hidden",display:"block"},st={letterSpacing:"0",fontWeight:"400"};function at(e,t,i){var n=te.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function lt(e,t,i,n,o,r){var s="width"===t?1:0,a=0,l=0;if(i===(n?"border":"content"))return 0;for(;s<4;s+=2)"margin"===i&&(l+=S.css(e,i+ie[s],!0,o)),n?("content"===i&&(l-=S.css(e,"padding"+ie[s],!0,o)),"margin"!==i&&(l-=S.css(e,"border"+ie[s]+"Width",!0,o))):(l+=S.css(e,"padding"+ie[s],!0,o),"padding"!==i?l+=S.css(e,"border"+ie[s]+"Width",!0,o):a+=S.css(e,"border"+ie[s]+"Width",!0,o));return!n&&0<=r&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-r-l-a-.5))||0),l}function ct(e,t,i){var n=Ve(e),o=(!y.boxSizingReliable()||i)&&"border-box"===S.css(e,"boxSizing",!1,n),r=o,s=Qe(e,t,n),a="offset"+t[0].toUpperCase()+t.slice(1);if(Ge.test(s)){if(!i)return s;s="auto"}return(!y.boxSizingReliable()&&o||!y.reliableTrDimensions()&&A(e,"tr")||"auto"===s||!parseFloat(s)&&"inline"===S.css(e,"display",!1,n))&&e.getClientRects().length&&(o="border-box"===S.css(e,"boxSizing",!1,n),(r=a in e)&&(s=e[a])),(s=parseFloat(s)||0)+lt(e,t,i||(o?"border":"content"),r,n,s)+"px"}function ut(e,t,i,n,o){return new ut.prototype.init(e,t,i,n,o)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=Qe(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,r,s,a=G(t),l=ot.test(t),c=e.style;if(l||(t=it(a)),s=S.cssHooks[t]||S.cssHooks[a],void 0===i)return s&&"get"in s&&void 0!==(o=s.get(e,!1,n))?o:c[t];"string"===(r=typeof i)&&(o=te.exec(i))&&o[1]&&(i=ae(e,t,o),r="number"),null!=i&&i==i&&("number"!==r||l||(i+=o&&o[3]||(S.cssNumber[a]?"":"px")),y.clearCloneStyle||""!==i||0!==t.indexOf("background")||(c[t]="inherit"),s&&"set"in s&&void 0===(i=s.set(e,i,n))||(l?c.setProperty(t,i):c[t]=i))}},css:function(e,t,i,n){var o,r,s,a=G(t);return ot.test(t)||(t=it(a)),(s=S.cssHooks[t]||S.cssHooks[a])&&"get"in s&&(o=s.get(e,!0,i)),void 0===o&&(o=Qe(e,t,n)),"normal"===o&&t in st&&(o=st[t]),""===i||i?(r=parseFloat(o),!0===i||isFinite(r)?r||0:o):o}}),S.each(["height","width"],function(e,l){S.cssHooks[l]={get:function(e,t,i){if(t)return!nt.test(S.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ct(e,l,i):Le(e,rt,function(){return ct(e,l,i)})},set:function(e,t,i){var n,o=Ve(e),r=!y.scrollboxSize()&&"absolute"===o.position,s=(r||i)&&"border-box"===S.css(e,"boxSizing",!1,o),a=i?lt(e,l,i,s,o):0;return s&&r&&(a-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(o[l])-lt(e,l,"border",!1,o)-.5)),a&&(n=te.exec(t))&&"px"!==(n[3]||"px")&&(e.style[l]=t,t=S.css(e,l)),at(0,t,a)}}}),S.cssHooks.marginLeft=Ze(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Qe(e,"marginLeft"))||e.getBoundingClientRect().left-Le(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),S.each({margin:"",padding:"",border:"Width"},function(o,r){S.cssHooks[o+r]={expand:function(e){for(var t=0,i={},n="string"==typeof e?e.split(" "):[e];t<4;t++)i[o+ie[t]+r]=n[t]||n[t-2]||n[0];return i}},"margin"!==o&&(S.cssHooks[o+r].set=at)}),S.fn.extend({css:function(e,t){return z(this,function(e,t,i){var n,o,r={},s=0;if(Array.isArray(t)){for(n=Ve(e),o=t.length;s<o;s++)r[t[s]]=S.css(e,t[s],!1,n);return r}return void 0!==i?S.style(e,t,i):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=ut).prototype={constructor:ut,init:function(e,t,i,n,o,r){this.elem=e,this.prop=i,this.easing=o||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=r||(S.cssNumber[i]?"":"px")},cur:function(){var e=ut.propHooks[this.prop];return e&&e.get?e.get(this):ut.propHooks._default.get(this)},run:function(e){var t,i=ut.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):ut.propHooks._default.set(this),this}}).init.prototype=ut.prototype,(ut.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=S.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[it(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=ut.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},S.fx=ut.prototype.init,S.fx.step={};var dt,pt,ft,ht,mt=/^(?:toggle|show|hide)$/,vt=/queueHooks$/;function gt(){pt&&(!1===$.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(gt):C.setTimeout(gt,S.fx.interval),S.fx.tick())}function yt(){return C.setTimeout(function(){dt=void 0}),dt=Date.now()}function kt(e,t){var i,n=0,o={height:e};for(t=t?1:0;n<4;n+=2-t)o["margin"+(i=ie[n])]=o["padding"+i]=e;return t&&(o.opacity=o.width=e),o}function bt(e,t,i){for(var n,o=(wt.tweeners[t]||[]).concat(wt.tweeners["*"]),r=0,s=o.length;r<s;r++)if(n=o[r].call(i,t,e))return n}function wt(r,e,t){var i,s,n=0,o=wt.prefilters.length,a=S.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var e=dt||yt(),t=Math.max(0,c.startTime+c.duration-e),i=1-(t/c.duration||0),n=0,o=c.tweens.length;n<o;n++)c.tweens[n].run(i);return a.notifyWith(r,[c,i,t]),i<1&&o?t:(o||a.notifyWith(r,[c,1,0]),a.resolveWith(r,[c]),!1)},c=a.promise({elem:r,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:dt||yt(),duration:t.duration,tweens:[],createTween:function(e,t){var i=S.Tween(r,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(i),i},stop:function(e){var t=0,i=e?c.tweens.length:0;if(s)return this;for(s=!0;t<i;t++)c.tweens[t].run(1);return e?(a.notifyWith(r,[c,1,0]),a.resolveWith(r,[c,e])):a.rejectWith(r,[c,e]),this}}),u=c.props;for(!function(e,t){var i,n,o,r,s;for(i in e)if(o=t[n=G(i)],r=e[i],Array.isArray(r)&&(o=r[1],r=e[i]=r[0]),i!==n&&(e[n]=r,delete e[i]),(s=S.cssHooks[n])&&"expand"in s)for(i in r=s.expand(r),delete e[n],r)i in e||(e[i]=r[i],t[i]=o);else t[n]=o}(u,c.opts.specialEasing);n<o;n++)if(i=wt.prefilters[n].call(c,r,u,c.opts))return k(i.stop)&&(S._queueHooks(c.elem,c.opts.queue).stop=i.stop.bind(i)),i;return S.map(u,bt,c),k(c.opts.start)&&c.opts.start.call(r,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),S.fx.timer(S.extend(l,{elem:r,anim:c,queue:c.opts.queue})),c}S.Animation=S.extend(wt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return ae(i.elem,e,te.exec(t),i),i}]},tweener:function(e,t){for(var i,n=0,o=(e=k(e)?(t=e,["*"]):e.match(M)).length;n<o;n++)i=e[n],wt.tweeners[i]=wt.tweeners[i]||[],wt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var n,o,r,s,a,l,c,u,d="width"in t||"height"in t,p=this,f={},h=e.style,m=e.nodeType&&se(e),v=X.get(e,"fxshow");for(n in i.queue||(null==(s=S._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,p.always(function(){p.always(function(){s.unqueued--,S.queue(e,"fx").length||s.empty.fire()})})),t)if(o=t[n],mt.test(o)){if(delete t[n],r=r||"toggle"===o,o===(m?"hide":"show")){if("show"!==o||!v||void 0===v[n])continue;m=!0}f[n]=v&&v[n]||S.style(e,n)}if((l=!S.isEmptyObject(t))||!S.isEmptyObject(f))for(n in d&&1===e.nodeType&&(i.overflow=[h.overflow,h.overflowX,h.overflowY],null==(c=v&&v.display)&&(c=X.get(e,"display")),"none"===(u=S.css(e,"display"))&&(c?u=c:(ce([e],!0),c=e.style.display||c,u=S.css(e,"display"),ce([e]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===S.css(e,"float")&&(l||(p.done(function(){h.display=c}),null==c&&(u=h.display,c="none"===u?"":u)),h.display="inline-block")),i.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=i.overflow[0],h.overflowX=i.overflow[1],h.overflowY=i.overflow[2]})),l=!1,f)l||(v?"hidden"in v&&(m=v.hidden):v=X.access(e,"fxshow",{display:c}),r&&(v.hidden=!m),m&&ce([e],!0),p.done(function(){for(n in m||ce([e]),X.remove(e,"fxshow"),f)S.style(e,n,f[n])})),l=bt(m?v[n]:0,n,p),n in v||(v[n]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?wt.prefilters.unshift(e):wt.prefilters.push(e)}}),S.speed=function(e,t,i){var n=e&&"object"==typeof e?S.extend({},e):{complete:i||!i&&t||k(e)&&e,duration:e,easing:i&&t||t&&!k(t)&&t};return S.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in S.fx.speeds?n.duration=S.fx.speeds[n.duration]:n.duration=S.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){k(n.old)&&n.old.call(this),n.queue&&S.dequeue(this,n.queue)},n},S.fn.extend({fadeTo:function(e,t,i,n){return this.filter(se).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(t,e,i,n){function o(){var e=wt(this,S.extend({},t),s);(r||X.get(this,"finish"))&&e.stop(!0)}var r=S.isEmptyObject(t),s=S.speed(e,i,n);return o.finish=o,r||!1===s.queue?this.each(o):this.queue(s.queue,o)},stop:function(o,e,r){function s(e){var t=e.stop;delete e.stop,t(r)}return"string"!=typeof o&&(r=e,e=o,o=void 0),e&&this.queue(o||"fx",[]),this.each(function(){var e=!0,t=null!=o&&o+"queueHooks",i=S.timers,n=X.get(this);if(t)n[t]&&n[t].stop&&s(n[t]);else for(t in n)n[t]&&n[t].stop&&vt.test(t)&&s(n[t]);for(t=i.length;t--;)i[t].elem!==this||null!=o&&i[t].queue!==o||(i[t].anim.stop(r),e=!1,i.splice(t,1));!e&&r||S.dequeue(this,o)})},finish:function(s){return!1!==s&&(s=s||"fx"),this.each(function(){var e,t=X.get(this),i=t[s+"queue"],n=t[s+"queueHooks"],o=S.timers,r=i?i.length:0;for(t.finish=!0,S.queue(this,s,[]),n&&n.stop&&n.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===s&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<r;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),S.each(["toggle","show","hide"],function(e,n){var o=S.fn[n];S.fn[n]=function(e,t,i){return null==e||"boolean"==typeof e?o.apply(this,arguments):this.animate(kt(n,!0),e,t,i)}}),S.each({slideDown:kt("show"),slideUp:kt("hide"),slideToggle:kt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,n){S.fn[e]=function(e,t,i){return this.animate(n,e,t,i)}}),S.timers=[],S.fx.tick=function(){var e,t=0,i=S.timers;for(dt=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||S.fx.stop(),dt=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){pt||(pt=!0,gt())},S.fx.stop=function(){pt=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(n,e){return n=S.fx&&S.fx.speeds[n]||n,e=e||"fx",this.queue(e,function(e,t){var i=C.setTimeout(e,n);t.stop=function(){C.clearTimeout(i)}})},ft=$.createElement("input"),ht=$.createElement("select").appendChild($.createElement("option")),ft.type="checkbox",y.checkOn=""!==ft.value,y.optSelected=ht.selected,(ft=$.createElement("input")).value="t",ft.type="radio",y.radioValue="t"===ft.value;var xt,Ct=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return z(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,i){var n,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===e.getAttribute?S.prop(e,t,i):(1===r&&S.isXMLDoc(e)||(o=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?xt:void 0)),void 0!==i?null===i?void S.removeAttr(e,t):o&&"set"in o&&void 0!==(n=o.set(e,i,t))?n:(e.setAttribute(t,i+""),i):o&&"get"in o&&null!==(n=o.get(e,t))?n:null==(n=S.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&A(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,o=t&&t.match(M);if(o&&1===e.nodeType)for(;i=o[n++];)e.removeAttribute(i)}}),xt={set:function(e,t,i){return!1===t?S.removeAttr(e,i):e.setAttribute(i,i),i}},S.each(S.expr.match.bool.source.match(/\w+/g),function(e,t){var s=Ct[t]||S.find.attr;Ct[t]=function(e,t,i){var n,o,r=t.toLowerCase();return i||(o=Ct[r],Ct[r]=n,n=null!=s(e,t,i)?r:null,Ct[r]=o),n}});var $t=/^(?:input|select|textarea|button)$/i,St=/^(?:a|area)$/i;function Tt(e){return(e.match(M)||[]).join(" ")}function At(e){return e.getAttribute&&e.getAttribute("class")||""}function Et(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(M)||[]}S.fn.extend({prop:function(e,t){return z(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,i){var n,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&S.isXMLDoc(e)||(t=S.propFix[t]||t,o=S.propHooks[t]),void 0!==i?o&&"set"in o&&void 0!==(n=o.set(e,i,t))?n:e[t]=i:o&&"get"in o&&null!==(n=o.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,"tabindex");return t?parseInt(t,10):$t.test(e.nodeName)||St.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),S.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,i,n,o,r,s,a,l=0;if(k(t))return this.each(function(e){S(this).addClass(t.call(this,e,At(this)))});if((e=Et(t)).length)for(;i=this[l++];)if(o=At(i),n=1===i.nodeType&&" "+Tt(o)+" "){for(s=0;r=e[s++];)n.indexOf(" "+r+" ")<0&&(n+=r+" ");o!==(a=Tt(n))&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,o,r,s,a,l=0;if(k(t))return this.each(function(e){S(this).removeClass(t.call(this,e,At(this)))});if(!arguments.length)return this.attr("class","");if((e=Et(t)).length)for(;i=this[l++];)if(o=At(i),n=1===i.nodeType&&" "+Tt(o)+" "){for(s=0;r=e[s++];)for(;-1<n.indexOf(" "+r+" ");)n=n.replace(" "+r+" "," ");o!==(a=Tt(n))&&i.setAttribute("class",a)}return this},toggleClass:function(o,t){var r=typeof o,s="string"==r||Array.isArray(o);return"boolean"==typeof t&&s?t?this.addClass(o):this.removeClass(o):k(o)?this.each(function(e){S(this).toggleClass(o.call(this,e,At(this),t),t)}):this.each(function(){var e,t,i,n;if(s)for(t=0,i=S(this),n=Et(o);e=n[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==o&&"boolean"!=r||((e=At(this))&&X.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===o?"":X.get(this,"__className__")||""))})},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&-1<(" "+Tt(At(i))+" ").indexOf(t))return!0;return!1}});var Pt=/\r/g;S.fn.extend({val:function(i){var n,e,o,t=this[0];return arguments.length?(o=k(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=o?i.call(this,e,S(this).val()):i)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?"":e+""})),(n=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,t,"value")||(this.value=t))})):t?(n=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(Pt,""):null==e?"":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,"value");return null!=t?t:Tt(S.text(e))}},select:{get:function(e){var t,i,n,o=e.options,r=e.selectedIndex,s="select-one"===e.type,a=s?null:[],l=s?r+1:o.length;for(n=r<0?l:s?r:0;n<l;n++)if(((i=o[n]).selected||n===r)&&!i.disabled&&(!i.parentNode.disabled||!A(i.parentNode,"optgroup"))){if(t=S(i).val(),s)return t;a.push(t)}return a},set:function(e,t){for(var i,n,o=e.options,r=S.makeArray(t),s=o.length;s--;)((n=o[s]).selected=-1<S.inArray(S.valHooks.option.get(n),r))&&(i=!0);return i||(e.selectedIndex=-1),r}}}}),S.each(["radio","checkbox"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in C;function _t(e){e.stopPropagation()}var Ot=/^(?:focusinfocus|focusoutblur)$/;S.extend(S.event,{trigger:function(e,t,i,n){var o,r,s,a,l,c,u,d,p=[i||$],f=g.call(e,"type")?e.type:e,h=g.call(e,"namespace")?e.namespace.split("."):[];if(r=d=s=i=i||$,3!==i.nodeType&&8!==i.nodeType&&!Ot.test(f+S.event.triggered)&&(-1<f.indexOf(".")&&(f=(h=f.split(".")).shift(),h.sort()),l=f.indexOf(":")<0&&"on"+f,(e=e[S.expando]?e:new S.Event(f,"object"==typeof e&&e)).isTrigger=n?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:S.makeArray(t,[e]),u=S.event.special[f]||{},n||!u.trigger||!1!==u.trigger.apply(i,t))){if(!n&&!u.noBubble&&!m(i)){for(a=u.delegateType||f,Ot.test(a+f)||(r=r.parentNode);r;r=r.parentNode)p.push(r),s=r;s===(i.ownerDocument||$)&&p.push(s.defaultView||s.parentWindow||C)}for(o=0;(r=p[o++])&&!e.isPropagationStopped();)d=r,e.type=1<o?a:u.bindType||f,(c=(X.get(r,"events")||Object.create(null))[e.type]&&X.get(r,"handle"))&&c.apply(r,t),(c=l&&r[l])&&c.apply&&V(r)&&(e.result=c.apply(r,t),!1===e.result&&e.preventDefault());return e.type=f,n||e.isDefaultPrevented()||u._default&&!1!==u._default.apply(p.pop(),t)||!V(i)||l&&k(i[f])&&!m(i)&&((s=i[l])&&(i[l]=null),S.event.triggered=f,e.isPropagationStopped()&&d.addEventListener(f,_t),i[f](),e.isPropagationStopped()&&d.removeEventListener(f,_t),S.event.triggered=void 0,s&&(i[l]=s)),e.result}},simulate:function(e,t,i){var n=S.extend(new S.Event,i,{type:e,isSimulated:!0});S.event.trigger(n,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return S.event.trigger(e,t,i,!0)}}),y.focusin||S.each({focus:"focusin",blur:"focusout"},function(i,n){function o(e){S.event.simulate(n,e.target,S.event.fix(e))}S.event.special[n]={setup:function(){var e=this.ownerDocument||this.document||this,t=X.access(e,n);t||e.addEventListener(i,o,!0),X.access(e,n,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=X.access(e,n)-1;t?X.access(e,n,t):(e.removeEventListener(i,o,!0),X.remove(e,n))}}});var Dt=C.location,jt={guid:Date.now()},Nt=/\?/;S.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||S.error("Invalid XML: "+e),t};var Mt=/\[\]$/,Ht=/\r?\n/g,Lt=/^(?:submit|button|image|reset|file)$/i,It=/^(?:input|select|textarea|keygen)/i;function Rt(i,e,n,o){var t;if(Array.isArray(e))S.each(e,function(e,t){n||Mt.test(i)?o(i,t):Rt(i+"["+("object"==typeof t&&null!=t?e:"")+"]",t,n,o)});else if(n||"object"!==w(e))o(i,e);else for(t in e)Rt(i+"["+t+"]",e[t],n,o)}S.param=function(e,t){function i(e,t){var i=k(t)?t():t;o[o.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)}var n,o=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){i(this.name,this.value)});else for(n in e)Rt(n,e[n],t,i);return o.join("&")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,"elements");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(":disabled")&&It.test(this.nodeName)&&!Lt.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var i=S(this).val();return null==i?null:Array.isArray(i)?S.map(i,function(e){return{name:t.name,value:e.replace(Ht,"\r\n")}}):{name:t.name,value:i.replace(Ht,"\r\n")}}).get()}});var qt=/%20/g,Ft=/#.*$/,zt=/([?&])_=[^&]*/,Bt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Wt=/^(?:GET|HEAD)$/,Ut=/^\/\//,Gt={},Vt={},Kt="*/".concat("*"),Xt=$.createElement("a");function Yt(r){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,n=0,o=e.toLowerCase().match(M)||[];if(k(t))for(;i=o[n++];)"+"===i[0]?(i=i.slice(1)||"*",(r[i]=r[i]||[]).unshift(t)):(r[i]=r[i]||[]).push(t)}}function Qt(t,o,r,s){var a={},l=t===Vt;function c(e){var n;return a[e]=!0,S.each(t[e]||[],function(e,t){var i=t(o,r,s);return"string"!=typeof i||l||a[i]?l?!(n=i):void 0:(o.dataTypes.unshift(i),c(i),!1)}),n}return c(o.dataTypes[0])||!a["*"]&&c("*")}function Zt(e,t){var i,n,o=S.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((o[i]?e:n=n||{})[i]=t[i]);return n&&S.extend(!0,e,n),e}Xt.href=Dt.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Dt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Dt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Kt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Zt(Zt(e,S.ajaxSettings),t):Zt(S.ajaxSettings,e)},ajaxPrefilter:Yt(Gt),ajaxTransport:Yt(Vt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var u,d,p,i,f,n,h,m,o,r,v=S.ajaxSetup({},t),g=v.context||v,y=v.context&&(g.nodeType||g.jquery)?S(g):S.event,k=S.Deferred(),b=S.Callbacks("once memory"),w=v.statusCode||{},s={},a={},l="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(h){if(!i)for(i={};t=Bt.exec(p);)i[t[1].toLowerCase()+" "]=(i[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=i[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=a[e.toLowerCase()]=a[e.toLowerCase()]||e,s[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)x.always(e[x.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||l;return u&&u.abort(t),c(0,t),this}};if(k.promise(x),v.url=((e||v.url||Dt.href)+"").replace(Ut,Dt.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(M)||[""],null==v.crossDomain){n=$.createElement("a");try{n.href=v.url,n.href=n.href,v.crossDomain=Xt.protocol+"//"+Xt.host!=n.protocol+"//"+n.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=S.param(v.data,v.traditional)),Qt(Gt,v,t,x),h)return x;for(o in(m=S.event&&v.global)&&0==S.active++&&S.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!Wt.test(v.type),d=v.url.replace(Ft,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(qt,"+")):(r=v.url.slice(d.length),v.data&&(v.processData||"string"==typeof v.data)&&(d+=(Nt.test(d)?"&":"?")+v.data,delete v.data),!1===v.cache&&(d=d.replace(zt,"$1"),r=(Nt.test(d)?"&":"?")+"_="+jt.guid+++r),v.url=d+r),v.ifModified&&(S.lastModified[d]&&x.setRequestHeader("If-Modified-Since",S.lastModified[d]),S.etag[d]&&x.setRequestHeader("If-None-Match",S.etag[d])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&x.setRequestHeader("Content-Type",v.contentType),x.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+Kt+"; q=0.01":""):v.accepts["*"]),v.headers)x.setRequestHeader(o,v.headers[o]);if(v.beforeSend&&(!1===v.beforeSend.call(g,x,v)||h))return x.abort();if(l="abort",b.add(v.complete),x.done(v.success),x.fail(v.error),u=Qt(Vt,v,t,x)){if(x.readyState=1,m&&y.trigger("ajaxSend",[x,v]),h)return x;v.async&&0<v.timeout&&(f=C.setTimeout(function(){x.abort("timeout")},v.timeout));try{h=!1,u.send(s,c)}catch(e){if(h)throw e;c(-1,e)}}else c(-1,"No Transport");function c(e,t,i,n){var o,r,s,a,l,c=t;h||(h=!0,f&&C.clearTimeout(f),u=void 0,p=n||"",x.readyState=0<e?4:0,o=200<=e&&e<300||304===e,i&&(a=function(e,t,i){for(var n,o,r,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(o in a)if(a[o]&&a[o].test(n)){l.unshift(o);break}if(l[0]in i)r=l[0];else{for(o in i){if(!l[0]||e.converters[o+" "+l[0]]){r=o;break}s=s||o}r=r||s}if(r)return r!==l[0]&&l.unshift(r),i[r]}(v,x,i)),!o&&-1<S.inArray("script",v.dataTypes)&&(v.converters["text script"]=function(){}),a=function(e,t,i,n){var o,r,s,a,l,c={},u=e.dataTypes.slice();if(u[1])for(s in e.converters)c[s.toLowerCase()]=e.converters[s];for(r=u.shift();r;)if(e.responseFields[r]&&(i[e.responseFields[r]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(s=c[l+" "+r]||c["* "+r]))for(o in c)if((a=o.split(" "))[1]===r&&(s=c[l+" "+a[0]]||c["* "+a[0]])){!0===s?s=c[o]:!0!==c[o]&&(r=a[0],u.unshift(a[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}(v,a,x,o),o?(v.ifModified&&((l=x.getResponseHeader("Last-Modified"))&&(S.lastModified[d]=l),(l=x.getResponseHeader("etag"))&&(S.etag[d]=l)),204===e||"HEAD"===v.type?c="nocontent":304===e?c="notmodified":(c=a.state,r=a.data,o=!(s=a.error))):(s=c,!e&&c||(c="error",e<0&&(e=0))),x.status=e,x.statusText=(t||c)+"",o?k.resolveWith(g,[r,c,x]):k.rejectWith(g,[x,c,s]),x.statusCode(w),w=void 0,m&&y.trigger(o?"ajaxSuccess":"ajaxError",[x,v,o?r:s]),b.fireWith(g,[x,c]),m&&(y.trigger("ajaxComplete",[x,v]),--S.active||S.event.trigger("ajaxStop")))}return x},getJSON:function(e,t,i){return S.get(e,t,i,"json")},getScript:function(e,t){return S.get(e,void 0,t,"script")}}),S.each(["get","post"],function(e,o){S[o]=function(e,t,i,n){return k(t)&&(n=n||i,i=t,t=void 0),S.ajax(S.extend({url:e,type:o,dataType:n,data:t,success:i},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),S._evalUrl=function(e,t,i){return S.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){S.globalEval(e,t,i)}})},S.fn.extend({wrapAll:function(e){var t;return this[0]&&(k(e)&&(e=e.call(this[0])),t=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return k(i)?this.each(function(e){S(this).wrapInner(i.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=k(t);return this.each(function(e){S(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var Jt={0:200,1223:204},ei=S.ajaxSettings.xhr();y.cors=!!ei&&"withCredentials"in ei,y.ajax=ei=!!ei,S.ajaxTransport(function(o){var r,s;if(y.cors||ei&&!o.crossDomain)return{send:function(e,t){var i,n=o.xhr();if(n.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(i in o.xhrFields)n[i]=o.xhrFields[i];for(i in o.mimeType&&n.overrideMimeType&&n.overrideMimeType(o.mimeType),o.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)n.setRequestHeader(i,e[i]);r=function(e){return function(){r&&(r=s=n.onload=n.onerror=n.onabort=n.ontimeout=n.onreadystatechange=null,"abort"===e?n.abort():"error"===e?"number"!=typeof n.status?t(0,"error"):t(n.status,n.statusText):t(Jt[n.status]||n.status,n.statusText,"text"!==(n.responseType||"text")||"string"!=typeof n.responseText?{binary:n.response}:{text:n.responseText},n.getAllResponseHeaders()))}},n.onload=r(),s=n.onerror=n.ontimeout=r("error"),void 0!==n.onabort?n.onabort=s:n.onreadystatechange=function(){4===n.readyState&&C.setTimeout(function(){r&&s()})},r=r("abort");try{n.send(o.hasContent&&o.data||null)}catch(e){if(r)throw e}},abort:function(){r&&r()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),S.ajaxTransport("script",function(i){var n,o;if(i.crossDomain||i.scriptAttrs)return{send:function(e,t){n=S("<script>").attr(i.scriptAttrs||{}).prop({charset:i.scriptCharset,src:i.url}).on("load error",o=function(e){n.remove(),o=null,e&&t("error"===e.type?404:200,e.type)}),$.head.appendChild(n[0])},abort:function(){o&&o()}}});var ti,ii=[],ni=/(=)\?(?=&|$)|\?\?/;S.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=ii.pop()||S.expando+"_"+jt.guid++;return this[e]=!0,e}}),S.ajaxPrefilter("json jsonp",function(e,t,i){var n,o,r,s=!1!==e.jsonp&&(ni.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&ni.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return n=e.jsonpCallback=k(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(ni,"$1"+n):!1!==e.jsonp&&(e.url+=(Nt.test(e.url)?"&":"?")+e.jsonp+"="+n),e.converters["script json"]=function(){return r||S.error(n+" was not called"),r[0]},e.dataTypes[0]="json",o=C[n],C[n]=function(){r=arguments},i.always(function(){void 0===o?S(C).removeProp(n):C[n]=o,e[n]&&(e.jsonpCallback=t.jsonpCallback,ii.push(n)),r&&k(o)&&o(r[0]),r=o=void 0}),"script"}),y.createHTMLDocument=((ti=$.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===ti.childNodes.length),S.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(y.createHTMLDocument?((n=(t=$.implementation.createHTMLDocument("")).createElement("base")).href=$.location.href,t.head.appendChild(n)):t=$),r=!i&&[],(o=E.exec(e))?[t.createElement(o[1])]:(o=ke([e],t,r),r&&r.length&&S(r).remove(),S.merge([],o.childNodes)));var n,o,r},S.fn.load=function(e,t,i){var n,o,r,s=this,a=e.indexOf(" ");return-1<a&&(n=Tt(e.slice(a)),e=e.slice(0,a)),k(t)?(i=t,t=void 0):t&&"object"==typeof t&&(o="POST"),0<s.length&&S.ajax({url:e,type:o||"GET",dataType:"html",data:t}).done(function(e){r=arguments,s.html(n?S("<div>").append(S.parseHTML(e)).find(n):e)}).always(i&&function(e,t){s.each(function(){i.apply(this,r||[e.responseText,t,e])})}),this},S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,i){var n,o,r,s,a,l,c=S.css(e,"position"),u=S(e),d={};"static"===c&&(e.style.position="relative"),a=u.offset(),r=S.css(e,"top"),l=S.css(e,"left"),o=("absolute"===c||"fixed"===c)&&-1<(r+l).indexOf("auto")?(s=(n=u.position()).top,n.left):(s=parseFloat(r)||0,parseFloat(l)||0),k(t)&&(t=t.call(e,i,S.extend({},a))),null!=t.top&&(d.top=t.top-a.top+s),null!=t.left&&(d.left=t.left-a.left+o),"using"in t?t.using.call(e,d):("number"==typeof d.top&&(d.top+="px"),"number"==typeof d.left&&(d.left+="px"),u.css(d))}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],o={top:0,left:0};if("fixed"===S.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===S.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((o=S(e).offset()).top+=S.css(e,"borderTopWidth",!0),o.left+=S.css(e,"borderLeftWidth",!0))}return{top:t.top-o.top-S.css(n,"marginTop",!0),left:t.left-o.left-S.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===S.css(e,"position");)e=e.offsetParent;return e||ne})}}),S.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,o){var r="pageYOffset"===o;S.fn[t]=function(e){return z(this,function(e,t,i){var n;if(m(e)?n=e:9===e.nodeType&&(n=e.defaultView),void 0===i)return n?n[o]:e[t];n?n.scrollTo(r?n.pageXOffset:i,r?i:n.pageYOffset):e[t]=i},t,e,arguments.length)}}),S.each(["top","left"],function(e,i){S.cssHooks[i]=Ze(y.pixelPosition,function(e,t){if(t)return t=Qe(e,i),Ge.test(t)?S(e).position()[i]+"px":t})}),S.each({Height:"height",Width:"width"},function(s,a){S.each({padding:"inner"+s,content:a,"":"outer"+s},function(n,r){S.fn[r]=function(e,t){var i=arguments.length&&(n||"boolean"!=typeof e),o=n||(!0===e||!0===t?"margin":"border");return z(this,function(e,t,i){var n;return m(e)?0===r.indexOf("outer")?e["inner"+s]:e.document.documentElement["client"+s]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+s],n["scroll"+s],e.body["offset"+s],n["offset"+s],n["client"+s])):void 0===i?S.css(e,t,o):S.style(e,t,i,o)},a,i?e:void 0,i)}})}),S.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){S.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}});var oi=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;S.proxy=function(e,t){var i,n,o;if("string"==typeof t&&(i=e[t],t=e,e=i),k(e))return n=a.call(arguments,2),(o=function(){return e.apply(t||this,n.concat(a.call(arguments)))}).guid=e.guid=e.guid||S.guid++,o},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=A,S.isFunction=k,S.isWindow=m,S.camelCase=G,S.type=w,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},S.trim=function(e){return null==e?"":(e+"").replace(oi,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return S});var ri=C.jQuery,si=C.$;return S.noConflict=function(e){return C.$===S&&(C.$=si),e&&C.jQuery===S&&(C.jQuery=ri),S},void 0===e&&(C.jQuery=C.$=S),S}),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(c){"use strict";var o,s=window.Slick||{};(o=0,s=function(e,t){var i,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:c(e),appendDots:c(e),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return c('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},c.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=c(e),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,i=c(e).data("slick")||{},n.options=c.extend({},n.defaults,t,i),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=c.proxy(n.autoPlay,n),n.autoPlayClear=c.proxy(n.autoPlayClear,n),n.autoPlayIterator=c.proxy(n.autoPlayIterator,n),n.changeSlide=c.proxy(n.changeSlide,n),n.clickHandler=c.proxy(n.clickHandler,n),n.selectHandler=c.proxy(n.selectHandler,n),n.setPosition=c.proxy(n.setPosition,n),n.swipeHandler=c.proxy(n.swipeHandler,n),n.dragHandler=c.proxy(n.dragHandler,n),n.keyHandler=c.proxy(n.keyHandler,n),n.instanceUid=o++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},s.prototype.addSlide=s.prototype.slickAdd=function(e,t,i){var n=this;if("boolean"==typeof t)i=t,t=null;else if(t<0||t>=n.slideCount)return!1;n.unload(),"number"==typeof t?0===t&&0===n.$slides.length?c(e).appendTo(n.$slideTrack):i?c(e).insertBefore(n.$slides.eq(t)):c(e).insertAfter(n.$slides.eq(t)):!0===i?c(e).prependTo(n.$slideTrack):c(e).appendTo(n.$slideTrack),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slides.each(function(e,t){c(t).attr("data-slick-index",e)}),n.$slidesCache=n.$slides,n.reinit()},s.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},s.prototype.animateSlide=function(e,t){var i={},n=this;n.animateHeight(),!0===n.options.rtl&&!1===n.options.vertical&&(e=-e),!1===n.transformsEnabled?!1===n.options.vertical?n.$slideTrack.animate({left:e},n.options.speed,n.options.easing,t):n.$slideTrack.animate({top:e},n.options.speed,n.options.easing,t):!1===n.cssTransitions?(!0===n.options.rtl&&(n.currentLeft=-n.currentLeft),c({animStart:n.currentLeft}).animate({animStart:e},{duration:n.options.speed,easing:n.options.easing,step:function(e){e=Math.ceil(e),!1===n.options.vertical?i[n.animType]="translate("+e+"px, 0px)":i[n.animType]="translate(0px,"+e+"px)",n.$slideTrack.css(i)},complete:function(){t&&t.call()}})):(n.applyTransition(),e=Math.ceil(e),!1===n.options.vertical?i[n.animType]="translate3d("+e+"px, 0px, 0px)":i[n.animType]="translate3d(0px,"+e+"px, 0px)",n.$slideTrack.css(i),t&&setTimeout(function(){n.disableTransition(),t.call()},n.options.speed))},s.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=c(e).not(this.$slider)),e},s.prototype.asNavFor=function(t){var e=this.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var e=c(this).slick("getSlick");e.unslicked||e.slideHandler(t,!0)})},s.prototype.applyTransition=function(e){var t=this,i={};!1===t.options.fade?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,!1===t.options.fade?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},s.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},s.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},s.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},s.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=c(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=c(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},s.prototype.buildDots=function(){var e,t,i=this;if(!0===i.options.dots){for(i.$slider.addClass("slick-dotted"),t=c("<ul />").addClass(i.options.dotsClass),e=0;e<=i.getDotCount();e+=1)t.append(c("<li />").append(i.options.customPaging.call(this,i,e)));i.$dots=t.appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active")}},s.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){c(t).attr("data-slick-index",e).data("originalStyling",c(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?c('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),c("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},s.prototype.buildRows=function(){var e,t,i,n,o,r,s,a=this;if(n=document.createDocumentFragment(),r=a.$slider.children(),1<a.options.rows){for(s=a.options.slidesPerRow*a.options.rows,o=Math.ceil(r.length/s),e=0;e<o;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var c=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var u=e*s+(t*a.options.slidesPerRow+i);r.get(u)&&c.appendChild(r.get(u))}l.appendChild(c)}n.appendChild(l)}a.$slider.empty().append(n),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},s.prototype.checkResponsive=function(e,t){var i,n,o,r=this,s=!1,a=r.$slider.width(),l=window.innerWidth||c(window).width();if("window"===r.respondTo?o=l:"slider"===r.respondTo?o=a:"min"===r.respondTo&&(o=Math.min(l,a)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){for(i in n=null,r.breakpoints)r.breakpoints.hasOwnProperty(i)&&(!1===r.originalSettings.mobileFirst?o<r.breakpoints[i]&&(n=r.breakpoints[i]):o>r.breakpoints[i]&&(n=r.breakpoints[i]));null!==n?null!==r.activeBreakpoint?n===r.activeBreakpoint&&!t||(r.activeBreakpoint=n,"unslick"===r.breakpointSettings[n]?r.unslick(n):(r.options=c.extend({},r.originalSettings,r.breakpointSettings[n]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),s=n):(r.activeBreakpoint=n,"unslick"===r.breakpointSettings[n]?r.unslick(n):(r.options=c.extend({},r.originalSettings,r.breakpointSettings[n]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),s=n):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),s=n),e||!1===s||r.$slider.trigger("breakpoint",[r,s])}},s.prototype.changeSlide=function(e,t){var i,n,o=this,r=c(e.currentTarget);switch(r.is("a")&&e.preventDefault(),r.is("li")||(r=r.closest("li")),i=o.slideCount%o.options.slidesToScroll!=0?0:(o.slideCount-o.currentSlide)%o.options.slidesToScroll,e.data.message){case"previous":n=0==i?o.options.slidesToScroll:o.options.slidesToShow-i,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide-n,!1,t);break;case"next":n=0==i?o.options.slidesToScroll:i,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide+n,!1,t);break;case"index":var s=0===e.data.index?0:e.data.index||r.index()*o.options.slidesToScroll;o.slideHandler(o.checkNavigable(s),!1,t),r.children().trigger("focus");break;default:return}},s.prototype.checkNavigable=function(e){var t,i;if(i=0,e>(t=this.getNavigableIndexes())[t.length-1])e=t[t.length-1];else for(var n in t){if(e<t[n]){e=i;break}i=t[n]}return e},s.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(c("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",c.proxy(e.interrupt,e,!0)).off("mouseleave.slick",c.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),c(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&c(e.$slideTrack).children().off("click.slick",e.selectHandler),c(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),c(window).off("resize.slick.slick-"+e.instanceUid,e.resize),c("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),c(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},s.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",c.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",c.proxy(e.interrupt,e,!1))},s.prototype.cleanUpRows=function(){var e;1<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},s.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},s.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),c(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){c(this).attr("style",c(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},s.prototype.disableTransition=function(e){var t={};t[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(t):this.$slides.eq(e).css(t)},s.prototype.fadeSlide=function(e,t){var i=this;!1===i.cssTransitions?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout(function(){i.disableTransition(e),t.call()},i.options.speed))},s.prototype.fadeSlideOut=function(e){var t=this;!1===t.cssTransitions?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},s.prototype.filterSlides=s.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},s.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(e){e.stopImmediatePropagation();var t=c(this);setTimeout(function(){i.options.pauseOnFocus&&(i.focussed=t.is(":focus"),i.autoPlay())},0)})},s.prototype.getCurrent=s.prototype.slickCurrentSlide=function(){return this.currentSlide},s.prototype.getDotCount=function(){var e=this,t=0,i=0,n=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++n;else for(;t<e.slideCount;)++n,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)n=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++n,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else n=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return n-1},s.prototype.getLeft=function(e){var t,i,n,o,r=this,s=0;return r.slideOffset=0,i=r.$slides.first().outerHeight(!0),!0===r.options.infinite?(r.slideCount>r.options.slidesToShow&&(r.slideOffset=r.slideWidth*r.options.slidesToShow*-1,o=-1,!0===r.options.vertical&&!0===r.options.centerMode&&(2===r.options.slidesToShow?o=-1.5:1===r.options.slidesToShow&&(o=-2)),s=i*r.options.slidesToShow*o),r.slideCount%r.options.slidesToScroll!=0&&e+r.options.slidesToScroll>r.slideCount&&r.slideCount>r.options.slidesToShow&&(s=e>r.slideCount?(r.slideOffset=(r.options.slidesToShow-(e-r.slideCount))*r.slideWidth*-1,(r.options.slidesToShow-(e-r.slideCount))*i*-1):(r.slideOffset=r.slideCount%r.options.slidesToScroll*r.slideWidth*-1,r.slideCount%r.options.slidesToScroll*i*-1))):e+r.options.slidesToShow>r.slideCount&&(r.slideOffset=(e+r.options.slidesToShow-r.slideCount)*r.slideWidth,s=(e+r.options.slidesToShow-r.slideCount)*i),r.slideCount<=r.options.slidesToShow&&(s=r.slideOffset=0),!0===r.options.centerMode&&r.slideCount<=r.options.slidesToShow?r.slideOffset=r.slideWidth*Math.floor(r.options.slidesToShow)/2-r.slideWidth*r.slideCount/2:!0===r.options.centerMode&&!0===r.options.infinite?r.slideOffset+=r.slideWidth*Math.floor(r.options.slidesToShow/2)-r.slideWidth:!0===r.options.centerMode&&(r.slideOffset=0,r.slideOffset+=r.slideWidth*Math.floor(r.options.slidesToShow/2)),t=!1===r.options.vertical?e*r.slideWidth*-1+r.slideOffset:e*i*-1+s,!0===r.options.variableWidth&&(n=r.slideCount<=r.options.slidesToShow||!1===r.options.infinite?r.$slideTrack.children(".slick-slide").eq(e):r.$slideTrack.children(".slick-slide").eq(e+r.options.slidesToShow),t=!0===r.options.rtl?n[0]?-1*(r.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,!0===r.options.centerMode&&(n=r.slideCount<=r.options.slidesToShow||!1===r.options.infinite?r.$slideTrack.children(".slick-slide").eq(e):r.$slideTrack.children(".slick-slide").eq(e+r.options.slidesToShow+1),t=!0===r.options.rtl?n[0]?-1*(r.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,t+=(r.$list.width()-n.outerWidth())/2)),t},s.prototype.getOption=s.prototype.slickGetOption=function(e){return this.options[e]},s.prototype.getNavigableIndexes=function(){var e,t=this,i=0,n=0,o=[];for(e=!1===t.options.infinite?t.slideCount:(i=-1*t.options.slidesToScroll,n=-1*t.options.slidesToScroll,2*t.slideCount);i<e;)o.push(i),i=n+t.options.slidesToScroll,n+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return o},s.prototype.getSlick=function(){return this},s.prototype.getSlideCount=function(){var i,n,o=this;return n=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(e,t){if(t.offsetLeft-n+c(t).outerWidth()/2>-1*o.swipeLeft)return i=t,!1}),Math.abs(c(i).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},s.prototype.goTo=s.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},s.prototype.init=function(e){var t=this;c(t.$slider).hasClass("slick-initialized")||(c(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},s.prototype.initADA=function(){var i=this,n=Math.ceil(i.slideCount/i.options.slidesToShow),o=i.getNavigableIndexes().filter(function(e){return 0<=e&&e<i.slideCount});i.$slides.add(i.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==i.$dots&&(i.$slides.not(i.$slideTrack.find(".slick-cloned")).each(function(e){var t=o.indexOf(e);c(this).attr({role:"tabpanel",id:"slick-slide"+i.instanceUid+e,tabindex:-1}),-1!==t&&c(this).attr({"aria-describedby":"slick-slide-control"+i.instanceUid+t})}),i.$dots.attr("role","tablist").find("li").each(function(e){var t=o[e];c(this).attr({role:"presentation"}),c(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+i.instanceUid+e,"aria-controls":"slick-slide"+i.instanceUid+t,"aria-label":e+1+" of "+n,"aria-selected":null,tabindex:"-1"})}).eq(i.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var e=i.currentSlide,t=e+i.options.slidesToShow;e<t;e++)i.$slides.eq(e).attr("tabindex",0);i.activateADA()},s.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},s.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(c("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&c("li",e.$dots).on("mouseenter.slick",c.proxy(e.interrupt,e,!0)).on("mouseleave.slick",c.proxy(e.interrupt,e,!1))},s.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",c.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",c.proxy(e.interrupt,e,!1)))},s.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),c(document).on(e.visibilityChange,c.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&c(e.$slideTrack).children().on("click.slick",e.selectHandler),c(window).on("orientationchange.slick.slick-"+e.instanceUid,c.proxy(e.orientationChange,e)),c(window).on("resize.slick.slick-"+e.instanceUid,c.proxy(e.resize,e)),c("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),c(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),c(e.setPosition)},s.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},s.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===t.options.accessibility?t.changeSlide({data:{message:!0===t.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===t.options.accessibility&&t.changeSlide({data:{message:!0===t.options.rtl?"previous":"next"}}))},s.prototype.lazyLoad=function(){function e(e){c("img[data-lazy]",e).each(function(){var e=c(this),t=c(this).attr("data-lazy"),i=c(this).attr("data-srcset"),n=c(this).attr("data-sizes")||r.$slider.attr("data-sizes"),o=document.createElement("img");o.onload=function(){e.animate({opacity:0},100,function(){i&&(e.attr("srcset",i),n&&e.attr("sizes",n)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),r.$slider.trigger("lazyLoaded",[r,e,t])})},o.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,e,t])},o.src=t})}var t,i,n,r=this;if(!0===r.options.centerMode?n=!0===r.options.infinite?(i=r.currentSlide+(r.options.slidesToShow/2+1))+r.options.slidesToShow+2:(i=Math.max(0,r.currentSlide-(r.options.slidesToShow/2+1)),r.options.slidesToShow/2+1+2+r.currentSlide):(i=r.options.infinite?r.options.slidesToShow+r.currentSlide:r.currentSlide,n=Math.ceil(i+r.options.slidesToShow),!0===r.options.fade&&(0<i&&i--,n<=r.slideCount&&n++)),t=r.$slider.find(".slick-slide").slice(i,n),"anticipated"===r.options.lazyLoad)for(var o=i-1,s=n,a=r.$slider.find(".slick-slide"),l=0;l<r.options.slidesToScroll;l++)o<0&&(o=r.slideCount-1),t=(t=t.add(a.eq(o))).add(a.eq(s)),o--,s++;e(t),r.slideCount<=r.options.slidesToShow?e(r.$slider.find(".slick-slide")):r.currentSlide>=r.slideCount-r.options.slidesToShow?e(r.$slider.find(".slick-cloned").slice(0,r.options.slidesToShow)):0===r.currentSlide&&e(r.$slider.find(".slick-cloned").slice(-1*r.options.slidesToShow))},s.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},s.prototype.next=s.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},s.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},s.prototype.pause=s.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},s.prototype.play=s.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},s.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&c(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},s.prototype.prev=s.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},s.prototype.preventDefault=function(e){e.preventDefault()},s.prototype.progressiveLazyLoad=function(e){e=e||1;var t,i,n,o,r,s=this,a=c("img[data-lazy]",s.$slider);a.length?(t=a.first(),i=t.attr("data-lazy"),n=t.attr("data-srcset"),o=t.attr("data-sizes")||s.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){n&&(t.attr("srcset",n),o&&t.attr("sizes",o)),t.attr("src",i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===s.options.adaptiveHeight&&s.setPosition(),s.$slider.trigger("lazyLoaded",[s,t,i]),s.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout(function(){s.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),s.$slider.trigger("lazyLoadError",[s,t,i]),s.progressiveLazyLoad())},r.src=i):s.$slider.trigger("allImagesLoaded",[s])},s.prototype.refresh=function(e){var t,i,n=this;i=n.slideCount-n.options.slidesToShow,!n.options.infinite&&n.currentSlide>i&&(n.currentSlide=i),n.slideCount<=n.options.slidesToShow&&(n.currentSlide=0),t=n.currentSlide,n.destroy(!0),c.extend(n,n.initials,{currentSlide:t}),n.init(),e||n.changeSlide({data:{message:"index",index:t}},!1)},s.prototype.registerBreakpoints=function(){var e,t,i,n=this,o=n.options.responsive||null;if("array"===c.type(o)&&o.length){for(e in n.respondTo=n.options.respondTo||"window",o)if(i=n.breakpoints.length-1,o.hasOwnProperty(e)){for(t=o[e].breakpoint;0<=i;)n.breakpoints[i]&&n.breakpoints[i]===t&&n.breakpoints.splice(i,1),i--;n.breakpoints.push(t),n.breakpointSettings[t]=o[e].settings}n.breakpoints.sort(function(e,t){return n.options.mobileFirst?e-t:t-e})}},s.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&c(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},s.prototype.resize=function(){var e=this;c(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=c(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},s.prototype.removeSlide=s.prototype.slickRemove=function(e,t,i){var n=this;if(e="boolean"==typeof e?!0===(t=e)?0:n.slideCount-1:!0===t?--e:e,n.slideCount<1||e<0||e>n.slideCount-1)return!1;n.unload(),!0===i?n.$slideTrack.children().remove():n.$slideTrack.children(this.options.slide).eq(e).remove(),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slidesCache=n.$slides,n.reinit()},s.prototype.setCSS=function(e){var t,i,n=this,o={};!0===n.options.rtl&&(e=-e),t="left"==n.positionProp?Math.ceil(e)+"px":"0px",i="top"==n.positionProp?Math.ceil(e)+"px":"0px",o[n.positionProp]=e,!1===n.transformsEnabled||(!(o={})===n.cssTransitions?o[n.animType]="translate("+t+", "+i+")":o[n.animType]="translate3d("+t+", "+i+", 0px)"),n.$slideTrack.css(o)},s.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},s.prototype.setFade=function(){var i,n=this;n.$slides.each(function(e,t){i=n.slideWidth*e*-1,!0===n.options.rtl?c(t).css({position:"relative",right:i,top:0,zIndex:n.options.zIndex-2,opacity:0}):c(t).css({position:"relative",left:i,top:0,zIndex:n.options.zIndex-2,opacity:0})}),n.$slides.eq(n.currentSlide).css({zIndex:n.options.zIndex-1,opacity:1})},s.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},s.prototype.setOption=s.prototype.slickSetOption=function(){var e,t,i,n,o,r=this,s=!1;if("object"===c.type(arguments[0])?(i=arguments[0],s=arguments[1],o="multiple"):"string"===c.type(arguments[0])&&(n=arguments[1],s=arguments[2],"responsive"===(i=arguments[0])&&"array"===c.type(arguments[1])?o="responsive":void 0!==arguments[1]&&(o="single")),"single"===o)r.options[i]=n;else if("multiple"===o)c.each(i,function(e,t){r.options[e]=t});else if("responsive"===o)for(t in n)if("array"!==c.type(r.options.responsive))r.options.responsive=[n[t]];else{for(e=r.options.responsive.length-1;0<=e;)r.options.responsive[e].breakpoint===n[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(n[t])}s&&(r.unload(),r.reinit())},s.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},s.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},s.prototype.setSlideClasses=function(e){var t,i,n,o,r=this;if(i=r.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),r.$slides.eq(e).addClass("slick-current"),!0===r.options.centerMode){var s=r.options.slidesToShow%2==0?1:0;t=Math.floor(r.options.slidesToShow/2),!0===r.options.infinite&&(t<=e&&e<=r.slideCount-1-t?r.$slides.slice(e-t+s,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(n=r.options.slidesToShow+e,i.slice(n-t+1+s,n+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?i.eq(i.length-1-r.options.slidesToShow).addClass("slick-center"):e===r.slideCount-1&&i.eq(r.options.slidesToShow).addClass("slick-center")),r.$slides.eq(e).addClass("slick-center")}else 0<=e&&e<=r.slideCount-r.options.slidesToShow?r.$slides.slice(e,e+r.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=r.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(o=r.slideCount%r.options.slidesToShow,n=!0===r.options.infinite?r.options.slidesToShow+e:e,r.options.slidesToShow==r.options.slidesToScroll&&r.slideCount-e<r.options.slidesToShow?i.slice(n-(r.options.slidesToShow-o),n+o).addClass("slick-active").attr("aria-hidden","false"):i.slice(n,n+r.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==r.options.lazyLoad&&"anticipated"!==r.options.lazyLoad||r.lazyLoad()},s.prototype.setupInfinite=function(){var e,t,i,n=this;if(!0===n.options.fade&&(n.options.centerMode=!1),!0===n.options.infinite&&!1===n.options.fade&&(t=null,n.slideCount>n.options.slidesToShow)){for(i=!0===n.options.centerMode?n.options.slidesToShow+1:n.options.slidesToShow,e=n.slideCount;e>n.slideCount-i;--e)t=e-1,c(n.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-n.slideCount).prependTo(n.$slideTrack).addClass("slick-cloned");for(e=0;e<i+n.slideCount;e+=1)t=e,c(n.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+n.slideCount).appendTo(n.$slideTrack).addClass("slick-cloned");n.$slideTrack.find(".slick-cloned").find("[id]").each(function(){c(this).attr("id","")})}},s.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},s.prototype.selectHandler=function(e){var t=c(e.target).is(".slick-slide")?c(e.target):c(e.target).parents(".slick-slide"),i=parseInt(t.attr("data-slick-index"));i=i||0,this.slideCount<=this.options.slidesToShow?this.slideHandler(i,!1,!0):this.slideHandler(i)},s.prototype.slideHandler=function(e,t,i){var n,o,r,s,a,l=null,c=this;if(t=t||!1,!(!0===c.animating&&!0===c.options.waitForAnimate||!0===c.options.fade&&c.currentSlide===e))if(!1===t&&c.asNavFor(e),n=e,l=c.getLeft(n),s=c.getLeft(c.currentSlide),c.currentLeft=null===c.swipeLeft?s:c.swipeLeft,!1===c.options.infinite&&!1===c.options.centerMode&&(e<0||e>c.getDotCount()*c.options.slidesToScroll))!1===c.options.fade&&(n=c.currentSlide,!0!==i?c.animateSlide(s,function(){c.postSlide(n)}):c.postSlide(n));else if(!1===c.options.infinite&&!0===c.options.centerMode&&(e<0||e>c.slideCount-c.options.slidesToScroll))!1===c.options.fade&&(n=c.currentSlide,!0!==i?c.animateSlide(s,function(){c.postSlide(n)}):c.postSlide(n));else{if(c.options.autoplay&&clearInterval(c.autoPlayTimer),o=n<0?c.slideCount%c.options.slidesToScroll!=0?c.slideCount-c.slideCount%c.options.slidesToScroll:c.slideCount+n:n>=c.slideCount?c.slideCount%c.options.slidesToScroll!=0?0:n-c.slideCount:n,c.animating=!0,c.$slider.trigger("beforeChange",[c,c.currentSlide,o]),r=c.currentSlide,c.currentSlide=o,c.setSlideClasses(c.currentSlide),c.options.asNavFor&&(a=(a=c.getNavTarget()).slick("getSlick")).slideCount<=a.options.slidesToShow&&a.setSlideClasses(c.currentSlide),c.updateDots(),c.updateArrows(),!0===c.options.fade)return!0!==i?(c.fadeSlideOut(r),c.fadeSlide(o,function(){c.postSlide(o)})):c.postSlide(o),void c.animateHeight();!0!==i?c.animateSlide(l,function(){c.postSlide(o)}):c.postSlide(o)}},s.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},s.prototype.swipeDirection=function(){var e,t,i,n,o=this;return e=o.touchObject.startX-o.touchObject.curX,t=o.touchObject.startY-o.touchObject.curY,i=Math.atan2(t,e),(n=Math.round(180*i/Math.PI))<0&&(n=360-Math.abs(n)),n<=45&&0<=n||n<=360&&315<=n?!1===o.options.rtl?"left":"right":135<=n&&n<=225?!1===o.options.rtl?"right":"left":!0===o.options.verticalSwiping?35<=n&&n<=135?"down":"up":"vertical"},s.prototype.swipeEnd=function(e){var t,i,n=this;if(n.dragging=!1,n.swiping=!1,n.scrolling)return n.scrolling=!1;if(n.interrupted=!1,n.shouldClick=!(10<n.touchObject.swipeLength),void 0===n.touchObject.curX)return!1;if(!0===n.touchObject.edgeHit&&n.$slider.trigger("edge",[n,n.swipeDirection()]),n.touchObject.swipeLength>=n.touchObject.minSwipe){switch(i=n.swipeDirection()){case"left":case"down":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide+n.getSlideCount()):n.currentSlide+n.getSlideCount(),n.currentDirection=0;break;case"right":case"up":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide-n.getSlideCount()):n.currentSlide-n.getSlideCount(),n.currentDirection=1}"vertical"!=i&&(n.slideHandler(t),n.touchObject={},n.$slider.trigger("swipe",[n,i]))}else n.touchObject.startX!==n.touchObject.curX&&(n.slideHandler(n.currentSlide),n.touchObject={})},s.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},s.prototype.swipeMove=function(e){var t,i,n,o,r,s,a=this;return r=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!a.dragging||a.scrolling||r&&1!==r.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==r?r[0].pageX:e.clientX,a.touchObject.curY=void 0!==r?r[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),s=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&4<s?!(a.scrolling=!0):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=s),i=a.swipeDirection(),void 0!==e.originalEvent&&4<a.touchObject.swipeLength&&(a.swiping=!0,e.preventDefault()),o=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(o=a.touchObject.curY>a.touchObject.startY?1:-1),n=a.touchObject.swipeLength,(a.touchObject.edgeHit=!1)===a.options.infinite&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(n=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=t+n*o:a.swipeLeft=t+n*(a.$list.height()/a.listWidth)*o,!0===a.options.verticalSwiping&&(a.swipeLeft=t+n*o),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},s.prototype.swipeStart=function(e){var t,i=this;if(i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow)return!(i.touchObject={});void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,i.dragging=!0},s.prototype.unfilterSlides=s.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},s.prototype.unload=function(){var e=this;c(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},s.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},s.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode?(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},s.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},s.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},c.fn.slick=function(){var e,t,i=this,n=arguments[0],o=Array.prototype.slice.call(arguments,1),r=i.length;for(e=0;e<r;e++)if("object"==typeof n||void 0===n?i[e].slick=new s(i[e],n):t=i[e].slick[n].apply(i[e].slick,o),void 0!==t)return t;return i}}),function(e,t){if("function"==typeof define&&define.amd)define(["module","exports"],t);else if("undefined"!=typeof exports)t(module,exports);else{var i={exports:{}};t(i,i.exports),e.WOW=i.exports}}(this,function(e,t){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t,i){return t&&o(e.prototype,t),i&&o(e,i),e};function o(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function r(e,t){return 0<=t.indexOf(e)}function s(e,t,i){null!=e.addEventListener?e.addEventListener(t,i,!1):null!=e.attachEvent?e.attachEvent("on"+t,i):e[t]=i}function a(e,t,i){null!=e.removeEventListener?e.removeEventListener(t,i,!1):null!=e.detachEvent?e.detachEvent("on"+t,i):delete e[t]}var l=window.WeakMap||window.MozWeakMap||(n(c,[{key:"get",value:function(e){for(var t=0;t<this.keys.length;t++)if(this.keys[t]===e)return this.values[t]}},{key:"set",value:function(e,t){for(var i=0;i<this.keys.length;i++)if(this.keys[i]===e)return this.values[i]=t,this;return this.keys.push(e),this.values.push(t),this}}]),c);function c(){i(this,c),this.keys=[],this.values=[]}var u=window.MutationObserver||window.WebkitMutationObserver||window.MozMutationObserver||(n(d,[{key:"observe",value:function(){}}]),d.notSupported=!0,d);function d(){i(this,d),"undefined"!=typeof console&&null!==console&&(console.warn("MutationObserver is not supported by your browser."),console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content."))}var p=window.getComputedStyle||function(i){var n=/(\-([a-z]){1})/g;return{getPropertyValue:function(e){"float"===e&&(e="styleFloat"),n.test(e)&&e.replace(n,function(e,t){return t.toUpperCase()});var t=i.currentStyle;return(null!=t?t[e]:void 0)||null}}},f=(n(h,[{key:"init",value:function(){this.element=window.document.documentElement,r(document.readyState,["interactive","complete"])?this.start():s(document,"DOMContentLoaded",this.start),this.finished=[]}},{key:"start",value:function(){var r=this;if(this.stopped=!1,this.boxes=[].slice.call(this.element.querySelectorAll("."+this.config.boxClass)),this.all=this.boxes.slice(0),this.boxes.length)if(this.disabled())this.resetStyle();else for(var e=0;e<this.boxes.length;e++){var t=this.boxes[e];this.applyStyle(t,!0)}this.disabled()||(s(this.config.scrollContainer||window,"scroll",this.scrollHandler),s(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live&&new u(function(e){for(var t=0;t<e.length;t++)for(var i=e[t],n=0;n<i.addedNodes.length;n++){var o=i.addedNodes[n];r.doSync(o)}}).observe(document.body,{childList:!0,subtree:!0})}},{key:"stop",value:function(){this.stopped=!0,a(this.config.scrollContainer||window,"scroll",this.scrollHandler),a(window,"resize",this.scrollHandler),null!=this.interval&&clearInterval(this.interval)}},{key:"sync",value:function(){u.notSupported&&this.doSync(this.element)}},{key:"doSync",value:function(e){if(null==e&&(e=this.element),1===e.nodeType)for(var t=(e=e.parentNode||e).querySelectorAll("."+this.config.boxClass),i=0;i<t.length;i++){var n=t[i];r(n,this.all)||(this.boxes.push(n),this.all.push(n),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(n,!0),this.scrolled=!0)}}},{key:"show",value:function(e){var t,i;return this.applyStyle(e),e.className=e.className+" "+this.config.animateClass,null!=this.config.callback&&this.config.callback(e),t=e,i=this.wowEvent,null!=t.dispatchEvent?t.dispatchEvent(i):i in(null!=t)?t[i]():"on"+i in(null!=t)&&t["on"+i](),s(e,"animationend",this.resetAnimation),s(e,"oanimationend",this.resetAnimation),s(e,"webkitAnimationEnd",this.resetAnimation),s(e,"MSAnimationEnd",this.resetAnimation),e}},{key:"applyStyle",value:function(e,t){var i=this,n=e.getAttribute("data-wow-duration"),o=e.getAttribute("data-wow-delay"),r=e.getAttribute("data-wow-iteration");return this.animate(function(){return i.customStyle(e,t,n,o,r)})}},{key:"resetStyle",value:function(){for(var e=0;e<this.boxes.length;e++)this.boxes[e].style.visibility="visible"}},{key:"resetAnimation",value:function(e){if(0<=e.type.toLowerCase().indexOf("animationend")){var t=e.target||e.srcElement;t.className=t.className.replace(this.config.animateClass,"").trim()}}},{key:"customStyle",value:function(e,t,i,n,o){return t&&this.cacheAnimationName(e),e.style.visibility=t?"hidden":"visible",i&&this.vendorSet(e.style,{animationDuration:i}),n&&this.vendorSet(e.style,{animationDelay:n}),o&&this.vendorSet(e.style,{animationIterationCount:o}),this.vendorSet(e.style,{animationName:t?"none":this.cachedAnimationName(e)}),e}},{key:"vendorSet",value:function(e,t){for(var i in t)if(t.hasOwnProperty(i)){var n=t[i];e[""+i]=n;for(var o=0;o<this.vendors.length;o++)e[""+this.vendors[o]+i.charAt(0).toUpperCase()+i.substr(1)]=n}}},{key:"vendorCSS",value:function(e,t){for(var i=p(e),n=i.getPropertyCSSValue(t),o=0;o<this.vendors.length;o++){var r=this.vendors[o];n=n||i.getPropertyCSSValue("-"+r+"-"+t)}return n}},{key:"animationName",value:function(t){var i=void 0;try{i=this.vendorCSS(t,"animation-name").cssText}catch(e){i=p(t).getPropertyValue("animation-name")}return"none"===i?"":i}},{key:"cacheAnimationName",value:function(e){return this.animationNameCache.set(e,this.animationName(e))}},{key:"cachedAnimationName",value:function(e){return this.animationNameCache.get(e)}},{key:"scrollHandler",value:function(){this.scrolled=!0}},{key:"scrollCallback",value:function(){if(this.scrolled){this.scrolled=!1;for(var e=[],t=0;t<this.boxes.length;t++){var i=this.boxes[t];if(i){if(this.isVisible(i)){this.show(i);continue}e.push(i)}}this.boxes=e,this.boxes.length||this.config.live||this.stop()}}},{key:"offsetTop",value:function(e){for(;void 0===e.offsetTop;)e=e.parentNode;for(var t=e.offsetTop;e.offsetParent;)t+=(e=e.offsetParent).offsetTop;return t}},{key:"isVisible",value:function(e){var t=e.getAttribute("data-wow-offset")||this.config.offset,i=this.config.scrollContainer&&this.config.scrollContainer.scrollTop||window.pageYOffset,n=i+Math.min(this.element.clientHeight,"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight)-t,o=this.offsetTop(e),r=o+e.clientHeight;return o<=n&&i<=r}},{key:"disabled",value:function(){return!this.config.mobile&&(e=navigator.userAgent,/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e));var e}}]),h);function h(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];i(this,h),this.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null,scrollContainer:null},this.animate="requestAnimationFrame"in window?function(e){return window.requestAnimationFrame(e)}:function(e){return e()},this.vendors=["moz","webkit"],this.start=this.start.bind(this),this.resetAnimation=this.resetAnimation.bind(this),this.scrollHandler=this.scrollHandler.bind(this),this.scrollCallback=this.scrollCallback.bind(this),this.scrolled=!0,this.config=function(e,t){for(var i in t)if(null==e[i]){var n=t[i];e[i]=n}return e}(e,this.defaults),null!=e.scrollContainer&&(this.config.scrollContainer=document.querySelector(e.scrollContainer)),this.animationNameCache=new l,this.wowEvent=function(e,t,i,n){var o=!(arguments.length<=1||void 0===t)&&t,r=!(arguments.length<=2||void 0===i)&&i,s=arguments.length<=3||void 0===n?null:n,a=void 0;return null!=document.createEvent?(a=document.createEvent("CustomEvent")).initCustomEvent(e,o,r,s):null!=document.createEventObject?(a=document.createEventObject()).eventType=e:a.eventName=e,a}(this.config.boxClass)}t.default=f,e.exports=t.default}),forms(),$("form button[type=submit]").click(function(){var i=0,e=$(this).parents("form"),t=e.data("ms");return $.each(e.find(".req"),function(e,t){i+=formValidate($(this))}),0==i&&(removeFormError(e),null!=t&&""!=t?(showMessageByClass(t),!1):void 0)}),function(i){var e=function(e){void 0===e&&(e=30),this.space=e};i.AutosizeInputOptions=e;var n,o,r,t=(s.prototype.getOptions=function(){return this._options},s.prototype.update=function(){var e=this._input.val()||"";if(e!==this._mirror.text()){this._mirror.text(e);var t=this._mirror.width()+this._options.space;this._input.width(t)}},s.getDefaultOptions=function(){return this._defaultOptions},s.getInstanceKey=function(){return"autosizeInputInstance"},s._defaultOptions=new e,s);function s(e,t){var i=this;this._input=$(e),this._options=$.extend({},s.getDefaultOptions(),t),this._mirror=$('<span style="position:absolute; top:-999px; left:0; white-space:pre;"/>'),$.each(["fontFamily","fontSize","fontWeight","fontStyle","letterSpacing","textTransform","wordSpacing","textIndent"],function(e,t){i._mirror[0].style[t]=i._input.css(t)}),$("body").append(this._mirror),this._input.on("keydown keyup input propertychange change",function(e){i.update()}),i.update()}i.AutosizeInput=t,n=jQuery,o="autosize-input",r=["text","password","search","url","tel","email","number"],n.fn.autosizeInput=function(t){return this.each(function(){if("INPUT"==this.tagName&&-1<n.inArray(this.type,r)){var e=n(this);e.data(i.AutosizeInput.getInstanceKey())||(null==t&&(t=e.data(o)),e.data(i.AutosizeInput.getInstanceKey(),new i.AutosizeInput(this,t)))}})},n(function(){n("input[data-"+o+"]").autosizeInput()})}(Plugins=Plugins||{}),function(){function X(e,t,i){return this instanceof X?(this.el=ee,this.events={},this.maskset=ee,void(!(this.refreshValue=!1)!==i&&(Q.isPlainObject(e)?t=e:(t=t||{}).alias=e,this.opts=Q.extend(!0,{},this.defaults,t),this.noMasksCache=t&&t.definitions!==ee,this.userOptions=t||{},this.isRTL=this.opts.numericInput,u(this.opts.alias,t,this.opts)))):new X(e,t,i)}function u(e,t,i){var n=X.prototype.aliases[e];return n?(n.alias&&u(n.alias,ee,i),Q.extend(!0,i,n),Q.extend(!0,i,t),!0):(null===i.mask&&(i.mask=e),!1)}function r(i,r){function e(e,t,i){if(null!==e&&""!==e||(e="*{*}"),1===e.length&&!1===i.greedy&&0!==i.repeat&&(i.placeholder=""),0<i.repeat||"*"===i.repeat||"+"===i.repeat){var n="*"===i.repeat?0:"+"===i.repeat?1:i.repeat;e=i.groupmarker.start+e+i.groupmarker.end+i.quantifiermarker.start+n+","+i.repeat+i.quantifiermarker.end}var o;return X.prototype.masksCache[e]===ee||!0===r?(o={mask:e,maskToken:X.prototype.analyseMask(e,i),validPositions:{},_buffer:ee,buffer:ee,tests:{},metadata:t,maskLength:ee},!0!==r&&(X.prototype.masksCache[i.numericInput?e.split("").reverse().join(""):e]=o,o=Q.extend(!0,{},X.prototype.masksCache[i.numericInput?e.split("").reverse().join(""):e]))):o=Q.extend(!0,{},X.prototype.masksCache[i.numericInput?e.split("").reverse().join(""):e]),o}if(Q.isFunction(i.mask)&&(i.mask=i.mask(i)),Q.isArray(i.mask)){if(1<i.mask.length){i.keepStatic=null===i.keepStatic||i.keepStatic;var n=i.groupmarker.start;return Q.each(i.numericInput?i.mask.reverse():i.mask,function(e,t){1<n.length&&(n+=i.groupmarker.end+i.alternatormarker+i.groupmarker.start),n+=t.mask===ee||Q.isFunction(t.mask)?t:t.mask}),e(n+=i.groupmarker.end,i.mask,i)}i.mask=i.mask.pop()}return i.mask&&i.mask.mask!==ee&&!Q.isFunction(i.mask.mask)?e(i.mask.mask,i.mask,i):e(i.mask,i.mask,i)}function Y(e,t,I){function p(e,t,i){t=t||0;var n,o,r,s=[],a=0,l=$();for(-1===(H=c!==ee?c.maxLength:ee)&&(H=ee);!0===e&&R().validPositions[a]?(o=(r=R().validPositions[a]).match,n=r.locator.slice(),s.push(!0===i?r.input:!1===i?o.nativeDef:O(a,o))):(o=(r=b(a,n,a-1)).match,n=r.locator.slice(),(!1===I.jitMasking||a<l||"number"==typeof I.jitMasking&&isFinite(I.jitMasking)&&I.jitMasking>a)&&s.push(!1===i?o.nativeDef:O(a,o))),a++,(H===ee||a<H)&&(null!==o.fn||""!==o.def)||a<t;);return""===s[s.length-1]&&s.pop(),R().maskLength=a+1,s}function R(){return t}function C(e){var t=R();t.buffer=ee,!0!==e&&(t.validPositions={},t.p=0)}function $(e,t,i){var n=-1,o=-1,r=i||R().validPositions;for(var s in e===ee&&(e=-1),r){var a=parseInt(s);r[a]&&(t||!0!==r[a].generatedInput)&&(a<=e&&(n=a),e<=a&&(o=a))}return-1!==n&&1<e-n||o<e?n:o}function k(e,t,i,n){function o(e){var t=R().validPositions[e];if(t!==ee&&null===t.match.fn){var i=R().validPositions[e-1],n=R().validPositions[e+1];return i!==ee&&n!==ee}}var r,s=e,a=Q.extend(!0,{},R().validPositions),l=!1;for(R().p=e,r=t-1;s<=r;r--)R().validPositions[r]!==ee&&(!0!==i&&(!R().validPositions[r].match.optionality&&o(r)||!1===I.canClearPosition(R(),r,$(),n,I))||delete R().validPositions[r]);for(C(!0),r=s+1;r<=$();){for(;R().validPositions[s]!==ee;)s++;if(r<s&&(r=s+1),R().validPositions[r]===ee&&P(r))r++;else{var c=b(r);!1===l&&a[s]&&a[s].match.def===c.match.def?(R().validPositions[s]=Q.extend(!0,{},a[s]),R().validPositions[s].input=c.input,delete R().validPositions[r],r++):w(s,c.match.def)?!1!==E(s,c.input||O(r),!0)&&(delete R().validPositions[r],r++,l=!0):P(r)||(r++,s--),s++}}C(!0)}function f(e,t){for(var i,n=e,o=$(),r=R().validPositions[o]||S(0)[0],s=r.alternation!==ee?r.locator[r.alternation].toString().split(","):[],a=0;a<n.length&&(!((i=n[a]).match&&(I.greedy&&!0!==i.match.optionalQuantifier||(!1===i.match.optionality||!1===i.match.newBlockMarker)&&!0!==i.match.optionalQuantifier)&&(r.alternation===ee||r.alternation!==i.alternation||i.locator[r.alternation]!==ee&&h(i.locator[r.alternation].toString().split(","),s)))||!0===t&&(null!==i.match.fn||/[0-9a-bA-Z]/.test(i.match.def)));a++);return i}function b(e,t,i){return R().validPositions[e]||f(S(e,t?t.slice():t,i))}function v(e){return R().validPositions[e]?R().validPositions[e]:S(e)[0]}function w(e,t){for(var i=!1,n=S(e),o=0;o<n.length;o++)if(n[o].match&&n[o].match.def===t){i=!0;break}return i}function S(O,e,t){function D(E,P,e,t){function _(e,i,t){function r(i,n){var o=0===Q.inArray(i,n.matches);return o||Q.each(n.matches,function(e,t){if(!0===t.isQuantifier&&(o=r(i,n.matches[e-1])))return!1}),o}function n(e,o,r){var s,a;return(R().tests[e]||R().validPositions[e])&&Q.each(R().tests[e]||[R().validPositions[e]],function(e,t){var i=r!==ee?r:t.alternation,n=t.locator[i]!==ee?t.locator[i].toString().indexOf(o):-1;(a===ee||n<a)&&-1!==n&&(s=t,a=n)}),s?s.locator.slice((r!==ee?r:s.alternation)+1):r!==ee?n(e,o):ee}if(1e4<N)throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. "+R().mask;if(N===O&&e.matches===ee)return M.push({match:e,locator:i.reverse(),cd:L}),!0;if(e.matches!==ee){if(e.isGroup&&t!==e){if(e=_(E.matches[Q.inArray(e,E.matches)+1],i))return!0}else if(e.isOptional){var o=e;if(e=D(e,P,i,t)){if(!r(j=M[M.length-1].match,o))return!0;H=!0,N=O}}else if(e.isAlternator){var s,a=e,l=[],c=M.slice(),u=i.length,d=0<P.length?P.shift():-1;if(-1===d||"string"==typeof d){var p,f=N,h=P.slice(),m=[];if("string"==typeof d)m=d.split(",");else for(p=0;p<a.matches.length;p++)m.push(p);for(var v=0;v<m.length;v++){if(p=parseInt(m[v]),M=[],P=n(N,p,u)||h.slice(),!0!==(e=_(a.matches[p]||E.matches[p],[p].concat(i),t)||e)&&e!==ee&&m[m.length-1]<a.matches.length){var g=Q.inArray(e,E.matches)+1;E.matches.length>g&&((e=_(E.matches[g],[g].concat(i.slice(1,i.length)),t))&&(m.push(g.toString()),Q.each(M,function(e,t){t.alternation=i.length-1})))}s=M.slice(),N=f,M=[];for(var y=0;y<s.length;y++){var k=s[y],b=!1;k.alternation=k.alternation||u;for(var w=0;w<l.length;w++){var x=l[w];if(("string"!=typeof d||-1!==Q.inArray(k.locator[k.alternation].toString(),m))&&(k.match.def===x.match.def||(A=x,null===(T=k).match.fn&&null!==A.match.fn&&A.match.fn.test(T.match.def,R(),O,!1,I,!1)))){b=k.match.nativeDef===x.match.nativeDef,k.alternation==x.alternation&&-1===x.locator[x.alternation].toString().indexOf(k.locator[k.alternation])&&(x.locator[x.alternation]=x.locator[x.alternation]+","+k.locator[k.alternation],x.alternation=k.alternation,null==k.match.fn&&(x.na=x.na||k.locator[k.alternation].toString(),-1===x.na.indexOf(k.locator[k.alternation])&&(x.na=x.na+","+k.locator[k.alternation])));break}}b||l.push(k)}}"string"==typeof d&&(l=Q.map(l,function(e,t){if(isFinite(t)){var i=e.alternation,n=e.locator[i].toString().split(",");e.locator[i]=ee,e.alternation=ee;for(var o=0;o<n.length;o++)-1!==Q.inArray(n[o],m)&&(e.locator[i]!==ee?(e.locator[i]+=",",e.locator[i]+=n[o]):e.locator[i]=parseInt(n[o]),e.alternation=i);if(e.locator[i]!==ee)return e}})),M=c.concat(l),N=O,H=0<M.length,P=h.slice()}else e=_(a.matches[d]||E.matches[d],[d].concat(i),t);if(e)return!0}else if(e.isQuantifier&&t!==E.matches[Q.inArray(e,E.matches)-1])for(var C=e,$=0<P.length?P.shift():0;$<(isNaN(C.quantifier.max)?$+1:C.quantifier.max)&&N<=O;$++){var S=E.matches[Q.inArray(C,E.matches)-1];if(e=_(S,[$].concat(i),S)){if((j=M[M.length-1].match).optionalQuantifier=$>C.quantifier.min-1,r(j,S)){if($>C.quantifier.min-1){H=!0,N=O;break}return!0}return!0}}else if(e=D(e,P,i,t))return!0}else N++;var T,A}for(var i=0<P.length?P.shift():0;i<E.matches.length;i++)if(!0!==E.matches[i].isQuantifier){var n=_(E.matches[i],[i].concat(e),t);if(n&&N===O)return n;if(O<N)break}}function i(e){return I.keepStatic&&0<O&&e.length>1+(""===e[e.length-1].match.def?1:0)&&!0!==e[0].match.optionality&&!0!==e[0].match.optionalQuantifier&&null===e[0].match.fn&&!/[0-9a-bA-Z]/.test(e[0].match.def)?[f(e)]:e}var j,n,o,r=R().maskToken,N=e?t:0,s=e?e.slice():[0],M=[],H=!1,L=e?e.join(""):"";if(-1<O){if(e===ee){for(var a,l=O-1;(a=R().validPositions[l]||R().tests[l])===ee&&-1<l;)l--;a!==ee&&-1<l&&(n=a,o=[],Q.isArray(n)||(n=[n]),0<n.length&&(n[0].alternation===ee?0===(o=f(n.slice()).locator.slice()).length&&(o=n[0].locator.slice()):Q.each(n,function(e,t){if(""!==t.def)if(0===o.length)o=t.locator.slice();else for(var i=0;i<o.length;i++)t.locator[i]&&-1===o[i].toString().indexOf(t.locator[i])&&(o[i]+=","+t.locator[i])})),L=(s=o).join(""),N=l)}if(R().tests[O]&&R().tests[O][0].cd===L)return i(R().tests[O]);for(var c=s.shift();c<r.length;c++){if(D(r[c],s,[c])&&N===O||O<N)break}}return 0!==M.length&&!H||M.push({match:{fn:null,cardinality:0,optionality:!0,casing:null,def:"",placeholder:""},locator:[],cd:L}),e!==ee&&R().tests[O]?i(Q.extend(!0,[],M)):(R().tests[O]=Q.extend(!0,[],M),i(R().tests[O]))}function g(){return R()._buffer===ee&&(R()._buffer=p(!1,1),R().buffer===ee&&(R().buffer=R()._buffer.slice())),R()._buffer}function T(e){return R().buffer!==ee&&!0!==e||(R().buffer=p(!0,$(),!0)),R().buffer}function A(e,t,i){var n,o;if(!0===e)C(),e=0,t=i.length;else for(n=e;n<t;n++)delete R().validPositions[n];for(n=o=e;n<t;n++)if(C(!0),i[n]!==I.skipOptionalPartCharacter){var r=E(o,i[n],!0,!0);!1!==r&&(C(!0),o=r.caret!==ee?r.caret:r.pos+1)}}function h(e,t,i){for(var n,o=I.greedy?t:t.slice(0,1),r=!1,s=i!==ee?i.split(","):[],a=0;a<s.length;a++)-1!==(n=e.indexOf(s[a]))&&e.splice(n,1);for(var l=0;l<e.length;l++)if(-1!==Q.inArray(e[l],o)){r=!0;break}return r}function E(m,e,t,x,i){function v(e){var t=q?1<e.begin-e.end||e.begin-e.end==1:1<e.end-e.begin||e.end-e.begin==1;return t&&0===e.begin&&e.end===R().maskLength?"full":t}function r(d,p,f){var h=!1;return Q.each(S(d),function(e,t){for(var i=t.match,n=p?1:0,o="",r=i.cardinality;n<r;r--)o+=(s=d-(r-1),R().validPositions[s]===ee?O(s):R().validPositions[s].input);var s;if(p&&(o+=p),T(!0),!1!==(h=null!=i.fn?i.fn.test(o,R(),d,f,I,v(m)):(p===i.def||p===I.skipOptionalPartCharacter)&&""!==i.def&&{c:O(d,i,!0)||i.def,pos:d})){var a=h.c!==ee?h.c:p;a=a===I.skipOptionalPartCharacter&&null===i.fn?O(d,i,!0)||i.def:a;var l=d,c=T();if(h.remove!==ee&&(Q.isArray(h.remove)||(h.remove=[h.remove]),Q.each(h.remove.sort(function(e,t){return t-e}),function(e,t){k(t,t+1,!0)})),h.insert!==ee&&(Q.isArray(h.insert)||(h.insert=[h.insert]),Q.each(h.insert.sort(function(e,t){return e-t}),function(e,t){E(t.pos,t.c,!0,x)})),h.refreshFromBuffer){var u=h.refreshFromBuffer;if(A(!0===u?u:u.start,u.end,c),h.pos===ee&&h.c===ee)return h.pos=$(),!1;if((l=h.pos!==ee?h.pos:d)!==d)return h=Q.extend(h,E(l,a,!0,x)),!1}else if(!0!==h&&h.pos!==ee&&h.pos!==d&&(l=h.pos,A(d,l,T().slice()),l!==d))return h=Q.extend(h,E(l,a,!0)),!1;return(!0===h||h.pos!==ee||h.c!==ee)&&(0<e&&C(!0),g(l,Q.extend({},t,{input:function(e,t,i){switch(I.casing||t.casing){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase();break;case"title":var n=R().validPositions[i-1];e=0===i||n&&n.input===String.fromCharCode(X.keyCode.SPACE)?e.toUpperCase():e.toLowerCase()}return e}(a,i,l)}),x,v(m))||(h=!1),!1)}}),h}function n(e,t){var i=R().validPositions[t];if(i)for(var s=i.locator,a=s.length,n=e;n<t;n++)if(R().validPositions[n]===ee&&!P(n,!0)){var o=S(n).slice(),l=f(o,!0),c=-1;""===o[o.length-1].match.def&&o.pop(),Q.each(o,function(e,t){for(var i=0;i<a;i++){if(t.locator[i]===ee||!h(t.locator[i].toString().split(","),s[i].toString().split(","),t.na)){var n=s[i],o=l.locator[i],r=t.locator[i];n-o>Math.abs(n-r)&&(l=t);break}c<i&&(c=i,l=t)}}),(l=Q.extend({},l,{input:O(n,l.match,!0)||l.match.def})).generatedInput=!0,g(n,l,!0),R().validPositions[t]=ee,r(t,i.input,!0)}}function g(e,t,i,n){if(n||I.insertMode&&R().validPositions[e]!==ee&&i===ee){var o,r=Q.extend(!0,{},R().validPositions),s=$(ee,!0);for(o=e;o<=s;o++)delete R().validPositions[o];R().validPositions[e]=Q.extend(!0,{},t);var a,l=!0,c=R().validPositions,u=!1,d=R().maskLength;for(o=a=e;o<=s;o++){var p=r[o];if(p!==ee)for(var f=a;f<R().maskLength&&(null===p.match.fn&&c[o]&&(!0===c[o].match.optionalQuantifier||!0===c[o].match.optionality)||null!=p.match.fn);){if(f++,!1===u&&r[f]&&r[f].match.def===p.match.def)R().validPositions[f]=Q.extend(!0,{},r[f]),R().validPositions[f].input=p.input,y(f),a=f,l=!0;else if(w(f,p.match.def)){var h=E(f,p.input,!0,!0);l=!1!==h,a=h.caret||h.insert?$():f,u=!0}else if(!(l=!0===p.generatedInput)&&f>=R().maskLength-1)break;if(R().maskLength<d&&(R().maskLength=d),l)break}if(!l)break}if(!l)return R().validPositions=Q.extend(!0,{},r),C(!0),0}else R().validPositions[e]=Q.extend(!0,{},t);return C(!0),1}function y(e){for(var t=e-1;-1<t&&!R().validPositions[t];t--);var i,n;for(t++;t<e;t++)R().validPositions[t]===ee&&(!1===I.jitMasking||I.jitMasking>t)&&(""===(n=S(t,b(t-1).locator,t-1).slice())[n.length-1].match.def&&n.pop(),(i=f(n))&&(i.match.def===I.radixPointDefinitionSymbol||!P(t,!0)||Q.inArray(I.radixPoint,T())<t&&i.match.fn&&i.match.fn.test(O(t),R(),t,!1,I))&&(!1!==(s=r(t,O(t,i.match,!0)||(null==i.match.fn?i.match.def:""!==O(t)?O(t):T()[t]),!0))&&(R().validPositions[s.pos||t].generatedInput=!0)))}t=!0===t;var o=m;m.begin!==ee&&(o=q&&!v(m)?m.end:m.begin);var s=!0,a=Q.extend(!0,{},R().validPositions);if(Q.isFunction(I.preValidation)&&!t&&!0!==x&&(s=I.preValidation(T(),o,e,v(m),I)),!0===s){if(y(o),v(m)&&(N(ee,X.keyCode.DELETE,m),o=R().p),o<R().maskLength&&(s=r(o,e,t),(!t||!0===x)&&!1===s)){var l=R().validPositions[o];if(!l||null!==l.match.fn||l.match.def!==e&&e!==I.skipOptionalPartCharacter){if((I.insertMode||R().validPositions[_(o)]===ee)&&!P(o,!0))for(var c=o+1,u=_(o);c<=u;c++)if(!1!==(s=r(c,e,t))){n(o,s.pos!==ee?s.pos:c),o=c;break}}else s={caret:_(o)}}!1===s&&I.keepStatic&&!t&&!0!==i&&(s=function(u,d,p){var e,f,t,i,h,m,v,g,y=Q.extend(!0,{},R().validPositions),k=!1,n=$();for(i=R().validPositions[n];0<=n;n--)if((t=R().validPositions[n])&&t.alternation!==ee){if(e=n,f=R().validPositions[e].alternation,i.locator[t.alternation]!==t.locator[t.alternation])break;i=t}if(f!==ee){g=parseInt(e);var b=i.locator[i.alternation||f]!==ee?i.locator[i.alternation||f]:v[0];0<b.length&&(b=b.split(",")[0]);var w=R().validPositions[g],o=R().validPositions[g-1];Q.each(S(g,o?o.locator:ee,g-1),function(e,t){v=t.locator[f]?t.locator[f].toString().split(","):[];for(var i=0;i<v.length;i++){var n=[],o=0,r=0,s=!1;if(b<v[i]&&(t.na===ee||-1===Q.inArray(v[i],t.na.split(",")))){R().validPositions[g]=Q.extend(!0,{},t);var a=R().validPositions[g].locator;for(R().validPositions[g].locator[f]=parseInt(v[i]),null==t.match.fn?(w.input!==t.match.def&&((s=!0)!==w.generatedInput&&n.push(w.input)),r++,R().validPositions[g].generatedInput=!/[0-9a-bA-Z]/.test(t.match.def),R().validPositions[g].input=t.match.def):R().validPositions[g].input=w.input,h=g+1;h<$(ee,!0)+1;h++)(m=R().validPositions[h])&&!0!==m.generatedInput&&/[0-9a-bA-Z]/.test(m.input)?n.push(m.input):h<u&&o++,delete R().validPositions[h];for(s&&n[0]===t.match.def&&n.shift(),C(!0),k=!0;0<n.length;){var l=n.shift();if(l!==I.skipOptionalPartCharacter&&!(k=E($(ee,!0)+1,l,!1,x,!0)))break}if(k){R().validPositions[g].locator=a;var c=$(u)+1;for(h=g+1;h<$()+1;h++)((m=R().validPositions[h])===ee||null==m.match.fn)&&h<u+(r-o)&&r++;k=E(c<(u+=r-o)?c:u,d,p,x,!0)}if(k)return!1;C(),R().validPositions=Q.extend(!0,{},y)}}})}return k}(o,e,t)),!0===s&&(s={pos:o})}if(Q.isFunction(I.postValidation)&&!1!==s&&!t&&!0!==x){var d=I.postValidation(T(!0),s,I);if(d.refreshFromBuffer&&d.buffer){var p=d.refreshFromBuffer;A(!0===p?p:p.start,p.end,d.buffer)}s=!0===d?s:d}return s.pos===ee&&(s.pos=o),!1===s&&(C(!0),R().validPositions=Q.extend(!0,{},a)),s}function P(e,t){var i=b(e).match;if(""===i.def&&(i=v(e).match),null!=i.fn)return i.fn;if(!0!==t&&-1<e){var n=S(e);return n.length>1+(""===n[n.length-1].match.def?1:0)}}function _(e,t){var i=R().maskLength;if(i<=e)return i;for(var n=e;++n<i&&(!0===t&&(!0!==v(n).match.newBlockMarker||!P(n))||!0!==t&&!P(n)););return n}function y(e,t){var i,n=e;if(n<=0)return 0;for(;0<--n&&(!0===t&&!0!==v(n).match.newBlockMarker||!0!==t&&!P(n)&&((i=S(n)).length<2||2===i.length&&""===i[1].match.def)););return n}function x(e,t,i,n,o){if(n&&Q.isFunction(I.onBeforeWrite)){var r=I.onBeforeWrite(n,t,i,I);if(r){if(r.refreshFromBuffer){var s=r.refreshFromBuffer;A(!0===s?s:s.start,s.end,r.buffer||t),t=T(!0)}i!==ee&&(i=r.caret!==ee?r.caret:i)}}e!==ee&&(e.inputmask._valueSet(t.join("")),i===ee||n!==ee&&"blur"===n.type?d(e,t,i):oe&&"input"===n.type?setTimeout(function(){D(e,i)},0):D(e,i),!0===o&&(u=!0,Q(e).trigger("input")))}function O(e,t,i){if((t=t||v(e).match).placeholder!==ee||!0===i)return Q.isFunction(t.placeholder)?t.placeholder(I):t.placeholder;if(null!==t.fn)return I.placeholder.charAt(e%I.placeholder.length);if(-1<e&&R().validPositions[e]===ee){var n,o=S(e),r=[];if(o.length>1+(""===o[o.length-1].match.def?1:0))for(var s=0;s<o.length;s++)if(!0!==o[s].match.optionality&&!0!==o[s].match.optionalQuantifier&&(null===o[s].match.fn||n===ee||!1!==o[s].match.fn.test(n.match.def,R(),e,!0,I))&&(r.push(o[s]),null===o[s].match.fn&&(n=o[s]),1<r.length&&/[0-9a-bA-Z]/.test(r[0].match.def)))return I.placeholder.charAt(e%I.placeholder.length)}return t.def}function m(d,e,p,t,i){var n=t.slice(),f="",h=0,m=ee;if(C(),R().p=_(-1),!p)if(!0!==I.autoUnmask){var o=g().slice(0,_(-1)).join(""),r=n.join("").match(new RegExp("^"+X.escapeRegex(o),"g"));r&&0<r.length&&(n.splice(0,r.length*o.length),h=_(h))}else h=_(h);if(Q.each(n,function(e,t){if(t!==ee){var i=new Q.Event("_checkval");i.which=t.charCodeAt(0),f+=t;var n=$(ee,!0),o=R().validPositions[n],r=b(n+1,o?o.locator.slice():ee,n);if(c=h,u=f,-1===g().slice(c,_(c)).join("").indexOf(u)||P(c)||v(c).match.nativeDef!==u.charAt(u.length-1)||p||I.autoUnmask){var s=p?e:null==r.match.fn&&r.match.optionality&&n+1<R().p?n+1:R().p;m=W.keypressEvent.call(d,i,!0,!1,p,s),h=s+1,f=""}else m=W.keypressEvent.call(d,i,!0,!1,!0,n+1);if(!p&&Q.isFunction(I.onBeforeWrite)){var a=m.forwardPosition;if((m=I.onBeforeWrite(i,T(),m.forwardPosition,I)).forwardPosition=a,m&&m.refreshFromBuffer){var l=m.refreshFromBuffer;A(!0===l?l:l.start,l.end,m.buffer),C(!0),m.caret&&(R().p=m.caret,m.forwardPosition=m.caret)}}}var c,u}),e){var s=ee;J.activeElement===d&&m&&(s=I.numericInput?y(m.forwardPosition):m.forwardPosition),x(d,T(),s,i||new Q.Event("checkval"))}}function i(e){if(e){if(e.inputmask===ee)return e.value;e.inputmask&&e.inputmask.refreshValue&&W.setValueEvent.call(e)}var t=[],i=R().validPositions;for(var n in i)i[n].match&&null!=i[n].match.fn&&t.push(i[n].input);var o=0===t.length?"":(q?t.reverse():t).join("");if(Q.isFunction(I.onUnMask)){var r=(q?T().slice().reverse():T()).join("");o=I.onUnMask(r,o,I)}return o}function D(e,t,i,n){function o(e){!0===n||!q||"number"!=typeof e||I.greedy&&""===I.placeholder||(e=T().join("").length-e);return e}var r;if("number"!=typeof t)return e.setSelectionRange?(t=e.selectionStart,i=e.selectionEnd):Z.getSelection?(r=Z.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode!==e&&r.commonAncestorContainer!==e||(t=r.startOffset,i=r.endOffset):J.selection&&J.selection.createRange&&(i=(t=0-(r=J.selection.createRange()).duplicate().moveStart("character",-e.inputmask._valueGet().length))+r.text.length),{begin:o(t),end:o(i)};t=o(t),i="number"==typeof(i=o(i))?i:t;var s=parseInt(((e.ownerDocument.defaultView||Z).getComputedStyle?(e.ownerDocument.defaultView||Z).getComputedStyle(e,null):e.currentStyle).fontSize)*i;if(e.scrollLeft=s>e.scrollWidth?s:0,te||!1!==I.insertMode||t!==i||i++,e.setSelectionRange)e.selectionStart=t,e.selectionEnd=i;else if(Z.getSelection){if(r=J.createRange(),e.firstChild===ee||null===e.firstChild){var a=J.createTextNode("");e.appendChild(a)}r.setStart(e.firstChild,t<e.inputmask._valueGet().length?t:e.inputmask._valueGet().length),r.setEnd(e.firstChild,i<e.inputmask._valueGet().length?i:e.inputmask._valueGet().length),r.collapse(!0);var l=Z.getSelection();l.removeAllRanges(),l.addRange(r)}else e.createTextRange&&((r=e.createTextRange()).collapse(!0),r.moveEnd("character",i),r.moveStart("character",t),r.select());d(e,ee,{begin:t,end:i})}function s(e){var t,i,n=T(),o=n.length,r=$(),s={},a=R().validPositions[r],l=a!==ee?a.locator.slice():ee;for(t=r+1;t<n.length;t++)l=(i=b(t,l,t-1)).locator.slice(),s[t]=Q.extend(!0,{},i);var c=a&&a.alternation!==ee?a.locator[a.alternation]:ee;for(t=o-1;r<t&&(((i=s[t]).match.optionality||i.match.optionalQuantifier||c&&(c!==s[t].locator[a.alternation]&&null!=i.match.fn||null===i.match.fn&&i.locator[a.alternation]&&h(i.locator[a.alternation].toString().split(","),c.toString().split(","))&&""!==S(t)[0].def))&&n[t]===O(t,i.match));t--)o--;return e?{l:o,def:s[o]?s[o].match:ee}:o}function l(e){for(var t,i=s(),n=e.length;i<n&&!P(i+1)&&(t=v(i+1))&&!0!==t.match.optionality&&!0!==t.match.optionalQuantifier;)i++;for(;(t=v(i-1))&&t.match.optionality&&t.input===I.skipOptionalPartCharacter;)i--;return e.splice(i),e}function j(e){if(Q.isFunction(I.isComplete))return I.isComplete(e,I);if("*"===I.repeat)return ee;var t=!1,i=s(!0),n=y(i.l);if(i.def===ee||i.def.newBlockMarker||i.def.optionality||i.def.optionalQuantifier){t=!0;for(var o=0;o<=n;o++){var r=b(o).match;if(null!==r.fn&&R().validPositions[o]===ee&&!0!==r.optionality&&!0!==r.optionalQuantifier||null===r.fn&&e[o]!==O(o,r)){t=!1;break}}}return t}function N(s,e,t,i){if((I.numericInput||q)&&(e===X.keyCode.BACKSPACE?e=X.keyCode.DELETE:e===X.keyCode.DELETE&&(e=X.keyCode.BACKSPACE),q)){var n=t.end;t.end=t.begin,t.begin=n}e===X.keyCode.BACKSPACE&&(t.end-t.begin<1||!1===I.insertMode)?(t.begin=y(t.begin),R().validPositions[t.begin]===ee||R().validPositions[t.begin].input!==I.groupSeparator&&R().validPositions[t.begin].input!==I.radixPoint||t.begin--):e===X.keyCode.DELETE&&t.begin===t.end&&(t.end=P(t.end,!0)?t.end+1:_(t.end)+1,R().validPositions[t.begin]===ee||R().validPositions[t.begin].input!==I.groupSeparator&&R().validPositions[t.begin].input!==I.radixPoint||t.end++),k(t.begin,t.end,!1,i),!0!==i&&function(){if(I.keepStatic){for(var e=[],t=$(-1,!0),i=Q.extend(!0,{},R().validPositions),n=R().validPositions[t];0<=t;t--){var o=R().validPositions[t];if(o){if(!0!==o.generatedInput&&/[0-9a-bA-Z]/.test(o.input)&&e.push(o.input),delete R().validPositions[t],o.alternation!==ee&&o.locator[o.alternation]!==n.locator[o.alternation])break;n=o}}if(-1<t)for(R().p=_($(-1,!0));0<e.length;){var r=new Q.Event("keypress");r.which=e.pop().charCodeAt(0),W.keypressEvent.call(s,r,!0,!1,!1,R().p)}else R().validPositions=Q.extend(!0,{},i)}}();var o=$(t.begin,!0);o<t.begin?R().p=_(o):!0!==i&&(R().p=t.begin)}function o(c){function t(){L.style.position="absolute",L.style.top=i.top+"px",L.style.left=i.left+"px",L.style.width=parseInt(c.offsetWidth)-parseInt(u.paddingLeft)-parseInt(u.paddingRight)-parseInt(u.borderLeftWidth)-parseInt(u.borderRightWidth)+"px",L.style.height=parseInt(c.offsetHeight)-parseInt(u.paddingTop)-parseInt(u.paddingBottom)-parseInt(u.borderTopWidth)-parseInt(u.borderBottomWidth)+"px",L.style.lineHeight=L.style.height,L.style.zIndex=isNaN(u.zIndex)?-1:u.zIndex-1,L.style.webkitAppearance="textfield",L.style.mozAppearance="textfield",L.style.Appearance="textfield"}var i=Q(c).position(),u=(c.ownerDocument.defaultView||Z).getComputedStyle(c,null);for(var e in c.parentNode,L=J.createElement("div"),J.body.appendChild(L),u)isNaN(e)&&"cssText"!==e&&-1==e.indexOf("webkit")&&(L.style[e]=u[e]);c.style.backgroundColor="transparent",c.style.color="transparent",c.style.webkitAppearance="caret",c.style.mozAppearance="caret",c.style.Appearance="caret",t(),Q(Z).on("resize",function(e){i=Q(c).position(),u=(c.ownerDocument.defaultView||Z).getComputedStyle(c,null),t()}),Q(c).on("click",function(e){return D(c,function(e){var t,i=J.createElement("span");for(var n in u)isNaN(n)&&-1!==n.indexOf("font")&&(i.style[n]=u[n]);i.style.textTransform=u.textTransform,i.style.letterSpacing=u.letterSpacing,i.style.position="absolute",i.style.height="auto",i.style.width="auto",i.style.visibility="hidden",i.style.whiteSpace="nowrap",J.body.appendChild(i);var o,r=c.inputmask._valueGet(),s=0;for(t=0,o=r.length;t<=o;t++){if(i.innerHTML+=r.charAt(t)||"_",i.offsetWidth>=e){var a=e-s,l=i.offsetWidth-e;i.innerHTML=r.charAt(t),t=(a-=i.offsetWidth/3)<l?t-1:t;break}s=i.offsetWidth}return J.body.removeChild(i),t}(e.clientX)),W.clickEvent.call(this,[e])}),Q(c).on("keydown",function(e){e.shiftKey||!1===I.insertMode||setTimeout(function(){d(c)},0)})}function d(e,t,i){function n(){r||null!==a.fn&&l.input!==ee?r&&null!==a.fn&&l.input!==ee&&(r=!1,o+="</span>"):(r=!0,o+="<span class='im-static''>")}if(L!==ee){t=t||T(),i===ee?i=D(e):i.begin===ee&&(i={begin:i,end:i});var o="",r=!1;if(""!=t)for(var s,a,l,c=0,u=$();c===i.begin&&J.activeElement===e&&(o+="<span class='im-caret' style='border-right-width: 1px;border-right-style: solid;'></span>"),R().validPositions[c]?(l=R().validPositions[c],a=l.match,s=l.locator.slice(),n(),o+=l.input):(l=b(c,s,c-1),a=l.match,s=l.locator.slice(),(!1===I.jitMasking||c<u||"number"==typeof I.jitMasking&&isFinite(I.jitMasking)&&I.jitMasking>c)&&(n(),o+=O(c,a))),c++,(H===ee||c<H)&&(null!==a.fn||""!==a.def)||c<u;);L.innerHTML=o}}t=t||this.maskset,I=I||this.opts;var M,r,H,L,n,c=this.el,q=this.isRTL,a=!1,u=!1,F=!1,z=!1,B={on:function(e,t,r){function i(e){if(this.inputmask===ee&&"FORM"!==this.nodeName){var t=Q.data(this,"_inputmask_opts");t?new X(t).mask(this):B.off(this)}else{if("setvalue"===e.type||"FORM"===this.nodeName||!(this.disabled||this.readOnly&&!("keydown"===e.type&&e.ctrlKey&&67===e.keyCode||!1===I.tabThrough&&e.keyCode===X.keyCode.TAB))){switch(e.type){case"input":if(!0===u)return u=!1,e.preventDefault();break;case"keydown":u=a=!1;break;case"keypress":if(!0===a)return e.preventDefault();a=!0;break;case"click":if(ie||ne){var i=this,n=arguments;return setTimeout(function(){r.apply(i,n)},0),!1}}var o=r.apply(this,arguments);return!1===o&&(e.preventDefault(),e.stopPropagation()),o}e.preventDefault()}}e.inputmask.events[t]=e.inputmask.events[t]||[],e.inputmask.events[t].push(i),-1!==Q.inArray(t,["submit","reset"])?null!=e.form&&Q(e.form).on(t,i):Q(e).on(t,i)},off:function(n,e){var t;n.inputmask&&n.inputmask.events&&(e?(t=[])[e]=n.inputmask.events[e]:t=n.inputmask.events,Q.each(t,function(e,t){for(;0<t.length;){var i=t.pop();-1!==Q.inArray(e,["submit","reset"])?null!=n.form&&Q(n.form).off(e,i):Q(n).off(e,i)}delete n.inputmask.events[e]}))}},W={keydownEvent:function(e){var t,i,n,o,r=this,s=Q(r),a=e.keyCode,l=D(r);if(a===X.keyCode.BACKSPACE||a===X.keyCode.DELETE||ne&&a===X.keyCode.BACKSPACE_SAFARI||e.ctrlKey&&a===X.keyCode.X&&(t="cut",i=J.createElement("input"),(o=(n="on"+t)in i)||(i.setAttribute(n,"return;"),o="function"==typeof i[n]),i=null,!o))e.preventDefault(),N(r,a,l),x(r,T(!0),R().p,e,r.inputmask._valueGet()!==T().join("")),r.inputmask._valueGet()===g().join("")?s.trigger("cleared"):!0===j(T())&&s.trigger("complete");else if(a===X.keyCode.END||a===X.keyCode.PAGE_DOWN){e.preventDefault();var c=_($());I.insertMode||c!==R().maskLength||e.shiftKey||c--,D(r,e.shiftKey?l.begin:c,c,!0)}else a===X.keyCode.HOME&&!e.shiftKey||a===X.keyCode.PAGE_UP?(e.preventDefault(),D(r,0,e.shiftKey?l.begin:0,!0)):(I.undoOnEscape&&a===X.keyCode.ESCAPE||90===a&&e.ctrlKey)&&!0!==e.altKey?(m(r,!0,!1,M.split("")),s.trigger("click")):a!==X.keyCode.INSERT||e.shiftKey||e.ctrlKey?!0===I.tabThrough&&a===X.keyCode.TAB?(!0===e.shiftKey?(null===v(l.begin).match.fn&&(l.begin=_(l.begin)),l.end=y(l.begin,!0),l.begin=y(l.end,!0)):(l.begin=_(l.begin,!0),l.end=_(l.begin,!0),l.end<R().maskLength&&l.end--),l.begin<R().maskLength&&(e.preventDefault(),D(r,l.begin,l.end))):e.shiftKey||!1===I.insertMode&&(a===X.keyCode.RIGHT?setTimeout(function(){var e=D(r);D(r,e.begin)},0):a===X.keyCode.LEFT&&setTimeout(function(){var e=D(r);D(r,q?e.begin+1:e.begin-1)},0)):(I.insertMode=!I.insertMode,D(r,I.insertMode||l.begin!==R().maskLength?l.begin:l.begin-1));I.onKeyDown.call(this,e,T(),D(r).begin,I),F=-1!==Q.inArray(a,I.ignorables)},keypressEvent:function(e,t,i,n,o){var r=Q(this),s=e.which||e.charCode||e.keyCode;if(!(!0===t||e.ctrlKey&&e.altKey)&&(e.ctrlKey||e.metaKey||F))return s===X.keyCode.ENTER&&M!==T().join("")&&(M=T().join(""),setTimeout(function(){r.trigger("change")},0)),!0;if(s){46===s&&!1===e.shiftKey&&""!==I.radixPoint&&(s=I.radixPoint.charCodeAt(0));var a,l=t?{begin:o,end:o}:D(this),c=String.fromCharCode(s);R().writeOutBuffer=!0;var u=E(l,c,n);if(!1!==u&&(C(!0),a=u.caret!==ee?u.caret:t?u.pos+1:_(u.pos),R().p=a),!1!==i){var d=this;if(setTimeout(function(){I.onKeyValidation.call(d,s,u,I)},0),R().writeOutBuffer&&!1!==u){var p=T();x(this,p,I.numericInput&&u.caret===ee?y(a):a,e,!0!==t),!0!==t&&setTimeout(function(){!0===j(p)&&r.trigger("complete")},0)}}if(e.preventDefault(),t)return u.forwardPosition=a,u}},pasteEvent:function(e){var t,i=this,n=e.originalEvent||e,o=Q(i),r=i.inputmask._valueGet(!0),s=D(i);q&&(t=s.end,s.end=s.begin,s.begin=t);var a=r.substr(0,s.begin),l=r.substr(s.end,r.length);if(a===(q?g().reverse():g()).slice(0,s.begin).join("")&&(a=""),l===(q?g().reverse():g()).slice(s.end).join("")&&(l=""),q&&(t=a,a=l,l=t),Z.clipboardData&&Z.clipboardData.getData)r=a+Z.clipboardData.getData("Text")+l;else{if(!n.clipboardData||!n.clipboardData.getData)return!0;r=a+n.clipboardData.getData("text/plain")+l}var c=r;if(Q.isFunction(I.onBeforePaste)){if(!1===(c=I.onBeforePaste(r,I)))return e.preventDefault();c=c||r}return m(i,!1,!1,q?c.split("").reverse():c.toString().split("")),x(i,T(),_($()),e,M!==T().join("")),!0===j(T())&&o.trigger("complete"),e.preventDefault()},inputFallBackEvent:function(e){var t=this,i=t.inputmask._valueGet();if(T().join("")!==i){var n=D(t);if("."===i.charAt(n.begin-1)&&""!==I.radixPoint&&((i=i.split(""))[n.begin-1]=I.radixPoint.charAt(0),i=i.join("")),i.charAt(n.begin-1)===I.radixPoint&&i.length>T().length)return(o=new Q.Event("keypress")).which=I.radixPoint.charCodeAt(0),W.keypressEvent.call(t,o,!0,!0,!1,n.begin),!1;if(i=i.replace(new RegExp("("+X.escapeRegex(g().join(""))+")*"),""),ie){var o,r=i.replace(T().join(""),"");if(1===r.length)return(o=new Q.Event("keypress")).which=r.charCodeAt(0),W.keypressEvent.call(t,o,!0,!0,!1,R().validPositions[n.begin-1]?n.begin:n.begin-1),!1}if(n.begin>i.length&&(D(t,i.length),n=D(t)),T().length-i.length!=1||i.charAt(n.begin)===T()[n.begin]||i.charAt(n.begin+1)===T()[n.begin]||P(n.begin)){var s=[],a=p(!0,1).join("");for(s.push(i.substr(0,n.begin)),s.push(i.substr(n.begin));null===i.match(X.escapeRegex(a)+"$");)a=a.slice(1);i=i.replace(a,""),Q.isFunction(I.onBeforeMask)&&(i=I.onBeforeMask(i,I)||i),m(t,!0,!1,i.split(""),e);var l=D(t).begin,c=t.inputmask._valueGet(),u=c.indexOf(s[0]);if(0===u&&l!==s[0].length)D(t,s[0].length),oe&&setTimeout(function(){D(t,s[0].length)},0);else{for(;null===c.match(X.escapeRegex(s[1])+"$");)s[1]=s[1].substr(1);var d=c.indexOf(s[1]);-1!==d&&""!==s[1]&&d<l&&u<d&&(D(t,d),oe&&setTimeout(function(){D(t,d)},0))}!0===j(T())&&Q(t).trigger("complete")}else e.keyCode=X.keyCode.BACKSPACE,W.keydownEvent.call(t,e);e.preventDefault()}},setValueEvent:function(){this.inputmask.refreshValue=!1;var e=this.inputmask._valueGet(!0);Q.isFunction(I.onBeforeMask)&&(e=I.onBeforeMask(e,I)||e),e=e.split(""),m(this,!0,!1,q?e.reverse():e),M=T().join(""),(I.clearMaskOnLostFocus||I.clearIncomplete)&&this.inputmask._valueGet()===g().join("")&&this.inputmask._valueSet("")},focusEvent:function(e){var t=this,i=t.inputmask._valueGet();I.showMaskOnFocus&&(!I.showMaskOnHover||I.showMaskOnHover&&""===i)&&(t.inputmask._valueGet()!==T().join("")?x(t,T(),_($())):!1===z&&D(t,_($()))),!0===I.positionCaretOnTab&&!1===z&&W.clickEvent.apply(t,[e,!0]),M=T().join("")},mouseleaveEvent:function(){if(z=!1,I.clearMaskOnLostFocus&&J.activeElement!==this){var e=T().slice(),t=this.inputmask._valueGet();t!==this.getAttribute("placeholder")&&""!==t&&(-1===$()&&t===g().join("")?e=[]:l(e),x(this,e))}},clickEvent:function(e,r){var s=this;setTimeout(function(){if(J.activeElement===s){var e=D(s);if(r&&(q?e.end=e.begin:e.begin=e.end),e.begin===e.end)switch(I.positionCaretOnClick){case"none":break;case"radixFocus":if(function(e){if(""!==I.radixPoint){var t=R().validPositions;if(t[e]===ee||t[e].input===O(e)){if(e<_(-1))return 1;var i=Q.inArray(I.radixPoint,T());if(-1!==i){for(var n in t)if(i<n&&t[n].input!==O(n))return;return 1}}}}(e.begin)){var t=T().join("").indexOf(I.radixPoint);D(s,I.numericInput?_(t):t);break}default:var i=e.begin,n=_($(i,!0));if(i<n)D(s,P(i)||P(i-1)?i:_(i));else{var o=O(n);(""!==o&&T()[n]!==o&&!0!==v(n).match.optionalQuantifier||!P(n)&&v(n).match.def===o)&&(n=_(n)),D(s,n)}}}},0)},dblclickEvent:function(){var e=this;setTimeout(function(){D(e,0,_($()))},0)},cutEvent:function(e){var t=this,i=Q(t),n=D(t),o=e.originalEvent||e,r=Z.clipboardData||o.clipboardData,s=q?T().slice(n.end,n.begin):T().slice(n.begin,n.end);r.setData("text",q?s.reverse().join(""):s.join("")),J.execCommand&&J.execCommand("copy"),N(t,X.keyCode.DELETE,n),x(t,T(),R().p,e,M!==T().join("")),t.inputmask._valueGet()===g().join("")&&i.trigger("cleared")},blurEvent:function(e){var t=Q(this);if(this.inputmask){var i=this.inputmask._valueGet(),n=T().slice();M!==n.join("")&&setTimeout(function(){t.trigger("change"),M=n.join("")},0),""!==i&&(I.clearMaskOnLostFocus&&(-1===$()&&i===g().join("")?n=[]:l(n)),!1===j(n)&&(setTimeout(function(){t.trigger("incomplete")},0),I.clearIncomplete&&(C(),n=I.clearMaskOnLostFocus?[]:g().slice())),x(this,n,ee,e))}},mouseenterEvent:function(){z=!0,J.activeElement!==this&&I.showMaskOnHover&&this.inputmask._valueGet()!==T().join("")&&x(this,T())},submitEvent:function(){M!==T().join("")&&r.trigger("change"),I.clearMaskOnLostFocus&&-1===$()&&c.inputmask._valueGet&&c.inputmask._valueGet()===g().join("")&&c.inputmask._valueSet(""),I.removeMaskOnSubmit&&(c.inputmask._valueSet(c.inputmask.unmaskedvalue(),!0),setTimeout(function(){x(c,T())},0))},resetEvent:function(){c.inputmask.refreshValue=!0,setTimeout(function(){r.trigger("setvalue")},0)}};if(e!==ee)switch(e.action){case"isComplete":return c=e.el,j(T());case"unmaskedvalue":return c!==ee&&e.value===ee||(n=e.value,n=(Q.isFunction(I.onBeforeMask)&&I.onBeforeMask(n,I)||n).split(""),m(ee,!1,!1,q?n.reverse():n),Q.isFunction(I.onBeforeWrite)&&I.onBeforeWrite(ee,T(),0,I)),i(c);case"mask":!function(e){B.off(e);var t=function(e,a){var t=e.getAttribute("type"),i="INPUT"===e.tagName&&-1!==Q.inArray(t,a.supportsInputType)||e.isContentEditable||"TEXTAREA"===e.tagName;if(!i)if("INPUT"===e.tagName){var n=J.createElement("input");n.setAttribute("type",t),i="text"===n.type,n=null}else i="partial";return!1!==i&&function(e){function t(){return this.inputmask?this.inputmask.opts.autoUnmask?this.inputmask.unmaskedvalue():-1!==$()||!0!==a.nullable?J.activeElement===this&&a.clearMaskOnLostFocus?(q?l(T().slice()).reverse():l(T().slice())).join(""):n.call(this):"":n.call(this)}function i(e){o.call(this,e),this.inputmask&&Q(this).trigger("setvalue")}var n,o,r;if(!e.inputmask.__valueGet){if(!0!==a.noValuePatching){if(Object.getOwnPropertyDescriptor){"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"==_typeof("test".__proto__)?function(e){return e.__proto__}:function(e){return e.constructor.prototype});var s=Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(e),"value"):ee;s&&s.get&&s.set?(n=s.get,o=s.set,Object.defineProperty(e,"value",{get:t,set:i,configurable:!0})):"INPUT"!==e.tagName&&(n=function(){return this.textContent},o=function(e){this.textContent=e},Object.defineProperty(e,"value",{get:t,set:i,configurable:!0}))}else J.__lookupGetter__&&e.__lookupGetter__("value")&&(n=e.__lookupGetter__("value"),o=e.__lookupSetter__("value"),e.__defineGetter__("value",t),e.__defineSetter__("value",i));e.inputmask.__valueGet=n,e.inputmask.__valueSet=o}e.inputmask._valueGet=function(e){return q&&!0!==e?n.call(this.el).split("").reverse().join(""):n.call(this.el)},e.inputmask._valueSet=function(e,t){o.call(this.el,null===e||e===ee?"":!0!==t&&q?e.split("").reverse().join(""):e)},n===ee&&(n=function(){return this.value},o=function(e){this.value=e},function(e){if(Q.valHooks&&(Q.valHooks[e]===ee||!0!==Q.valHooks[e].inputmaskpatch)){var i=Q.valHooks[e]&&Q.valHooks[e].get?Q.valHooks[e].get:function(e){return e.value},o=Q.valHooks[e]&&Q.valHooks[e].set?Q.valHooks[e].set:function(e,t){return e.value=t,e};Q.valHooks[e]={get:function(e){if(e.inputmask){if(e.inputmask.opts.autoUnmask)return e.inputmask.unmaskedvalue();var t=i(e);return-1!==$(ee,ee,e.inputmask.maskset.validPositions)||!0!==a.nullable?t:""}return i(e)},set:function(e,t){var i,n=Q(e);return i=o(e,t),e.inputmask&&n.trigger("setvalue"),i},inputmaskpatch:!0}}}(e.type),r=e,B.on(r,"mouseenter",function(e){var t=Q(this);this.inputmask._valueGet()!==T().join("")&&t.trigger("setvalue")}))}}(e),i}(e,I);if(!1!==t&&(r=Q(c=e),"rtl"!==c.dir&&!I.rightAlign||(c.style.textAlign="right"),"rtl"!==c.dir&&!I.numericInput||(c.dir="ltr",c.removeAttribute("dir"),c.inputmask.isRTL=!0,q=!0),!0===I.colorMask&&o(c),oe&&(c.hasOwnProperty("inputmode")&&(c.inputmode=I.inputmode,c.setAttribute("inputmode",I.inputmode)),"rtfm"===I.androidHack&&(!0!==I.colorMask&&o(c),c.type="password")),!0===t&&(B.on(c,"submit",W.submitEvent),B.on(c,"reset",W.resetEvent),B.on(c,"mouseenter",W.mouseenterEvent),B.on(c,"blur",W.blurEvent),B.on(c,"focus",W.focusEvent),B.on(c,"mouseleave",W.mouseleaveEvent),!0!==I.colorMask&&B.on(c,"click",W.clickEvent),B.on(c,"dblclick",W.dblclickEvent),B.on(c,"paste",W.pasteEvent),B.on(c,"dragdrop",W.pasteEvent),B.on(c,"drop",W.pasteEvent),B.on(c,"cut",W.cutEvent),B.on(c,"complete",I.oncomplete),B.on(c,"incomplete",I.onincomplete),B.on(c,"cleared",I.oncleared),oe||!0===I.inputEventOnly||(B.on(c,"keydown",W.keydownEvent),B.on(c,"keypress",W.keypressEvent)),B.on(c,"compositionstart",Q.noop),B.on(c,"compositionupdate",Q.noop),B.on(c,"compositionend",Q.noop),B.on(c,"keyup",Q.noop),B.on(c,"input",W.inputFallBackEvent),B.on(c,"beforeinput",Q.noop)),B.on(c,"setvalue",W.setValueEvent),g(),""!==c.inputmask._valueGet(!0)||!1===I.clearMaskOnLostFocus||J.activeElement===c)){var i=Q.isFunction(I.onBeforeMask)&&I.onBeforeMask(c.inputmask._valueGet(!0),I)||c.inputmask._valueGet(!0);""!==i&&m(c,!0,!1,q?i.split("").reverse():i.split(""));var n=T().slice();M=n.join(""),!1===j(n)&&I.clearIncomplete&&C(),I.clearMaskOnLostFocus&&J.activeElement!==c&&(-1===$()?n=[]:l(n)),x(c,n),J.activeElement===c&&D(c,_($()))}}(c);break;case"format":return n=(Q.isFunction(I.onBeforeMask)&&I.onBeforeMask(e.value,I)||e.value).split(""),m(ee,!0,!1,q?n.reverse():n),e.metadata?{value:q?T().slice().reverse().join(""):T().join(""),metadata:Y.call(this,{action:"getmetadata"},t,I)}:q?T().slice().reverse().join(""):T().join("");case"isValid":e.value?(n=e.value.split(""),m(ee,!0,!0,q?n.reverse():n)):e.value=T().join("");for(var U=T(),G=s(),V=U.length-1;G<V&&!P(V);V--);return U.splice(G,V+1-G),j(U)&&e.value===T().join("");case"getemptymask":return g().join("");case"remove":if(c&&c.inputmask)r=Q(c),c.inputmask._valueSet(I.autoUnmask?i(c):c.inputmask._valueGet(!0)),B.off(c),Object.getOwnPropertyDescriptor&&Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(c),"value")&&c.inputmask.__valueGet&&Object.defineProperty(c,"value",{get:c.inputmask.__valueGet,set:c.inputmask.__valueSet,configurable:!0}):J.__lookupGetter__&&c.__lookupGetter__("value")&&c.inputmask.__valueGet&&(c.__defineGetter__("value",c.inputmask.__valueGet),c.__defineSetter__("value",c.inputmask.__valueSet)),c.inputmask=ee;return c;case"getmetadata":if(Q.isArray(t.metadata)){var K=p(!0,0,!1).join("");return Q.each(t.metadata,function(e,t){if(t.mask===K)return K=t,!1}),K}return t.metadata}}var Q,Z,J,ee,e,te,ie,ne,oe;window.Inputmask=(Q=window.dependencyLib||jQuery,Z=window,J=document,e=navigator.userAgent,te=/mobile/i.test(e),ie=/iemobile/i.test(e),ne=/iphone/i.test(e)&&!ie,oe=/android/i.test(e)&&!ie,X.prototype={dataAttribute:"data-inputmask",defaults:{placeholder:"_",optionalmarker:{start:"[",end:"]"},quantifiermarker:{start:"{",end:"}"},groupmarker:{start:"(",end:")"},alternatormarker:"|",escapeChar:"\\",mask:null,oncomplete:Q.noop,onincomplete:Q.noop,oncleared:Q.noop,repeat:0,greedy:!0,autoUnmask:!1,removeMaskOnSubmit:!1,clearMaskOnLostFocus:!0,insertMode:!0,clearIncomplete:!1,alias:null,onKeyDown:Q.noop,onBeforeMask:null,onBeforePaste:function(e,t){return Q.isFunction(t.onBeforeMask)?t.onBeforeMask(e,t):e},onBeforeWrite:null,onUnMask:null,showMaskOnFocus:!0,showMaskOnHover:!0,onKeyValidation:Q.noop,skipOptionalPartCharacter:" ",numericInput:!1,rightAlign:!1,undoOnEscape:!0,radixPoint:"",radixPointDefinitionSymbol:ee,groupSeparator:"",keepStatic:null,positionCaretOnTab:!0,tabThrough:!1,supportsInputType:["text","tel","password"],ignorables:[8,9,13,19,27,33,34,35,36,37,38,39,40,45,46,93,112,113,114,115,116,117,118,119,120,121,122,123,0,229],isComplete:null,canClearPosition:Q.noop,preValidation:null,postValidation:null,staticDefinitionSymbol:ee,jitMasking:!1,nullable:!0,inputEventOnly:!1,noValuePatching:!1,positionCaretOnClick:"lvp",casing:null,inputmode:"verbatim",colorMask:!1,androidHack:!1},definitions:{9:{validator:"[0-9]",cardinality:1,definitionSymbol:"*"},a:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,definitionSymbol:"*"},"*":{validator:function(){return!0},cardinality:1}},aliases:{},masksCache:{},mask:function(e){var o=this;return"string"==typeof e&&(e=J.getElementById(e)||J.querySelectorAll(e)),e=e.nodeName?[e]:e,Q.each(e,function(e,t){var i=Q.extend(!0,{},o.opts);!function(i,e,n,o){function t(e,t){null!==(t=t!==ee?t:i.getAttribute(o+"-"+e))&&("string"==typeof t&&(0===e.indexOf("on")?t=Z[t]:"false"===t?t=!1:"true"===t&&(t=!0)),n[e]=t)}var r,s,a,l,c=i.getAttribute(o);if(c&&""!==c&&(c=c.replace(new RegExp("'","g"),'"'),s=JSON.parse("{"+c+"}")),s)for(l in a=ee,s)if("alias"===l.toLowerCase()){a=s[l];break}for(r in t("alias",a),n.alias&&u(n.alias,n,e),e){if(s)for(l in a=ee,s)if(l.toLowerCase()===r.toLowerCase()){a=s[l];break}t(r,a)}Q.extend(!0,e,n)}(t,i,Q.extend(!0,{},o.userOptions),o.dataAttribute);var n=r(i,o.noMasksCache);n!==ee&&(t.inputmask!==ee&&t.inputmask.remove(),t.inputmask=new X(ee,ee,!0),t.inputmask.opts=i,t.inputmask.noMasksCache=o.noMasksCache,t.inputmask.userOptions=Q.extend(!0,{},o.userOptions),t.inputmask.isRTL=o.isRTL,(t.inputmask.el=t).inputmask.maskset=n,Q.data(t,"_inputmask_opts",i),Y.call(t.inputmask,{action:"mask"}))}),e&&e[0]&&e[0].inputmask||this},option:function(e,t){return"string"==typeof e?this.opts[e]:"object"==_typeof(e)?(Q.extend(this.userOptions,e),this.el&&!0!==t&&this.mask(this.el),this):void 0},unmaskedvalue:function(e){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),Y.call(this,{action:"unmaskedvalue",value:e})},remove:function(){return Y.call(this,{action:"remove"})},getemptymask:function(){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),Y.call(this,{action:"getemptymask"})},hasMaskedValue:function(){return!this.opts.autoUnmask},isComplete:function(){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),Y.call(this,{action:"isComplete"})},getmetadata:function(){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),Y.call(this,{action:"getmetadata"})},isValid:function(e){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),Y.call(this,{action:"isValid",value:e})},format:function(e,t){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),Y.call(this,{action:"format",value:e,metadata:t})},analyseMask:function(e,d){function t(e,t,i,n){this.matches=[],this.openGroup=e||!1,this.isGroup=e||!1,this.isOptional=t||!1,this.isQuantifier=i||!1,this.isAlternator=n||!1,this.quantifier={min:1,max:1}}function r(e,t,i){var n=(d.definitions?d.definitions[t]:ee)||X.prototype.definitions[t];i=i!==ee?i:e.matches.length;var o=e.matches[i-1];if(n&&!f){for(var r=n.prevalidator,s=r?r.length:0,a=1;a<n.cardinality;a++){var l=a<=s?r[a-1]:[],c=l.validator,u=l.cardinality;e.matches.splice(i++,0,{fn:c?"string"==typeof c?new RegExp(c):new function(){this.test=c}:new RegExp("."),cardinality:u||1,optionality:e.isOptional,newBlockMarker:o===ee||o.def!==(n.definitionSymbol||t),casing:n.casing,def:n.definitionSymbol||t,placeholder:n.placeholder,nativeDef:t}),o=e.matches[i-1]}e.matches.splice(i++,0,{fn:n.validator?"string"==typeof n.validator?new RegExp(n.validator):new function(){this.test=n.validator}:new RegExp("."),cardinality:n.cardinality,optionality:e.isOptional,newBlockMarker:o===ee||o.def!==(n.definitionSymbol||t),casing:n.casing,def:n.definitionSymbol||t,placeholder:n.placeholder,nativeDef:t})}else e.matches.splice(i++,0,{fn:null,cardinality:0,optionality:e.isOptional,newBlockMarker:o===ee||o.def!==t,casing:null,def:d.staticDefinitionSymbol||t,placeholder:d.staticDefinitionSymbol!==ee?t:ee,nativeDef:t}),f=!1}function i(){if(0<m.length){if(r(a=m[m.length-1],o),a.isAlternator){l=m.pop();for(var e=0;e<l.matches.length;e++)l.matches[e].isGroup=!1;0<m.length?(a=m[m.length-1]).matches.push(l):h.matches.push(l)}}else r(h,o)}for(var n,o,s,a,l,c,u,p=/(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g,f=!1,h=new t,m=[],v=[];n=p.exec(e);)if(o=n[0],f)i();else switch(o.charAt(0)){case d.escapeChar:f=!0;break;case d.optionalmarker.end:case d.groupmarker.end:if((s=m.pop()).openGroup=!1,s!==ee)if(0<m.length){if((a=m[m.length-1]).matches.push(s),a.isAlternator){l=m.pop();for(var g=0;g<l.matches.length;g++)l.matches[g].isGroup=!1;0<m.length?(a=m[m.length-1]).matches.push(l):h.matches.push(l)}}else h.matches.push(s);else i();break;case d.optionalmarker.start:m.push(new t(!1,!0));break;case d.groupmarker.start:m.push(new t(!0));break;case d.quantifiermarker.start:var y=new t(!1,!1,!0),k=(o=o.replace(/[{}]/g,"")).split(","),b=isNaN(k[0])?k[0]:parseInt(k[0]),w=1===k.length?b:isNaN(k[1])?k[1]:parseInt(k[1]);if("*"!==w&&"+"!==w||(b="*"===w?0:1),y.quantifier={min:b,max:w},0<m.length){var x=m[m.length-1].matches;(n=x.pop()).isGroup||((u=new t(!0)).matches.push(n),n=u),x.push(n),x.push(y)}else(n=h.matches.pop()).isGroup||((u=new t(!0)).matches.push(n),n=u),h.matches.push(n),h.matches.push(y);break;case d.alternatormarker:(c=0<m.length?(a=m[m.length-1]).matches.pop():h.matches.pop()).isAlternator?m.push(c):((l=new t(!1,!1,!1,!0)).matches.push(c),m.push(l));break;default:i()}for(;0<m.length;)s=m.pop(),h.matches.push(s);return 0<h.matches.length&&(function n(o){o&&o.matches&&Q.each(o.matches,function(e,t){var i=o.matches[e+1];(i===ee||i.matches===ee||!1===i.isQuantifier)&&t&&t.isGroup&&(t.isGroup=!1,r(t,d.groupmarker.start,0),!0!==t.openGroup&&r(t,d.groupmarker.end)),n(t)})}(h),v.push(h)),d.numericInput&&function e(t){function i(e){return e===d.optionalmarker.start?e=d.optionalmarker.end:e===d.optionalmarker.end?e=d.optionalmarker.start:e===d.groupmarker.start?e=d.groupmarker.end:e===d.groupmarker.end&&(e=d.groupmarker.start),e}t.matches=t.matches.reverse();for(var n in t.matches)if(t.matches.hasOwnProperty(n)){var o=parseInt(n);if(t.matches[n].isQuantifier&&t.matches[o+1]&&t.matches[o+1].isGroup){var r=t.matches[n];t.matches.splice(n,1),t.matches.splice(o+1,0,r)}t.matches[n].matches!==ee?t.matches[n]=e(t.matches[n]):t.matches[n]=i(t.matches[n])}return t}(v[0]),v}},X.extendDefaults=function(e){Q.extend(!0,X.prototype.defaults,e)},X.extendDefinitions=function(e){Q.extend(!0,X.prototype.definitions,e)},X.extendAliases=function(e){Q.extend(!0,X.prototype.aliases,e)},X.format=function(e,t,i){return X(t).format(e,i)},X.unmask=function(e,t){return X(t).unmaskedvalue(e)},X.isValid=function(e,t){return X(t).isValid(e)},X.remove=function(e){Q.each(e,function(e,t){t.inputmask&&t.inputmask.remove()})},X.escapeRegex=function(e){return e.replace(new RegExp("(\\"+["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"].join("|\\")+")","gim"),"\\$1")},X.keyCode={ALT:18,BACKSPACE:8,BACKSPACE_SAFARI:127,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91,X:88},X)}(),function(){var o,r;o=jQuery,r=window.Inputmask,void 0===o.fn.inputmask&&(o.fn.inputmask=function(e,t){var i,n=this[0];if(void 0===t&&(t={}),"string"==typeof e)switch(e){case"unmaskedvalue":return n&&n.inputmask?n.inputmask.unmaskedvalue():o(n).val();case"remove":return this.each(function(){this.inputmask&&this.inputmask.remove()});case"getemptymask":return n&&n.inputmask?n.inputmask.getemptymask():"";case"hasMaskedValue":return!(!n||!n.inputmask)&&n.inputmask.hasMaskedValue();case"isComplete":return!n||!n.inputmask||n.inputmask.isComplete();case"getmetadata":return n&&n.inputmask?n.inputmask.getmetadata():void 0;case"setvalue":o(n).val(t),n&&void 0===n.inputmask&&o(n).triggerHandler("setvalue");break;case"option":if("string"!=typeof t)return this.each(function(){if(void 0!==this.inputmask)return this.inputmask.option(t)});if(n&&void 0!==n.inputmask)return n.inputmask.option(t);break;default:return t.alias=e,i=new r(t),this.each(function(){i.mask(this)})}else{if("object"==_typeof(e))return i=new r(e),void 0===e.mask&&void 0===e.alias?this.each(function(){return void 0!==this.inputmask?this.inputmask.option(e):void i.mask(this)}):this.each(function(){i.mask(this)});if(void 0===e)return this.each(function(){(i=new r(t)).mask(this)})}}),o.fn.inputmask}(),jQuery,Inputmask,function(){var s,a;s=window.dependencyLib||jQuery,(a=window.Inputmask).extendAliases({"dd/mm/yyyy":{mask:"1/2/y",placeholder:"dd/mm/yyyy",regex:{val1pre:new RegExp("[0-3]"),val1:new RegExp("0[1-9]|[12][0-9]|3[01]"),val2pre:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[1-9]|[12][0-9]|3[01])"+t+"[01])")},val2:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[1-9]|[12][0-9])"+t+"(0[1-9]|1[012]))|(30"+t+"(0[13-9]|1[012]))|(31"+t+"(0[13578]|1[02]))")}},leapday:"29/02/",separator:"/",yearrange:{minyear:1900,maxyear:2099},isInYearRange:function(e,t,i){if(isNaN(e))return!1;var n=parseInt(e.concat(t.toString().slice(e.length))),o=parseInt(e.concat(i.toString().slice(e.length)));return!isNaN(n)&&t<=n&&n<=i||!isNaN(o)&&t<=o&&o<=i},determinebaseyear:function(e,t,i){var n=(new Date).getFullYear();if(n<e)return e;if(t<n){for(var o=t.toString().slice(0,2),r=t.toString().slice(2,4);t<o+i;)o--;var s=o+r;return s<e?e:s}if(e<=n&&n<=t){for(var a=n.toString().slice(0,2);t<a+i;)a--;var l=a+i;return l<e?e:l}return n},onKeyDown:function(e,t,i,n){var o=s(this);if(e.ctrlKey&&e.keyCode===a.keyCode.RIGHT){var r=new Date;o.val(r.getDate().toString()+(r.getMonth()+1).toString()+r.getFullYear().toString()),o.trigger("setvalue")}},getFrontValue:function(e,t,i){for(var n=0,o=0,r=0;r<e.length&&"2"!==e.charAt(r);r++){var s=i.definitions[e.charAt(r)];s?(n+=o,o=s.cardinality):o++}return t.join("").substr(n,o)},postValidation:function(e,t,i){var n,o,r=e.join("");return n=0===i.mask.indexOf("y")?(o=r.substr(0,4),r.substr(4,11)):(o=r.substr(6,11),r.substr(0,6)),t&&(n!==i.leapday||function(e){return isNaN(e)||29===new Date(e,2,0).getDate()}(o))},definitions:{1:{validator:function(e,t,i,n,o){var r=o.regex.val1.test(e);return n||r||e.charAt(1)!==o.separator&&-1==="-./".indexOf(e.charAt(1))||!(r=o.regex.val1.test("0"+e.charAt(0)))?r:(t.buffer[i-1]="0",{refreshFromBuffer:{start:i-1,end:i},pos:i,c:e.charAt(0)})},cardinality:2,prevalidator:[{validator:function(e,t,i,n,o){var r=e;isNaN(t.buffer[i+1])||(r+=t.buffer[i+1]);var s=1===r.length?o.regex.val1pre.test(r):o.regex.val1.test(r);if(!n&&!s){if(s=o.regex.val1.test(e+"0"))return t.buffer[i]=e,t.buffer[++i]="0",{pos:i,c:"0"};if(s=o.regex.val1.test("0"+e))return t.buffer[i]="0",{pos:++i}}return s},cardinality:1}]},2:{validator:function(e,t,i,n,o){var r=o.getFrontValue(t.mask,t.buffer,o);-1!==r.indexOf(o.placeholder[0])&&(r="01"+o.separator);var s=o.regex.val2(o.separator).test(r+e);return n||s||e.charAt(1)!==o.separator&&-1==="-./".indexOf(e.charAt(1))||!(s=o.regex.val2(o.separator).test(r+"0"+e.charAt(0)))?s:(t.buffer[i-1]="0",{refreshFromBuffer:{start:i-1,end:i},pos:i,c:e.charAt(0)})},cardinality:2,prevalidator:[{validator:function(e,t,i,n,o){isNaN(t.buffer[i+1])||(e+=t.buffer[i+1]);var r=o.getFrontValue(t.mask,t.buffer,o);-1!==r.indexOf(o.placeholder[0])&&(r="01"+o.separator);var s=1===e.length?o.regex.val2pre(o.separator).test(r+e):o.regex.val2(o.separator).test(r+e);return n||s||!(s=o.regex.val2(o.separator).test(r+"0"+e))?s:(t.buffer[i]="0",{pos:++i})},cardinality:1}]},y:{validator:function(e,t,i,n,o){return o.isInYearRange(e,o.yearrange.minyear,o.yearrange.maxyear)},cardinality:4,prevalidator:[{validator:function(e,t,i,n,o){var r=o.isInYearRange(e,o.yearrange.minyear,o.yearrange.maxyear);if(!n&&!r){var s=o.determinebaseyear(o.yearrange.minyear,o.yearrange.maxyear,e+"0").toString().slice(0,1);if(r=o.isInYearRange(s+e,o.yearrange.minyear,o.yearrange.maxyear))return t.buffer[i++]=s.charAt(0),{pos:i};if(s=o.determinebaseyear(o.yearrange.minyear,o.yearrange.maxyear,e+"0").toString().slice(0,2),r=o.isInYearRange(s+e,o.yearrange.minyear,o.yearrange.maxyear))return t.buffer[i++]=s.charAt(0),t.buffer[i++]=s.charAt(1),{pos:i}}return r},cardinality:1},{validator:function(e,t,i,n,o){var r=o.isInYearRange(e,o.yearrange.minyear,o.yearrange.maxyear);if(!n&&!r){var s=o.determinebaseyear(o.yearrange.minyear,o.yearrange.maxyear,e).toString().slice(0,2);if(r=o.isInYearRange(e[0]+s[1]+e[1],o.yearrange.minyear,o.yearrange.maxyear))return t.buffer[i++]=s.charAt(1),{pos:i};if(s=o.determinebaseyear(o.yearrange.minyear,o.yearrange.maxyear,e).toString().slice(0,2),r=o.isInYearRange(s+e,o.yearrange.minyear,o.yearrange.maxyear))return t.buffer[i-1]=s.charAt(0),t.buffer[i++]=s.charAt(1),t.buffer[i++]=e.charAt(0),{refreshFromBuffer:{start:i-3,end:i},pos:i}}return r},cardinality:2},{validator:function(e,t,i,n,o){return o.isInYearRange(e,o.yearrange.minyear,o.yearrange.maxyear)},cardinality:3}]}},insertMode:!1,autoUnmask:!1},"mm/dd/yyyy":{placeholder:"mm/dd/yyyy",alias:"dd/mm/yyyy",regex:{val2pre:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+t+"[0-3])|(02"+t+"[0-2])")},val2:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+t+"30)|((0[13578]|1[02])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(e,t,i,n){var o=s(this);if(e.ctrlKey&&e.keyCode===a.keyCode.RIGHT){var r=new Date;o.val((r.getMonth()+1).toString()+r.getDate().toString()+r.getFullYear().toString()),o.trigger("setvalue")}}},"yyyy/mm/dd":{mask:"y/1/2",placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",leapday:"/02/29",onKeyDown:function(e,t,i,n){var o=s(this);if(e.ctrlKey&&e.keyCode===a.keyCode.RIGHT){var r=new Date;o.val(r.getFullYear().toString()+(r.getMonth()+1).toString()+r.getDate().toString()),o.trigger("setvalue")}}},"dd.mm.yyyy":{mask:"1.2.y",placeholder:"dd.mm.yyyy",leapday:"29.02.",separator:".",alias:"dd/mm/yyyy"},"dd-mm-yyyy":{mask:"1-2-y",placeholder:"dd-mm-yyyy",leapday:"29-02-",separator:"-",alias:"dd/mm/yyyy"},"mm.dd.yyyy":{mask:"1.2.y",placeholder:"mm.dd.yyyy",leapday:"02.29.",separator:".",alias:"mm/dd/yyyy"},"mm-dd-yyyy":{mask:"1-2-y",placeholder:"mm-dd-yyyy",leapday:"02-29-",separator:"-",alias:"mm/dd/yyyy"},"yyyy.mm.dd":{mask:"y.1.2",placeholder:"yyyy.mm.dd",leapday:".02.29",separator:".",alias:"yyyy/mm/dd"},"yyyy-mm-dd":{mask:"y-1-2",placeholder:"yyyy-mm-dd",leapday:"-02-29",separator:"-",alias:"yyyy/mm/dd"},datetime:{mask:"1/2/y h:s",placeholder:"dd/mm/yyyy hh:mm",alias:"dd/mm/yyyy",regex:{hrspre:new RegExp("[012]"),hrs24:new RegExp("2[0-4]|1[3-9]"),hrs:new RegExp("[01][0-9]|2[0-4]"),ampm:new RegExp("^[a|p|A|P][m|M]"),mspre:new RegExp("[0-5]"),ms:new RegExp("[0-5][0-9]")},timeseparator:":",hourFormat:"24",definitions:{h:{validator:function(e,t,i,n,o){if("24"===o.hourFormat&&24===parseInt(e,10))return t.buffer[i-1]="0",t.buffer[i]="0",{refreshFromBuffer:{start:i-1,end:i},c:"0"};var r=o.regex.hrs.test(e);if(!n&&!r&&(e.charAt(1)===o.timeseparator||-1!=="-.:".indexOf(e.charAt(1)))&&(r=o.regex.hrs.test("0"+e.charAt(0))))return t.buffer[i-1]="0",t.buffer[i]=e.charAt(0),{refreshFromBuffer:{start:++i-2,end:i},pos:i,c:o.timeseparator};if(r&&"24"!==o.hourFormat&&o.regex.hrs24.test(e)){var s=parseInt(e,10);return t.buffer[i+5]=24===s?"a":"p",t.buffer[i+6]="m",(s-=12)<10?(t.buffer[i]=s.toString(),t.buffer[i-1]="0"):(t.buffer[i]=s.toString().charAt(1),t.buffer[i-1]=s.toString().charAt(0)),{refreshFromBuffer:{start:i-1,end:i+6},c:t.buffer[i]}}return r},cardinality:2,prevalidator:[{validator:function(e,t,i,n,o){var r=o.regex.hrspre.test(e);return n||r||!(r=o.regex.hrs.test("0"+e))?r:(t.buffer[i]="0",{pos:++i})},cardinality:1}]},s:{validator:"[0-5][0-9]",cardinality:2,prevalidator:[{validator:function(e,t,i,n,o){var r=o.regex.mspre.test(e);return n||r||!(r=o.regex.ms.test("0"+e))?r:(t.buffer[i]="0",{pos:++i})},cardinality:1}]},t:{validator:function(e,t,i,n,o){return o.regex.ampm.test(e+"m")},casing:"lower",cardinality:1}},insertMode:!1,autoUnmask:!1},datetime12:{mask:"1/2/y h:s t\\m",placeholder:"dd/mm/yyyy hh:mm xm",alias:"datetime",hourFormat:"12"},"mm/dd/yyyy hh:mm xm":{mask:"1/2/y h:s t\\m",placeholder:"mm/dd/yyyy hh:mm xm",alias:"datetime12",regex:{val2pre:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+t+"[0-3])|(02"+t+"[0-2])")},val2:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+t+"30)|((0[13578]|1[02])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(e,t,i,n){var o=s(this);if(e.ctrlKey&&e.keyCode===a.keyCode.RIGHT){var r=new Date;o.val((r.getMonth()+1).toString()+r.getDate().toString()+r.getFullYear().toString()),o.trigger("setvalue")}}},"hh:mm t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"h:s t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"hh:mm:ss":{mask:"h:s:s",placeholder:"hh:mm:ss",alias:"datetime",autoUnmask:!1},"hh:mm":{mask:"h:s",placeholder:"hh:mm",alias:"datetime",autoUnmask:!1},date:{alias:"dd/mm/yyyy"},"mm/yyyy":{mask:"1/y",placeholder:"mm/yyyy",leapday:"donotuse",separator:"/",alias:"mm/dd/yyyy"},shamsi:{regex:{val2pre:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"[0-3])")},val2:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[1-9]|1[012])"+t+"30)|((0[1-6])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},yearrange:{minyear:1300,maxyear:1499},mask:"y/1/2",leapday:"/12/30",placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",clearIncomplete:!0},"yyyy-mm-dd hh:mm:ss":{mask:"y-1-2 h:s:s",placeholder:"yyyy-mm-dd hh:mm:ss",alias:"datetime",separator:"-",leapday:"-02-29",regex:{val2pre:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+t+"[0-3])|(02"+t+"[0-2])")},val2:function(e){var t=a.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+t+"30)|((0[13578]|1[02])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},onKeyDown:function(e,t,i,n){}}})}(),function(){var e;window.dependencyLib||jQuery,(e=window.Inputmask).extendDefinitions({A:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,casing:"upper"},"&":{validator:"[0-9A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,casing:"upper"},"#":{validator:"[0-9A-Fa-f]",cardinality:1,casing:"upper"}}),e.extendAliases({url:{definitions:{i:{validator:".",cardinality:1}},mask:"(\\http://)|(\\http\\s://)|(ftp://)|(ftp\\s://)i{+}",insertMode:!1,autoUnmask:!1,inputmode:"url"},ip:{mask:"i[i[i]].i[i[i]].i[i[i]].i[i[i]]",definitions:{i:{validator:function(e,t,i,n,o){return e=-1<i-1&&"."!==t.buffer[i-1]?(e=t.buffer[i-1]+e,-1<i-2&&"."!==t.buffer[i-2]?t.buffer[i-2]+e:"0"+e):"00"+e,new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(e)},cardinality:1}},onUnMask:function(e,t,i){return e},inputmode:"numeric"},email:{mask:"*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",greedy:!1,onBeforePaste:function(e,t){return(e=e.toLowerCase()).replace("mailto:","")},definitions:{"*":{validator:"[0-9A-Za-z!#$%&'*+/=?^_`{|}~-]",cardinality:1,casing:"lower"},"-":{validator:"[0-9A-Za-z-]",cardinality:1,casing:"lower"}},onUnMask:function(e,t,i){return e},inputmode:"email"},mac:{mask:"##:##:##:##:##:##"},vin:{mask:"V{13}9{4}",definitions:{V:{validator:"[A-HJ-NPR-Za-hj-npr-z\\d]",cardinality:1,casing:"upper"}},clearIncomplete:!0,autoUnmask:!0}})}(),function(){function r(e,t){for(var i="",n=0;n<e.length;n++)i+=t.definitions[e.charAt(n)]||t.optionalmarker.start===e.charAt(n)||t.optionalmarker.end===e.charAt(n)||t.quantifiermarker.start===e.charAt(n)||t.quantifiermarker.end===e.charAt(n)||t.groupmarker.start===e.charAt(n)||t.groupmarker.end===e.charAt(n)||t.alternatormarker===e.charAt(n)?"\\"+e.charAt(n):e.charAt(n);return i}var h,m,v;h=window.dependencyLib||jQuery,(m=window.Inputmask).extendAliases({numeric:{mask:function(e){if(0!==e.repeat&&isNaN(e.integerDigits)&&(e.integerDigits=e.repeat),e.repeat=0,e.groupSeparator===e.radixPoint&&("."===e.radixPoint?e.groupSeparator=",":","===e.radixPoint?e.groupSeparator=".":e.groupSeparator="")," "===e.groupSeparator&&(e.skipOptionalPartCharacter=v),e.autoGroup=e.autoGroup&&""!==e.groupSeparator,e.autoGroup&&("string"==typeof e.groupSize&&isFinite(e.groupSize)&&(e.groupSize=parseInt(e.groupSize)),isFinite(e.integerDigits))){var t=Math.floor(e.integerDigits/e.groupSize),i=e.integerDigits%e.groupSize;e.integerDigits=parseInt(e.integerDigits)+(0==i?t-1:t),e.integerDigits<1&&(e.integerDigits="*")}1<e.placeholder.length&&(e.placeholder=e.placeholder.charAt(0)),"radixFocus"===e.positionCaretOnClick&&""===e.placeholder&&!1===e.integerOptional&&(e.positionCaretOnClick="lvp"),e.definitions[";"]=e.definitions["~"],e.definitions[";"].definitionSymbol="~",!0===e.numericInput&&(e.positionCaretOnClick="radixFocus"===e.positionCaretOnClick?"lvp":e.positionCaretOnClick,e.digitsOptional=!1,isNaN(e.digits)&&(e.digits=2),e.decimalProtect=!1);var n="[+]";if(n+=r(e.prefix,e),n+=!0===e.integerOptional?"~{1,"+e.integerDigits+"}":"~{"+e.integerDigits+"}",e.digits!==v){e.radixPointDefinitionSymbol=e.decimalProtect?":":e.radixPoint;var o=e.digits.toString().split(",");isFinite(o[0]&&o[1]&&isFinite(o[1]))?n+=e.radixPointDefinitionSymbol+";{"+e.digits+"}":(isNaN(e.digits)||0<parseInt(e.digits))&&(n+=e.digitsOptional?"["+e.radixPointDefinitionSymbol+";{1,"+e.digits+"}]":e.radixPointDefinitionSymbol+";{"+e.digits+"}")}return n+=r(e.suffix,e),n+="[-]",e.greedy=!1,n},placeholder:"",greedy:!1,digits:"*",digitsOptional:!0,radixPoint:".",positionCaretOnClick:"radixFocus",groupSize:3,groupSeparator:"",autoGroup:!1,allowMinus:!0,negationSymbol:{front:"-",back:""},integerDigits:"+",integerOptional:!0,prefix:"",suffix:"",rightAlign:!0,decimalProtect:!0,min:null,max:null,step:1,insertMode:!0,autoUnmask:!1,unmaskAsNumber:!1,inputmode:"numeric",preValidation:function(e,t,i,n,o){if("-"===i||i==o.negationSymbol.front)return!0===o.allowMinus&&(o.isNegative=o.isNegative===v||!o.isNegative,""===e.join("")||{caret:t,dopost:!0});if(!1===n&&i===o.radixPoint&&o.digits!==v&&(isNaN(o.digits)||0<parseInt(o.digits))){var r=h.inArray(o.radixPoint,e);if(-1!==r)return!0===o.numericInput?t===r:{caret:r+1}}return!0},postValidation:function(e,t,i){var n=i.suffix.split(""),o=i.prefix.split("");if(t.pos==v&&t.caret!==v&&!0!==t.dopost)return t;var r=t.caret!=v?t.caret:t.pos,s=e.slice();i.numericInput&&(r=s.length-r-1,s=s.reverse());var a=s[r];if(a===i.groupSeparator&&(a=s[r+=1]),r==s.length-i.suffix.length-1&&a===i.radixPoint)return t;a!==v&&a!==i.radixPoint&&a!==i.negationSymbol.front&&a!==i.negationSymbol.back&&(s[r]="?",0<i.prefix.length&&r>=(!1===i.isNegative?1:0)&&r<i.prefix.length-1+(!1===i.isNegative?1:0)?o[r-(!1===i.isNegative?1:0)]="?":0<i.suffix.length&&r>=s.length-i.suffix.length-(!1===i.isNegative?1:0)&&(n[r-(s.length-i.suffix.length-(!1===i.isNegative?1:0))]="?")),o=o.join(""),n=n.join("");var l=s.join("").replace(o,"");if(l=(l=(l=(l=l.replace(n,"")).replace(new RegExp(m.escapeRegex(i.groupSeparator),"g"),"")).replace(new RegExp("[-"+m.escapeRegex(i.negationSymbol.front)+"]","g"),"")).replace(new RegExp(m.escapeRegex(i.negationSymbol.back)+"$"),""),isNaN(i.placeholder)&&(l=l.replace(new RegExp(m.escapeRegex(i.placeholder),"g"),"")),1<l.length&&1!==l.indexOf(i.radixPoint)&&("0"==a&&(l=l.replace(/^\?/g,"")),l=l.replace(/^0/g,"")),l.charAt(0)===i.radixPoint&&!0!==i.numericInput&&(l="0"+l),""!==l){if(l=l.split(""),!i.digitsOptional&&isFinite(i.digits)){var c=h.inArray(i.radixPoint,l),u=h.inArray(i.radixPoint,s);-1===c&&(l.push(i.radixPoint),c=l.length-1);for(var d=1;d<=i.digits;d++)i.digitsOptional||l[c+d]!==v&&l[c+d]!==i.placeholder.charAt(0)?-1!==u&&s[u+d]!==v&&(l[c+d]=l[c+d]||s[u+d]):l[c+d]=t.placeholder||i.placeholder.charAt(0)}!0!==i.autoGroup||""===i.groupSeparator||a===i.radixPoint&&t.pos===v&&!t.dopost?l=l.join(""):(l=m(function(e,t){var i="";if(i+="("+t.groupSeparator+"*{"+t.groupSize+"}){*}",""!==t.radixPoint){var n=e.join("").split(t.radixPoint);n[1]&&(i+=t.radixPoint+"*{"+n[1].match(/^\d*\??\d*/)[0].length+"}")}return i}(l,i),{numericInput:!0,jitMasking:!0,definitions:{"*":{validator:"[0-9?]",cardinality:1}}}).format(l.join(""))).charAt(0)===i.groupSeparator&&l.substr(1)}if(i.isNegative&&"blur"===t.event&&(i.isNegative="0"!==l),l=o+l,l+=n,i.isNegative&&(l=i.negationSymbol.front+l,l+=i.negationSymbol.back),l=l.split(""),a!==v)if(a!==i.radixPoint&&a!==i.negationSymbol.front&&a!==i.negationSymbol.back)-1<(r=h.inArray("?",l))?l[r]=a:r=t.caret||0;else if(a===i.radixPoint||a===i.negationSymbol.front||a===i.negationSymbol.back){var p=h.inArray(a,l);-1!==p&&(r=p)}i.numericInput&&(r=l.length-r-1,l=l.reverse());var f={caret:a===v||t.pos!==v?r+(i.numericInput?-1:1):r,buffer:l,refreshFromBuffer:t.dopost||e.join("")!==l.join("")};return f.refreshFromBuffer?f:t},onBeforeWrite:function(e,t,i,n){if(e)switch(e.type){case"keydown":return n.postValidation(t,{caret:i,dopost:!0},n);case"blur":case"checkval":var o;if(function(e){e.parseMinMaxOptions===v&&(null!==e.min&&(e.min=e.min.toString().replace(new RegExp(m.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.min=e.min.replace(e.radixPoint,".")),e.min=isFinite(e.min)?parseFloat(e.min):NaN,isNaN(e.min)&&(e.min=Number.MIN_VALUE)),null!==e.max&&(e.max=e.max.toString().replace(new RegExp(m.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.max=e.max.replace(e.radixPoint,".")),e.max=isFinite(e.max)?parseFloat(e.max):NaN,isNaN(e.max)&&(e.max=Number.MAX_VALUE)),e.parseMinMaxOptions="done")}(n),null!==n.min||null!==n.max){if(o=n.onUnMask(t.join(""),v,h.extend({},n,{unmaskAsNumber:!0})),null!==n.min&&o<n.min)return n.isNegative=n.min<0,n.postValidation(n.min.toString().replace(".",n.radixPoint).split(""),{caret:i,dopost:!0,placeholder:"0"},n);if(null!==n.max&&o>n.max)return n.isNegative=n.max<0,n.postValidation(n.max.toString().replace(".",n.radixPoint).split(""),{caret:i,dopost:!0,placeholder:"0"},n)}return n.postValidation(t,{caret:i,dopost:!0,placeholder:"0",event:"blur"},n);case"_checkval":return{caret:i}}},regex:{integerPart:function(e,t){return t?new RegExp("["+m.escapeRegex(e.negationSymbol.front)+"+]?"):new RegExp("["+m.escapeRegex(e.negationSymbol.front)+"+]?\\d+")},integerNPart:function(e){return new RegExp("[\\d"+m.escapeRegex(e.groupSeparator)+m.escapeRegex(e.placeholder.charAt(0))+"]+")}},definitions:{"~":{validator:function(e,t,i,n,o,r){var s=n?new RegExp("[0-9"+m.escapeRegex(o.groupSeparator)+"]").test(e):new RegExp("[0-9]").test(e);if(!0===s){if(!0!==o.numericInput&&t.validPositions[i]!==v&&"~"===t.validPositions[i].match.def&&!r){var a=t.buffer.join("");a=(a=(a=a.replace(new RegExp("[-"+m.escapeRegex(o.negationSymbol.front)+"]","g"),"")).replace(new RegExp(m.escapeRegex(o.negationSymbol.back)+"$"),"")).replace(/0/g,o.placeholder.charAt(0));var l=t._buffer.join("");for(a===o.radixPoint&&(a=l);null===a.match(m.escapeRegex(l)+"$");)l=l.slice(1);a=(a=a.replace(l,"")).split(""),s=a[i]===v?{pos:i,remove:i}:{pos:i}}}else n||e!==o.radixPoint||t.validPositions[i-1]!==v||(t.buffer[i]="0",s={pos:i+1});return s},cardinality:1},"+":{validator:function(e,t,i,n,o){return o.allowMinus&&("-"===e||e===o.negationSymbol.front)},cardinality:1,placeholder:""},"-":{validator:function(e,t,i,n,o){return o.allowMinus&&e===o.negationSymbol.back},cardinality:1,placeholder:""},":":{validator:function(e,t,i,n,o){var r="["+m.escapeRegex(o.radixPoint)+"]";return isValid=new RegExp(r).test(e),isValid&&t.validPositions[i]&&t.validPositions[i].match.placeholder===o.radixPoint&&(isValid={caret:i+1}),isValid},cardinality:1,placeholder:function(e){return e.radixPoint}}},onUnMask:function(e,t,i){if(""===t&&!0===i.nullable)return t;var n=e.replace(i.prefix,"");return n=(n=n.replace(i.suffix,"")).replace(new RegExp(m.escapeRegex(i.groupSeparator),"g"),""),""!==i.placeholder.charAt(0)&&(n=n.replace(new RegExp(i.placeholder.charAt(0),"g"),"0")),i.unmaskAsNumber?(""!==i.radixPoint&&-1!==n.indexOf(i.radixPoint)&&(n=n.replace(m.escapeRegex.call(this,i.radixPoint),".")),Number(n)):n},isComplete:function(e,t){var i=e.join(""),n=e.slice();if(n.join("")!==i)return!1;var o=i.replace(t.prefix,"");return o=(o=o.replace(t.suffix,"")).replace(new RegExp(m.escapeRegex(t.groupSeparator),"g"),""),","===t.radixPoint&&(o=o.replace(m.escapeRegex(t.radixPoint),".")),isFinite(o)},onBeforeMask:function(e,t){if(t.isNegative=v,e=e.toString().charAt(e.length-1)===t.radixPoint?e.toString().substr(0,e.length-1):e.toString(),""!==t.radixPoint&&isFinite(e)){var i=e.split("."),n=""!==t.groupSeparator?parseInt(t.groupSize):0;2===i.length&&(i[0].length>n||i[1].length>n||i[0].length<n&&i[1].length<n)&&(e=e.replace(".",t.radixPoint))}var o=e.match(/,/g),r=e.match(/\./g);if(e=r&&o?r.length>o.length?(e=e.replace(/\./g,"")).replace(",",t.radixPoint):o.length>r.length?(e=e.replace(/,/g,"")).replace(".",t.radixPoint):e.indexOf(".")<e.indexOf(",")?e.replace(/\./g,""):e=e.replace(/,/g,""):e.replace(new RegExp(m.escapeRegex(t.groupSeparator),"g"),""),0===t.digits&&(-1!==e.indexOf(".")?e=e.substring(0,e.indexOf(".")):-1!==e.indexOf(",")&&(e=e.substring(0,e.indexOf(",")))),""!==t.radixPoint&&isFinite(t.digits)&&-1!==e.indexOf(t.radixPoint)){var s=e.split(t.radixPoint),a=s[1].match(new RegExp("\\d*"))[0];if(parseInt(t.digits)<a.toString().length){var l=Math.pow(10,parseInt(t.digits));e=e.replace(m.escapeRegex(t.radixPoint),"."),e=(e=Math.round(parseFloat(e)*l)/l).toString().replace(".",t.radixPoint)}}return e},canClearPosition:function(e,t,i,n,o){var r=e.validPositions[t],s=r.input!==o.radixPoint||null!==e.validPositions[t].match.fn&&!1===o.decimalProtect||r.input===o.radixPoint&&e.validPositions[t+1]&&null===e.validPositions[t+1].match.fn||isFinite(r.input)||t===i||r.input===o.groupSeparator||r.input===o.negationSymbol.front||r.input===o.negationSymbol.back;return!s||"+"!=r.match.nativeDef&&"-"!=r.match.nativeDef||(o.isNegative=!1),s},onKeyDown:function(e,t,i,n){var o=h(this);if(e.ctrlKey)switch(e.keyCode){case m.keyCode.UP:o.val(parseFloat(this.inputmask.unmaskedvalue())+parseInt(n.step)),o.trigger("setvalue");break;case m.keyCode.DOWN:o.val(parseFloat(this.inputmask.unmaskedvalue())-parseInt(n.step)),o.trigger("setvalue")}}},currency:{prefix:"$ ",groupSeparator:",",alias:"numeric",placeholder:"0",autoGroup:!0,digits:2,digitsOptional:!1,clearMaskOnLostFocus:!1},decimal:{alias:"numeric"},integer:{alias:"numeric",digits:0,radixPoint:""},percentage:{alias:"numeric",digits:2,digitsOptional:!0,radixPoint:".",placeholder:"0",autoGroup:!1,min:0,max:100,suffix:" %",allowMinus:!1}})}(),function(){function t(e,t){var i=(e.mask||e).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),n=(t.mask||t).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),o=(e.mask||e).split("#")[0],r=(t.mask||t).split("#")[0];return 0===r.indexOf(o)?-1:0===o.indexOf(r)?1:i.localeCompare(n)}var s,i,n;s=window.dependencyLib||jQuery,i=window.Inputmask,n=i.prototype.analyseMask,i.prototype.analyseMask=function(l,r){var c={};r.phoneCodes&&(r.phoneCodes&&1e3<r.phoneCodes.length&&(function e(t,i,n){i=i||"",n=n||c,""!==i&&(n[i]={});for(var o="",r=n[i]||n,s=t.length-1;0<=s;s--)l=t[s].mask||t[s],o=l.substr(0,1),r[o]=r[o]||[],r[o].unshift(l.substr(1)),t.splice(s,1);for(var a in r)500<r[a].length&&e(r[a].slice(),a,r)}((l=l.substr(1,l.length-2)).split(r.groupmarker.end+r.alternatormarker+r.groupmarker.start)),l=function e(t){var i="",n=[];for(var o in t)s.isArray(t[o])?1===t[o].length?n.push(o+t[o]):n.push(o+r.groupmarker.start+t[o].join(r.groupmarker.end+r.alternatormarker+r.groupmarker.start)+r.groupmarker.end):n.push(o+e(t[o]));return i+=1===n.length?n[0]:r.groupmarker.start+n.join(r.groupmarker.end+r.alternatormarker+r.groupmarker.start)+r.groupmarker.end}(c)),l=l.replace(/9/g,"\\9"));var e=n.call(this,l,r);return e},i.extendAliases({abstractphone:{groupmarker:{start:"<",end:">"},countrycode:"",phoneCodes:[],mask:function(e){return e.definitions={"#":i.prototype.definitions[9]},e.phoneCodes.sort(t)},keepStatic:!0,onBeforeMask:function(e,t){var i=e.replace(/^0{1,2}/,"").replace(/[\s]/g,"");return(1<i.indexOf(t.countrycode)||-1===i.indexOf(t.countrycode))&&(i="+"+t.countrycode+i),i},onUnMask:function(e,t,i){return t},inputmode:"tel"}})}(),function(){var w;w=window.dependencyLib||jQuery,window.Inputmask.extendAliases({Regex:{mask:"r",greedy:!1,repeat:"*",regex:null,regexTokens:null,tokenizer:/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,quantifierFilter:/[0-9]+[^,]/,isComplete:function(e,t){return new RegExp(t.regex,t.casing?"i":"").test(e.join(""))},definitions:{r:{validator:function(e,t,i,n,v){function c(e,t){this.matches=[],this.isGroup=e||!1,this.isQuantifier=t||!1,this.quantifier={min:1,max:1},this.repeaterPart=void 0}function g(e,t){var i=!1;t&&(k+="(",b++);for(var n=0;n<e.matches.length;n++){var o=e.matches[n];if(!0===o.isGroup)i=g(o,!0);else if(!0===o.isQuantifier){var r=w.inArray(o,e.matches),s=e.matches[r-1],a=k;if(isNaN(o.quantifier.max)){for(;o.repeaterPart&&o.repeaterPart!==k&&o.repeaterPart.length>k.length&&!(i=g(s,!0)););(i=i||g(s,!0))&&(o.repeaterPart=k),k=a+o.quantifier.max}else{for(var l=0,c=o.quantifier.max-1;l<c&&!(i=g(s,!0));l++);k=a+"{"+o.quantifier.min+","+o.quantifier.max+"}"}}else if(void 0!==o.matches)for(var u=0;u<o.length&&!(i=g(o[u],t));u++);else{var d;if("["==o.charAt(0)){d=k,d+=o;for(var p=0;p<b;p++)d+=")";var f=new RegExp("^("+d+")$",v.casing?"i":"");i=f.test(y)}else for(var h=0,m=o.length;h<m;h++)if("\\"!==o.charAt(h)){d=k,d=(d+=o.substr(0,h+1)).replace(/\|$/,"");for(var p=0;p<b;p++)d+=")";var f=new RegExp("^("+d+")$",v.casing?"i":"");if(i=f.test(y))break}k+=o}if(i)break}return t&&(k+=")",b--),i}var y,u,o=t.buffer.slice(),k="",r=!1,b=0;null===v.regexTokens&&function(){var e,t,i=new c,n=[];for(v.regexTokens=[];e=v.tokenizer.exec(v.regex);)switch((t=e[0]).charAt(0)){case"(":n.push(new c(!0));break;case")":u=n.pop(),0<n.length?n[n.length-1].matches.push(u):i.matches.push(u);break;case"{":case"+":case"*":var o=new c(!1,!0),r=(t=t.replace(/[{}]/g,"")).split(","),s=isNaN(r[0])?r[0]:parseInt(r[0]),a=1===r.length?s:isNaN(r[1])?r[1]:parseInt(r[1]);if(o.quantifier={min:s,max:a},0<n.length){var l=n[n.length-1].matches;(e=l.pop()).isGroup||((u=new c(!0)).matches.push(e),e=u),l.push(e),l.push(o)}else(e=i.matches.pop()).isGroup||((u=new c(!0)).matches.push(e),e=u),i.matches.push(e),i.matches.push(o);break;default:0<n.length?n[n.length-1].matches.push(t):i.matches.push(t)}0<i.matches.length&&v.regexTokens.push(i)}(),o.splice(i,0,e),y=o.join("");for(var s=0;s<v.regexTokens.length;s++){var a=v.regexTokens[s];if(r=g(a,a.isGroup))break}return r},cardinality:1}}}})}(),function(c,C){"use strict";var e;e=function(m){function o(e,t){return this.$element=m(e),!t||"string"!==m.type(t.delay)&&"number"!==m.type(t.delay)||(t.delay={show:t.delay,hide:t.delay}),this.options=m.extend({},n,t),this._defaults=n,this._name=r,this._targetclick=!1,this.init(),f.push(this.$element),this}function e(e,t){return isNaN(e)?t||0:Number(e)}function u(e){return e.data("plugin_"+r)}function d(){for(var e=null,t=0;t<f.length;t++)(e=u(f[t]))&&e.hide(!0);a.trigger("hiddenAll."+g)}function p(e){var t={x:0,y:0};if("touchstart"===e.type||"touchmove"===e.type||"touchend"===e.type||"touchcancel"===e.type){var i=e.originalEvent.touches[0]||e.originalEvent.changedTouches[0];t.x=i.pageX,t.y=i.pageY}else"mousedown"!==e.type&&"mouseup"!==e.type&&"click"!==e.type||(t.x=e.pageX,t.y=e.pageY);return t}var r="webuiPopover",v="webui-popover",g="webui.popover",n={placement:"auto",container:null,width:"auto",height:"auto",trigger:"click",style:"",selector:!1,delay:{show:null,hide:300},async:{type:"GET",before:null,success:null,error:null},cache:!0,multi:!1,arrow:!0,title:"",content:"",closeable:!1,padding:!0,url:"",type:"html",direction:"",animation:null,template:'<div class="webui-popover"><div class="webui-arrow"></div><div class="webui-popover-inner"><a href="#" class="close"></a><h3 class="webui-popover-title"></h3><div class="webui-popover-content"><i class="icon-refresh"></i> <p>&nbsp;</p></div></div></div>',backdrop:!1,dismissible:!0,onShow:null,onHide:null,abortXHR:!0,autoHide:!1,offsetTop:0,offsetLeft:0,iframeOptions:{frameborder:"0",allowtransparency:"true",id:"",name:"",scrolling:"",onload:"",height:"",width:""},hideEmpty:!1},y=v+"-rtl",f=[],s=m('<div class="webui-popover-backdrop"></div>'),t=0,h=!1,x=-2e3,a=m(C),i="ontouchstart"in C.documentElement&&/Mobi/.test(navigator.userAgent);o.prototype={init:function(){if(this.$element[0]instanceof C.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");"manual"!==this.getTrigger()&&(i?this.$element.off("touchend",this.options.selector).on("touchend",this.options.selector,m.proxy(this.toggle,this)):"click"===this.getTrigger()?this.$element.off("click",this.options.selector).on("click",this.options.selector,m.proxy(this.toggle,this)):"hover"===this.getTrigger()&&this.$element.off("mouseenter mouseleave click",this.options.selector).on("mouseenter",this.options.selector,m.proxy(this.mouseenterHandler,this)).on("mouseleave",this.options.selector,m.proxy(this.mouseleaveHandler,this))),this._poped=!1,this._inited=!0,this._opened=!1,this._idSeed=t,this.id=r+this._idSeed,this.options.container=m(this.options.container||C.body).first(),this.options.backdrop&&s.appendTo(this.options.container).hide(),t++,"sticky"===this.getTrigger()&&this.show(),this.options.selector&&(this._options=m.extend({},this.options,{selector:""}))},destroy:function(){for(var e=-1,t=0;t<f.length;t++)if(f[t]===this.$element){e=t;break}f.splice(e,1),this.hide(),this.$element.data("plugin_"+r,null),"click"===this.getTrigger()?this.$element.off("click"):"hover"===this.getTrigger()&&this.$element.off("mouseenter mouseleave"),this.$target&&this.$target.remove()},getDelegateOptions:function(){var i={};return this._options&&m.each(this._options,function(e,t){n[e]!==t&&(i[e]=t)}),i},hide:function(e,t){if((e||"sticky"!==this.getTrigger())&&this._opened){t&&(t.preventDefault(),t.stopPropagation()),this.xhr&&!0===this.options.abortXHR&&(this.xhr.abort(),this.xhr=null);var i=m.Event("hide."+g);if(this.$element.trigger(i,[this.$target]),this.$target){this.$target.removeClass("in").addClass(this.getHideAnimation());var n=this;setTimeout(function(){n.$target.hide(),n.getCache()||n.$target.remove()},n.getHideDelay())}this.options.backdrop&&s.hide(),this._opened=!1,this.$element.trigger("hidden."+g,[this.$target]),this.options.onHide&&this.options.onHide(this.$target)}},resetAutoHide:function(){var e=this,t=e.getAutoHide();t&&(e.autoHideHandler&&clearTimeout(e.autoHideHandler),e.autoHideHandler=setTimeout(function(){e.hide()},t))},delegate:function(e){var t=m(e).data("plugin_"+r);return t||(t=new o(e,this.getDelegateOptions()),m(e).data("plugin_"+r,t)),t},toggle:function(e){var t=this;e&&(e.preventDefault(),e.stopPropagation(),this.options.selector&&(t=this.delegate(e.currentTarget))),t[t.getTarget().hasClass("in")?"hide":"show"]()},hideAll:function(){d()},hideOthers:function(){!function(e){for(var t=null,i=0;i<f.length;i++)(t=u(f[i]))&&t.id!==e.id&&t.hide(!0);a.trigger("hiddenAll."+g)}(this)},show:function(){if(!this._opened){var e=this.getTarget().removeClass().addClass(v).addClass(this._customTargetClass);if(this.options.multi||this.hideOthers(),!this.getCache()||!this._poped||""===this.content){if(this.content="",this.setTitle(this.getTitle()),this.options.closeable||e.find(".close").off("click").remove(),this.isAsync()?this.setContentASync(this.options.content):this.setContent(this.getContent()),this.canEmptyHide()&&""===this.content)return;e.show()}this.displayContent(),this.options.onShow&&this.options.onShow(e),this.bindBodyEvents(),this.options.backdrop&&s.show(),this._opened=!0,this.resetAutoHide()}},displayContent:function(){var e,t=this.getElementPosition(),i=this.getTarget().removeClass().addClass(v).addClass(this._customTargetClass),n=this.getContentElement(),o=i[0].offsetWidth,r=i[0].offsetHeight,s=m.Event("show."+g);if(this.canEmptyHide()){var a=n.children().html();if(null!==a&&0===a.trim().length)return}this.$element.trigger(s,[i]);var l=this.$element.data("width")||this.options.width;""===l&&(l=this._defaults.width),"auto"!==l&&i.width(l);var c=this.$element.data("height")||this.options.height;""===c&&(c=this._defaults.height),"auto"!==c&&n.height(c),this.options.style&&this.$target.addClass(v+"-"+this.options.style),"rtl"!==this.options.direction||n.hasClass(y)||n.addClass(y),this.options.arrow||i.find(".webui-arrow").remove(),i.detach().css({top:x,left:x,display:"block"}),this.getAnimation()&&i.addClass(this.getAnimation()),i.appendTo(this.options.container),e=this.getPlacement(t),this.$element.trigger("added."+g),this.initTargetEvents(),this.options.padding||("auto"!==this.options.height&&n.css("height",n.outerHeight()),this.$target.addClass("webui-no-padding")),this.options.maxHeight&&n.css("maxHeight",this.options.maxHeight),this.options.maxWidth&&n.css("maxWidth",this.options.maxWidth),o=i[0].offsetWidth,r=i[0].offsetHeight;var u=this.getTargetPositin(t,e,o,r);if(this.$target.css(u.position).addClass(e).addClass("in"),"iframe"===this.options.type){var d=i.find("iframe"),p=i.width(),f=d.parent().height();""!==this.options.iframeOptions.width&&"auto"!==this.options.iframeOptions.width&&(p=this.options.iframeOptions.width),""!==this.options.iframeOptions.height&&"auto"!==this.options.iframeOptions.height&&(f=this.options.iframeOptions.height),d.width(p).height(f)}if(this.options.arrow||this.$target.css({margin:0}),this.options.arrow){var h=this.$target.find(".webui-arrow");h.removeAttr("style"),"left"===e||"right"===e?h.css({top:this.$target.height()/2}):"top"!==e&&"bottom"!==e||h.css({left:this.$target.width()/2}),u.arrowOffset&&(-1===u.arrowOffset.left||-1===u.arrowOffset.top?h.hide():h.css(u.arrowOffset))}this._poped=!0,this.$element.trigger("shown."+g,[this.$target])},isTargetLoaded:function(){return 0===this.getTarget().find("i.glyphicon-refresh").length},getTriggerElement:function(){return this.$element},getTarget:function(){if(!this.$target){var e=r+this._idSeed;this.$target=m(this.options.template).attr("id",e),this._customTargetClass=this.$target.attr("class")!==v?this.$target.attr("class"):null,this.getTriggerElement().attr("data-target",e)}return this.$target.data("trigger-element")||this.$target.data("trigger-element",this.getTriggerElement()),this.$target},removeTarget:function(){this.$target.remove(),this.$target=null,this.$contentElement=null},getTitleElement:function(){return this.getTarget().find("."+v+"-title")},getContentElement:function(){return this.$contentElement||(this.$contentElement=this.getTarget().find("."+v+"-content")),this.$contentElement},getTitle:function(){return this.$element.attr("data-title")||this.options.title||this.$element.attr("title")},getUrl:function(){return this.$element.attr("data-url")||this.options.url},getAutoHide:function(){return this.$element.attr("data-auto-hide")||this.options.autoHide},getOffsetTop:function(){return e(this.$element.attr("data-offset-top"))||this.options.offsetTop},getOffsetLeft:function(){return e(this.$element.attr("data-offset-left"))||this.options.offsetLeft},getCache:function(){var e=this.$element.attr("data-cache");if(void 0!==e)switch(e.toLowerCase()){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":return!1}return this.options.cache},getTrigger:function(){return this.$element.attr("data-trigger")||this.options.trigger},getDelayShow:function(){var e=this.$element.attr("data-delay-show");return void 0!==e?e:0===this.options.delay.show?0:this.options.delay.show||100},getHideDelay:function(){var e=this.$element.attr("data-delay-hide");return void 0!==e?e:0===this.options.delay.hide?0:this.options.delay.hide||100},getAnimation:function(){return this.$element.attr("data-animation")||this.options.animation},getHideAnimation:function(){var e=this.getAnimation();return e?e+"-out":"out"},setTitle:function(e){var t=this.getTitleElement();e?("rtl"!==this.options.direction||t.hasClass(y)||t.addClass(y),t.html(e)):t.remove()},hasContent:function(){return this.getContent()},canEmptyHide:function(){return this.options.hideEmpty&&"html"===this.options.type},getIframe:function(){var t=m("<iframe></iframe>").attr("src",this.getUrl()),i=this;return m.each(this._defaults.iframeOptions,function(e){void 0!==i.options.iframeOptions[e]&&t.attr(e,i.options.iframeOptions[e])}),t},getContent:function(){if(this.getUrl())switch(this.options.type){case"iframe":this.content=this.getIframe();break;case"html":try{this.content=m(this.getUrl()),this.content.is(":visible")||this.content.show()}catch(e){throw new Error("Unable to get popover content. Invalid selector specified.")}}else if(!this.content){var e;if(e=m.isFunction(this.options.content)?this.options.content.apply(this.$element[0],[this]):this.options.content,this.content=this.$element.attr("data-content")||e,!this.content){var t=this.$element.next();t&&t.hasClass(v+"-content")&&(this.content=t)}}return this.content},setContent:function(e){var t=this.getTarget(),i=this.getContentElement();"string"==typeof e?i.html(e):e instanceof m&&(i.html(""),this.options.cache?e.removeClass(v+"-content").appendTo(i):e.clone(!0,!0).removeClass(v+"-content").appendTo(i)),this.$target=t},isAsync:function(){return"async"===this.options.type},setContentASync:function(t){var i=this;this.xhr||(this.xhr=m.ajax({url:this.getUrl(),type:this.options.async.type,cache:this.getCache(),beforeSend:function(e,t){i.options.async.before&&i.options.async.before(i,e,t)},success:function(e){i.bindBodyEvents(),t&&m.isFunction(t)?i.content=t.apply(i.$element[0],[e]):i.content=e,i.setContent(i.content),i.getContentElement().removeAttr("style"),i.displayContent(),i.options.async.success&&i.options.async.success(i,e)},complete:function(){i.xhr=null},error:function(e,t){i.options.async.error&&i.options.async.error(i,e,t)}}))},bindBodyEvents:function(){h||(this.options.dismissible&&"click"===this.getTrigger()?i?a.off("touchstart.webui-popover").on("touchstart.webui-popover",m.proxy(this.bodyTouchStartHandler,this)):(a.off("keyup.webui-popover").on("keyup.webui-popover",m.proxy(this.escapeHandler,this)),a.off("click.webui-popover").on("click.webui-popover",m.proxy(this.bodyClickHandler,this))):"hover"===this.getTrigger()&&a.off("touchend.webui-popover").on("touchend.webui-popover",m.proxy(this.bodyClickHandler,this)))},mouseenterHandler:function(e){var t=this;e&&this.options.selector&&(t=this.delegate(e.currentTarget)),t._timeout&&clearTimeout(t._timeout),t._enterTimeout=setTimeout(function(){t.getTarget().is(":visible")||t.show()},this.getDelayShow())},mouseleaveHandler:function(){var e=this;clearTimeout(e._enterTimeout),e._timeout=setTimeout(function(){e.hide()},this.getHideDelay())},escapeHandler:function(e){27===e.keyCode&&this.hideAll()},bodyTouchStartHandler:function(e){var t=this,i=m(e.currentTarget);i.on("touchend",function(e){t.bodyClickHandler(e),i.off("touchend")}),i.on("touchmove",function(){i.off("touchend")})},bodyClickHandler:function(e){for(var t=h=!0,i=0;i<f.length;i++){var n=u(f[i]);if(n&&n._opened){var o=n.getTarget().offset(),r=o.left,s=o.top,a=o.left+n.getTarget().width(),l=o.top+n.getTarget().height(),c=p(e);if(c.x>=r&&c.x<=a&&c.y>=s&&c.y<=l){t=!1;break}}}t&&d()},initTargetEvents:function(){"hover"===this.getTrigger()&&this.$target.off("mouseenter mouseleave").on("mouseenter",m.proxy(this.mouseenterHandler,this)).on("mouseleave",m.proxy(this.mouseleaveHandler,this)),this.$target.find(".close").off("click").on("click",m.proxy(this.hide,this,!0))},getPlacement:function(e){var t,i=this.options.container,n=i.innerWidth(),o=i.innerHeight(),r=i.scrollTop(),s=i.scrollLeft(),a=Math.max(0,e.left-s),l=Math.max(0,e.top-r),c="horizontal"===(t="function"==typeof this.options.placement?this.options.placement.call(this,this.getTarget()[0],this.$element[0]):this.$element.data("placement")||this.options.placement),u="vertical"===t;return"auto"===t||c||u?t=a<n/3?l<o/3?c?"right-bottom":"bottom-right":l<2*o/3?u?l<=o/2?"bottom-right":"top-right":"right":c?"right-top":"top-right":a<2*n/3?l<o/3?c?a<=n/2?"right-bottom":"left-bottom":"bottom":l<2*o/3?c?a<=n/2?"right":"left":l<=o/2?"bottom":"top":c?a<=n/2?"right-top":"left-top":"top":l<o/3?c?"left-bottom":"bottom-left":l<2*o/3?u?l<=o/2?"bottom-left":"top-left":"left":c?"left-top":"top-left":"auto-top"===t?t=a<n/3?"top-right":a<2*n/3?"top":"top-left":"auto-bottom"===t?t=a<n/3?"bottom-right":a<2*n/3?"bottom":"bottom-left":"auto-left"===t?t=l<o/3?"left-top":l<2*o/3?"left":"left-bottom":"auto-right"===t&&(t=l<o/3?"right-bottom":l<2*o/3?"right":"right-top"),t},getElementPosition:function(){var e=this.$element[0].getBoundingClientRect(),t=this.options.container,i=t.css("position");if(t.is(C.body)||"static"===i)return m.extend({},this.$element.offset(),{width:this.$element[0].offsetWidth||e.width,height:this.$element[0].offsetHeight||e.height});if("fixed"!==i)return"relative"===i?{top:this.$element.offset().top-t.offset().top,left:this.$element.offset().left-t.offset().left,width:this.$element[0].offsetWidth||e.width,height:this.$element[0].offsetHeight||e.height}:void 0;var n=t[0].getBoundingClientRect();return{top:e.top-n.top+t.scrollTop(),left:e.left-n.left+t.scrollLeft(),width:e.width,height:e.height}},getTargetPositin:function(e,t,i,n){var o=e,r=this.options.container,s=this.$element.outerWidth(),a=this.$element.outerHeight(),l=C.documentElement.scrollTop+r.scrollTop(),c=C.documentElement.scrollLeft+r.scrollLeft(),u={},d=null,p=this.options.arrow?20:0,f=s<10+p?p:0,h=a<10+p?p:0,m=0,v=C.documentElement.clientHeight+l,g=C.documentElement.clientWidth+c,y=0<o.left+o.width/2-f,k=o.left+o.width/2+f<g,b=0<o.top+o.height/2-h,w=o.top+o.height/2+h<v;switch(t){case"bottom":u={top:o.top+o.height,left:o.left+o.width/2-i/2};break;case"top":u={top:o.top-n,left:o.left+o.width/2-i/2};break;case"left":u={top:o.top+o.height/2-n/2,left:o.left-i};break;case"right":u={top:o.top+o.height/2-n/2,left:o.left+o.width};break;case"top-right":u={top:o.top-n,left:y?o.left-f:10},d={left:y?Math.min(s,i)/2+f:x};break;case"top-left":m=k?f:-10,u={top:o.top-n,left:o.left-i+o.width+m},d={left:k?i-Math.min(s,i)/2-f:x};break;case"bottom-right":u={top:o.top+o.height,left:y?o.left-f:10},d={left:y?Math.min(s,i)/2+f:x};break;case"bottom-left":m=k?f:-10,u={top:o.top+o.height,left:o.left-i+o.width+m},d={left:k?i-Math.min(s,i)/2-f:x};break;case"right-top":m=w?h:-10,u={top:o.top-n+o.height+m,left:o.left+o.width},d={top:w?n-Math.min(a,n)/2-h:x};break;case"right-bottom":u={top:b?o.top-h:10,left:o.left+o.width},d={top:b?Math.min(a,n)/2+h:x};break;case"left-top":m=w?h:-10,u={top:o.top-n+o.height+m,left:o.left-i},d={top:w?n-Math.min(a,n)/2-h:x};break;case"left-bottom":u={top:b?o.top-h:10,left:o.left-i},d={top:b?Math.min(a,n)/2+h:x}}return u.top+=this.getOffsetTop(),u.left+=this.getOffsetLeft(),{position:u,arrowOffset:d}}},m.fn[r]=function(t,i){var n=[],e=this.each(function(){var e=m.data(this,"plugin_"+r);e?"destroy"===t?e.destroy():"string"==typeof t&&n.push(e[t]()):(t?"string"==typeof t?"destroy"!==t&&(i||(e=new o(this,null),n.push(e[t]()))):"object"==_typeof(t)&&(e=new o(this,t)):e=new o(this,null),m.data(this,"plugin_"+r,e))});return n.length?n:e};var l={show:function(e,t){t?m(e).webuiPopover(t).webuiPopover("show"):m(e).webuiPopover("show")},hide:function(e){m(e).webuiPopover("hide")},create:function(e,t){t=t||{},m(e).webuiPopover(t)},isCreated:function(e){var i=!0;return m(e).each(function(e,t){i=i&&void 0!==m(t).data("plugin_"+r)}),i},hideAll:function(){d()},updateContent:function(e,t){var i=m(e).data("plugin_"+r);if(i){var n=i.getCache();i.options.cache=!1,i.options.content=t,i._opened?(i._opened=!1,i.show()):i.isAsync()?i.setContentASync(t):i.setContent(t),i.options.cache=n}},updateContentAsync:function(e,t){var i=m(e).data("plugin_"+r);if(i){var n=i.getCache(),o=i.options.type;i.options.cache=!1,i.options.url=t,i._opened?(i._opened=!1,i.show()):(i.options.type="async",i.setContentASync(i.content)),i.options.cache=n,i.options.type=o}},setDefaultOptions:function(e){n=m.extend({},n,e)}};c.WebuiPopovers=l},"function"==typeof define&&define.amd?define(["jquery"],e):"object"==("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=e(require("jquery")):e(c.jQuery)}(window,document),sectors($(this).scrollTop()),$(window).scroll(function(e){var t=$(this).scrollTop();sectors(t),0<$(".__fix-block").length&&fix_block(t)}),$("body").on("click",".dotts-list li",function(e){var t=$(this).index()+1;$("body,html").animate({scrollTop:$(".sector-"+t).offset().top+0},800,function(){})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
